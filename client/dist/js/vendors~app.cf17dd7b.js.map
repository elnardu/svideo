{"version":3,"sources":["webpack:///./node_modules/socket.io-parser/is-buffer.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/core-js/modules/_html.js","webpack:///./node_modules/m3u8-parser/es5/stream.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-xhr.js","webpack:///./node_modules/blob/index.js","webpack:///./node_modules/socket.io-client/lib/on.js","webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/engine.io-client/lib/socket.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/youtube-player/dist/YouTubePlayer.js","webpack:///./node_modules/core-js/modules/_redefine-all.js","webpack:///./node_modules/m3u8-parser/es5/line-stream.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/youtube-player/dist/FunctionStateMap.js","webpack:///./node_modules/youtube-player/node_modules/debug/src/debug.js","webpack:///./node_modules/pkcs7/lib/unpad.js","webpack:///./node_modules/core-js/modules/_species-constructor.js","webpack:///./node_modules/has-binary2/node_modules/isarray/index.js","webpack:///./node_modules/indexof/index.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/core-js/modules/_an-instance.js","webpack:///./node_modules/engine.io-client/lib/xmlhttprequest.js","webpack:///./node_modules/yeast/index.js","webpack:///./node_modules/backo2/index.js","webpack:///./node_modules/engine.io-client/lib/transports/websocket.js","webpack:///./node_modules/engine.io-client/lib/transports/polling.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-jsonp.js","webpack:///./node_modules/youtube-player/dist/index.js","webpack:///./node_modules/ms/index.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/core-js/modules/_task.js","webpack:///./node_modules/engine.io-client/lib/transport.js","webpack:///./node_modules/core-js/modules/_iter-call.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/core-js/modules/_classof.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/core.get-iterator-method.js","webpack:///./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/socket.io-client/lib/socket.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/vue/dist/vue.runtime.esm.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/core-js/modules/_is-array-iter.js","webpack:///./node_modules/sister/src/sister.js","webpack:///./node_modules/youtube-player/dist/loadYouTubeIframeApi.js","webpack:///./node_modules/aes-decrypter/es5/decrypter.js","webpack:///./node_modules/core-js/modules/_invoke.js","webpack:///./node_modules/load-script/index.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/debug/src/browser.js","webpack:///./node_modules/video.js/dist/video.cjs.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/component-bind/index.js","webpack:///./node_modules/mux.js/lib/m2ts/probe.js","webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///./node_modules/aes-decrypter/es5/stream.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/m3u8-parser/es5/parser.js","webpack:///./node_modules/trim/index.js","webpack:///./node_modules/core-js/modules/_for-of.js","webpack:///./node_modules/parseqs/index.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/parseuri/index.js","webpack:///./node_modules/core-js/modules/es6.promise.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/socket.io-parser/index.js","webpack:///./node_modules/has-binary2/index.js","webpack:///./node_modules/m3u8-parser/es5/parse-stream.js","webpack:///./node_modules/engine.io-parser/lib/browser.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_iter-detect.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/component-inherit/index.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/engine.io-client/lib/transports/index.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/socket.io-parser/binary.js","webpack:///./node_modules/youtube-player/node_modules/debug/src/browser.js","webpack:///./node_modules/component-emitter/index.js","webpack:///./node_modules/pkcs7/lib/pad.js","webpack:///./node_modules/engine.io-parser/lib/keys.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/socket.io-client/lib/manager.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_set-species.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///./node_modules/socket.io-client/lib/index.js","webpack:///./node_modules/core-js/modules/_microtask.js","webpack:///./node_modules/aes-decrypter/es5/aes.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/aes-decrypter/es5/async-stream.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/to-array/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/engine.io-client/lib/index.js","webpack:///./node_modules/debug/src/debug.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/mux.js/lib/aac/probe.js","webpack:///./node_modules/core-js/modules/_perform.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/engine.io-parser/lib/utf8.js","webpack:///./node_modules/socket.io-parser/node_modules/isarray/index.js","webpack:///./node_modules/core-js/modules/_user-agent.js","webpack:///./node_modules/core-js/modules/_new-promise-capability.js","webpack:///./node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/youtube-player/dist/eventNames.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/youtube-player/dist/functionNames.js","webpack:///./node_modules/aes-decrypter/es5/index.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/youtube-player/dist/constants/PlayerStates.js","webpack:///./node_modules/core-js/modules/_promise-resolve.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/m3u8-parser/es5/index.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/has-cors/index.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/arraybuffer.slice/index.js","webpack:///./node_modules/socket.io-client/lib/url.js","webpack:///./node_modules/after/index.js","webpack:///./node_modules/pkcs7/lib/pkcs7.js"],"names":["module","exports","isBuf","withNativeBuffer","global","Buffer","isBuffer","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","scrollSetting","","up","findScrollSetting","value","scroll","toLowerCase","isValidPercentValue","VTTRegion","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","Object","defineProperties","this","width","enumerable","get","set","Error","lines","TypeError","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","setting","SyntaxError","document","__webpack_require__","documentElement","defineProperty","_createClass","target","props","i","length","descriptor","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","Stream","listeners","type","listener","push","index","indexOf","splice","callbacks","args","arguments","call","Array","slice","apply","destination","on","data","it","isFunction","forEach","toString","hasOwnProperty","list","iterator","context","forEachArray","forEachString","forEachObject","array","len","string","charAt","object","k","_objCreate","create","F","o","ParsingError","errorData","message","name","code","parseTimeStamp","input","computeSeconds","h","m","s","f","match","replace","Settings","values","parseOptions","callback","keyValueDelim","groupDelim","groups","split","kv","v","parseCue","cue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","consumeCueSettings","settings","id","region","alt","vals","vals0","integer","percent","vertical","line","lineAlign","snapToLines","size","align","position","start","left","middle","end","right","positionAlign","skipWhitespace","startTime","substr","endTime","constructor","BadSignature","dflt","defaultKey","has","a","n","test","parseInt","parseFloat","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","c","b","u","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","window","nextToken","consume","result","unescape1","e","unescape","shouldAdd","current","element","localName","createElement","annotation","tagName","trim","t","rootDiv","tagStack","appendChild","createTextNode","pop","parentNode","node","createProcessingInstruction","className","strongRTLRanges","isStrongRTLChar","charCode","currentRange","determineBidi","cueDiv","nodeStack","text","childNodes","pushNodes","nextTextNode","textContent","innerText","charCodeAt","computeLinePos","track","textTrackList","mediaElement","trackList","count","mode","StyleBox","CueStyleBox","styleOptions","styles","color","backgroundColor","top","bottom","display","writingMode","unicodeBidi","applyStyles","div","direction","textAlign","font","whiteSpace","textPos","formatStyle","height","move","box","BoxPosition","lh","offsetHeight","offsetWidth","offsetTop","rects","getClientRects","getBoundingClientRect","Math","max","lineHeight","undefined","moveBoxToLinePosition","styleBox","containerBox","boxPositions","findBestPosition","axis","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","p","intersectPercentage","boxPosition","linePos","step","round","maxPosition","initialAxis","abs","ceil","reverse","calculatedPercentage","toCSSCompatValues","WebVTT","prop","style","val","unit","toMove","overlaps","b2","boxes","container","x","min","y","intersectArea","reference","getSimpleBoxPosition","ret","StringDecoder","decode","decodeURIComponent","encodeURIComponent","convertCueToDOMTree","cuetext","FONT_SIZE_PERCENT","FONT_STYLE","CUE_BACKGROUND_PADDING","processCues","cues","overlay","firstChild","removeChild","paddedOverlay","shouldCompute","hasBeenReset","displayState","margin","fontSize","Parser","vttjs","decoder","state","TextDecoder","reportOrThrowError","onparsingerror","parse","self","collectNextLine","pos","parseRegion","xy","anchor","onregion","parseTimestampMap","ontimestampmap","MPEGTS","LOCAL","parseHeader","stream","alreadyCollectedLine","VTTCue","hasSubstring","oncue","flush","onflush","root","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","opts","alwaysNormalize","basePartsForNormalise","parseURL","path","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","exec","builtParts","params","query","fragment","baseURLPath","newPath","substring","lastIndexOf","url","parts","join","XMLHttpRequest","Polling","Emitter","inherit","debug","empty","XHR","requestTimeout","extraHeaders","location","isSSL","protocol","port","xd","hostname","xs","secure","Request","method","uri","async","agent","isBinary","supportsBinary","enablesXDR","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","unloadHandler","requests","abort","request","doWrite","fn","req","err","onError","sendXhr","doPoll","onData","pollXhr","xdomain","xscheme","xhr","open","setDisableHeaderCheck","setRequestHeader","withCredentials","timeout","hasXDR","onload","onLoad","onerror","responseText","onreadystatechange","readyState","contentType","getResponseHeader","responseType","status","setTimeout","send","requestsCount","onSuccess","emit","cleanup","fromError","response","XDomainRequest","attachEvent","addEventListener","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","Blob","blobSupportsArrayBufferView","Uint8Array","blobBuilderSupported","append","getBlob","mapArrayBufferViews","ary","chunk","buf","byteLength","copy","byteOffset","BlobBuilderConstructor","options","bb","BlobConstructor","ev","destroy","removeListener","transports","parser","parseuri","parseqs","Socket","host","upgrade","forceJSONP","jsonp","forceBase64","timestampParam","timestampRequests","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","binaryType","onlyBinaryUpgrades","perMessageDeflate","threshold","forceNode","freeGlobal","keys","localAddress","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","clone","priorWebsocketSuccess","Transport","createTransport","EIO","transport","sid","socket","protocols","shift","setTransport","removeAllListeners","onDrain","packet","onPacket","onClose","probe","failed","onTransportOpen","upgradeLosesBinary","once","msg","upgrading","pause","freezeTransport","close","error","onTransportClose","onclose","onupgrade","to","onOpen","l","onHandshake","JSON","setPing","filterUpgrades","onHeartbeat","clearTimeout","ping","sendPacket","write","compress","waitForUpgrade","cleanupAndClose","reason","desc","filteredUpgrades","j","process","normalizeArray","allowAboveRoot","last","unshift","splitPathRe","splitPath","filename","filter","res","resolve","resolvedPath","resolvedAbsolute","cwd","normalize","isAbsolute","trailingSlash","paths","relative","from","arr","fromParts","toParts","samePartsLength","outputParts","concat","sep","delimiter","dirname","dir","basename","ext","extname","str","StreamTypes","handleRollover","aac","PES_TIMESCALE","MP2T_PACKET_LENGTH","SYNC_BYTE","isLikelyAacData","parsePsi_","bytes","pmt","startIndex","endIndex","subarray","parseType","pid","parsePat","table","parsePmt","parseAudioPes_","pesType","pusi","parsed","endLoop","parsePesType","parsePayloadUnitStartIndicator","parsePesTime","audio","parseVideoPes_","frame","pes","currentFrame","video","firstKeyFrame","videoPacketContainsKeyFrame","adjustTimestamp_","segmentInfo","baseTimestamp","audioBaseTimestamp","dts","info","pts","dtsTime","ptsTime","videoBaseTimestamp","inspectAac_","audioCount","sampleRate","timestamp","frameSize","byteIndex","parseId3TagSize","parseAacTimestamp","parseAdtsSize","parseSampleRate","audioTimescale","inspectTs_","H264_STREAM_TYPE","ADTS_STREAM_TYPE","inspect","isAacData","_debug","_debug2","_interopRequireDefault","_functionNames","_functionNames2","_eventNames","_eventNames2","_FunctionStateMap","_FunctionStateMap2","__esModule","default","YouTubePlayer","proxyEvents","emitter","events","_loop","eventName","onEventName","toUpperCase","event","trigger","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","next","done","return","promisifyPlayer","playerAPIReady","strictState","functions","_loop2","functionName","_len","_key","then","player","stateInfo","playerState","getPlayerState","stateChangeRequired","isArray","acceptableStates","Promise","onPlayerStateChange","playerStateAfterChange","removeEventListener","_len2","_key2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","redefine","src","safe","_stream","_stream2","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","LineStream","_Stream","_this","getPrototypeOf","nextNewline","_PlayerStates","_PlayerStates2","pauseVideo","ENDED","PAUSED","playVideo","PLAYING","seekTo","prevTime","selectColor","namespace","hash","colors","createDebug","enabled","curr","Date","ms","diff","prev","coerce","format","formatter","formatters","formatArgs","logFn","log","console","bind","useColors","init","enable","namespaces","save","names","skips","RegExp","disable","stack","humanize","padded","anObject","aFunction","SPECIES","O","D","S","C","parseHeaders","xtend","isEmpty","initParams","createXHR","_createXHR","called","body","readystatechange","loadFunc","getBody","getXml","isJson","errorFunc","evt","timeoutTimer","statusCode","failureResponse","aborted","useXDR","headers","rawRequest","getAllResponseHeaders","cors","sync","json","stringify","onprogress","onabort","ontimeout","username","password","beforeSend","responseXML","firefoxBugTakenEffect","nodeName","noop","doccy","topLevel","minDoc","forbiddenField","hasCORS","alphabet","map","seed","encode","num","encoded","floor","decoded","yeast","now","Backoff","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","NodeWebSocket","BrowserWebSocket","WebSocket","MozWebSocket","WS","usingBrowserWebSocket","doOpen","check","ws","supports","binary","addEventListeners","onopen","onmessage","packets","total","encodePacket","doClose","schema","Number","b64","ipv6","hasXHR2","poll","onPause","polling","decodePayload","callbackfn","encodePayload","JSONPPolling","rNewline","rEscapedNewline","___eio","script","form","iframe","insertAt","getElementsByTagName","insertBefore","head","isUAgecko","navigator","userAgent","area","iframeId","setAttribute","complete","initIframe","html","action","submit","_typeof","_sister","_sister2","_loadYouTubeIframeApi","_loadYouTubeIframeApi2","_YouTubePlayer","_YouTubePlayer2","youtubeIframeAPI","maybeElementId","getElementById","HTMLElement","YT","Player","Function","playerApi","off","d","String","fmtShort","fmtLong","plural","isNaN","long","clean","sa","defer","channel","ctx","invoke","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","ONREADYSTATECHANGE","run","nextTick","port2","port1","postMessage","importScripts","clear","description","decodePacket","entries","toByteArray","fromByteArray","lookup","revLookup","Arr","getLens","validLen","placeHoldersLen","lens","_byteLength","tmp","curByte","tripletToBase64","encodeChunk","uint8","output","extraBytes","maxChunkLength","len2","cof","TAG","ARG","tryGet","T","B","callee","isObject","is","classof","ITERATOR","Iterators","getIteratorMethod","MAX_TS","RO_THRESH","TimestampRolloverStream","lastDTS","referenceDTS","type_","discontinuity","store","uid","USE_SYMBOL","$exports","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","findBox","timescale","subresults","results","fromCharCode","traks","reduce","trak","tkhd","version","mdhd","trafs","baseTimes","traf","tfhd","scale","baseTime","tfdt","Infinity","isFinite","toArray","hasBin","connect","connect_error","connect_timeout","connecting","disconnect","reconnect","reconnect_attempt","reconnect_failed","reconnect_error","reconnecting","pong","io","nsp","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","autoConnect","subEvents","subs","BINARY_EVENT","EVENT","CONNECT","onpacket","sameNamespace","rootNamespaceError","ERROR","onconnect","onevent","ACK","onack","BINARY_ACK","DISCONNECT","ondisconnect","ack","sent","emitBuffered","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","existing","beforeCreate","__webpack_exports__","hide","SRC","TO_STRING","$toString","TPL","inspectSource","emptyObject","freeze","isUndef","isDef","isTrue","isFalse","isPrimitive","_toString","isPlainObject","isRegExp","isValidArrayIndex","toNumber","makeMap","expectsLowerCase","isReservedAttribute","remove","item","hasOwn","cached","cache","hit","camelizeRE","camelize","_","capitalize","hyphenateRE","hyphenate","polyfillBind","boundFn","_length","nativeBind","extend","_from","toObject","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","every","keysA","keysB","looseIndexOf","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","_lifecycleHooks","isReserved","def","bailRE","parsePath","segments","_isServer","hasProto","inBrowser","inWeex","WXEnvironment","platform","weexPlatform","UA","isIE","isIE9","isEdge","isIOS","nativeWatch","watch","supportsPassive","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Reflect","ownKeys","Set","warn","Dep","addSub","sub","removeSub","depend","addDep","notify","update","targetStack","pushTarget","_target","popTarget","VNode","tag","children","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","createEmptyVNode","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","methodsToPatch","original","inserted","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","vmCount","augment","protoAugment","copyAugment","walk","observe","asRootData","isExtensible","_isVue","defineReactive","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","dependArray","newVal","del","items","strats","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","mergeAssets","key$1","methods","inject","computed","provide","defaultStrat","normalizeProps","normalizeInject","normalized","normalizeDirectives","dirs","directives","mergeOptions","extendsFrom","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","getPropDefaultValue","prevShouldObserve","_props","getType","isSameType","expectedTypes","handleError","cur","$parent","hooks","errorCaptured","capture","globalHandleError","logError","microTimerFunc","macroTimerFunc","pending","flushCallbacks","copies","useMacroTask","withMacroTask","_withTask","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","old","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","lastIndex","_isVList","ensureCtor","comp","base","toStringTag","createAsyncPlaceholder","factory","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","forceRender","$forceUpdate","reject","component","delay","getFirstComponentChild","initEvents","_events","_hasHookEvent","_parentListeners","updateComponentListeners","$once","$on","remove$1","$off","oldListeners","eventsMixin","Vue","hookRE","this$1","cbs","i$1","$emit","resolveSlots","slots","slot","name$1","isWhitespace","resolveScopedSlots","activeInstance","initLifecycle","abstract","$children","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","lifecycleMixin","_update","hydrating","callHook","prevEl","$el","prevVnode","_vnode","prevActiveInstance","__patch__","_parentElm","_refElm","__vue__","$destroy","teardown","_watchers","_data","mountComponent","el","updateComponent","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","_parentVnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","activatedChildren","waiting","flushing","resetSchedulerState","flushSchedulerQueue","watcher","sort","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","queueActivatedComponent","queueWatcher","uid$1","expOrFn","isRenderWatcher","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","oldValue","evaluate","sharedPropertyDefinition","proxy","sourceKey","initState","initProps","initMethods","initData","initComputed","initWatch","propsOptions","isRoot","loop","getData","computedWatcherOptions","watchers","_computedWatchers","isSSR","userDef","defineComputed","shouldCache","createComputedGetter","handler","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","immediate","initProvide","_provided","initInjections","resolveInject","provideKey","source","provideDefault","renderList","renderSlot","fallback","bindObject","nodes","scopedSlotFn","slotNodes","_rendered","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","$event","renderStatic","isInFor","_staticTrees","tree","_renderProxy","markStatic","markOnce","markStaticNode","bindObjectListeners","ours","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","needNormalization","injections","_c","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","componentVNodeHooks","parentElm","refElm","keepAlive","mountedNode","prepatch","createComponentInstanceForVnode","$mount","oldVnode","insert","hooksToMerge","createComponent","_base","cid","resolveConstructorOptions","model","transformModel","nativeOn","installComponentHooks","_isComponent","inlineTemplate","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","_createElement","applyNS","registerDeepBindings","force","class","initRender","parentData","renderMixin","$nextTick","ref","uid$3","initMixin","_init","_uid","initInternalComponent","_self","vnodeComponentOptions","_componentTag","super","superOptions","cachedSuperOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","initUse","use","plugin","installedPlugins","_installedPlugins","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","cached$$1","patternTypes","KeepAlive","include","exclude","created","destroyed","mounted","ref$1","builtInComponents","initGlobalAPI","configDef","util","delete","acceptValue","attr","isEnumeratedAttr","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","isFalsyAttrValue","genClassForVnode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","HTMLUnknownElement","isTextInputType","selected","querySelector","createElement$1","multiple","createElementNS","createComment","newNode","referenceNode","nextSibling","setTextContent","setStyleScope","nodeOps","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","sameInputType","typeA","typeB","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","modules","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","pre","hasChildNodes","innerHTML","childrenMatch","fullInvoke","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","oldElm","parentElm$1","_leaveCb","patchable","i$2","updateDirectives","oldDir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","target$1","klass","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","normalizeEvents","change","createOnceHandler","onceHandler","remove$2","add$1","updateDOMListeners","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","number","parseStyleText","cssText","listDelimiter","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","getStyle","checkChild","styleData","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","enter","toggleDisplay","cancelled","_enterCb","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","platformModules","patch","vmodel","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","needReset","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","createEvent","initEvent","dispatchEvent","locateNode","transition$$1","originalDisplay","__vOriginalDisplay","unbind","platformDirectives","transitionProps","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","callPendingCbs","recordPosition","applyTranslation","_reflow","moved","transform","WebkitTransform","transitionDuration","_moveCb","propertyName","_hasMove","cloneNode","newPos","oldPos","dx","dy","platformComponents","ArrayProto","Sister","sister","_loadScript","_loadScript2","iframeAPIReady","previous","onYouTubeIframeAPIReady","_aes","_aes2","_asyncStream","_asyncStream2","_pkcs7","ntoh","word","decrypt","encrypted","initVector","encrypted32","Int32Array","decipher","decrypted","decrypted32","init0","init1","init2","init3","encrypted0","encrypted1","encrypted2","encrypted3","wordIx","Decrypter","STEP","asyncStream_","decryptChunk_","Uint32Array","unpad","that","un","setAttributes","stdOnEnd","ieOnEnd","charset","onend","dP","createDesc","WebkitAppearance","firebug","exception","$1","lastC","storage","removeItem","load","r","NODE_ENV","BASE_URL","DEBUG","localstorage","localStorage","chrome","local","_interopDefault","ex","window$1","tsml","vtt","safeParseTuple","m3u8Parser","mpdParser","mp4probe","tsInspector","aesDecrypter","level","history","logByType","lvl","levels","lvlRegExp","all","DEFAULT","_len3","_key3","_len4","_key4","log$1","classCallCheck","inherits","possibleConstructorReturn","taggedTemplateLiteralLoose","strings","each","accum","assign","sources","isPlain","computedStyle","cs","_templateObject","isNonBlankString","throwIfWhitespace","classRegExp","isReal","isEl","isInFrame","createQuerier","selector","createEl","properties","attributes","content","propName","attrName","appendContent","prependTo","hasClass","classToCheck","contains","classToAdd","classToRemove","toggleClass","classToToggle","predicate","attrValue","getAttributes","knownBooleans","attrVal","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","rect","findPosition","docEl","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","getPointerPosition","boxW","boxH","boxY","boxX","pageY","pageX","changedTouches","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","_guid","newGUID","elData","elIdAttr","getTime","hasData","removeData","_cleanUpEvents","elem","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","isImmediatePropagationStopped","clientX","doc","clientY","which","keyCode","_supportsPassive","passiveEvents","guid","handlersCopy","removeType","elemData","ownerDocument","bubbles","targetData","one","func","Events","_windowLoaded","videojs","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","wait","vjs","createStyleElement","styleSheet","bound","throttle","throttled","debounce","_later","EventTarget","allowedEvents_","ael","isEvented","eventBusEl_","isValidEventType","validateTarget","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","setState","stateUpdates","changes","stateful","defaultState","handleStateChanged","toTitleCase","titleCaseEquals","str1","str2","Component","ready","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","dispose","localize","tokens","defaultValue","language","languages","primaryCode","primaryLang","localizedString","contentEl","contentEl_","getChildById","getChild","addChild","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","handleAdd","playerOptions","newChild","workingChildren","Tech","wchild","isTech","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","lockShowing","unlockShowing","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","components_","players","playerNames","pname","USER_AGENT","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","DocumentTouch","browser","rangeCheck","fnName","maxIndex","getRange","valueIndex","ranges","rangeIndex","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","silencePromise","trackToJson_","acc","textTracksToJson","tech","trackEls","trackObjs","tracks","trackEl","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","ESC","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","handleKeyPress","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","closeButton","content_","activeEl","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","addtrack","removetrack","disableOthers","AudioTrackList","_TrackList","changing_","disableOthers$1","VideoTrackList","TextTrackList","nonLanguageTextTrackKind","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","parseUrl","href","addToBody","details","getAbsoluteURL","getFileExtension","isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseCues","srcContent","errors","groupCollapsed","groupEnd","loadTrack","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","srclang","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADING","LOADED","HTMLTrackElement","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","middleware","setSourceHelper","setTech","mw","get$1","reduceRight","middlewareIterator","set$1","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","_mws$i","mwf","mwi","lastRun","mwrest","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","oga","m3u8","getMimetype","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","MediaLoader","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","poster","setSrc","backgroundImage","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","tryUpdateStyle","TextTrackDisplay","preselectTrack","modes","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","gm","gh","implementation","setFormatTime","customImplementation","resetFormatTime","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","STEP_SECONDS","UPDATE_REFRESH_INTERVAL","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","stepChild","haveTitle","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","hideThreshold_","title","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","getSelectedOptionValue","setSelectedOption","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","setValues","getItem","setItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","contentWindow","unobserve","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","elTracks","proxyNativeTracksForType_","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","tagAttributes","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","patchCanPlayType","unpatchCanPlayType","_templateObject$2","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","languagesToLower","name$$1","languages_","poster_","controls_","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","fluid_","ratio","aspectRatio_","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","width_","height_","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","autoplay","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateCache","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","finder","_ref2","sourceOrder","_this8","middlewareSource","src_","notSupportedMessage","_this9","sourceTech","currentSources","currentSource","currentType","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","isAudio_","_ref3","_ref3$track","toJSON","createModal","_this10","modal","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","basicPluginWrapper","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","isBasic","registerPlugin","deregisterPlugin","getPlugins","getPluginVersion","usingPlugin","hasPlugin","super_","extendFn","subClassMethods","normalizeId","videojs$1","getPlayer","hookFunction","PlayerComponent","hooks_","hookOnce","removeHook","style$1","getPlayers","nId","_tag","_player","getAllPlayers","writeable","addLanguage","_mergeOptions","createTimeRange","dom","resolveUrl","mergeOptions$1","EventTarget$1","log$2","forEachMediaGroup","master","mediaType","groupKey","mediaGroups","labelKey","mediaProperties","updateSegments","offset","resolveSegmentUris","segment","baseUri","resolvedUri","updateMaster","media","playlist","playlists","mediaSequence","mergedPlaylist","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","targetDuration","PlaylistLoader","srcUrl","hls","hls_","playlistRequestError","haveMetadata","xhr$$1","startingState","manifest","media_","endList","mediaUpdateTimeout","stopRequest","oldRequest","mediaChange","started","isFinalRendition","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","backwardDuration","endSequence","precise","forwardDuration","intervalDuration","expired","backward","forward","totalDuration","sumDurations","_i2","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","seekableStart","seekableEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","getMediaInfoForTime","numSegments","mediaIndex","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","BANDWIDTH","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","textRange","range","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","initSegment","byterange","hexDump","hex","ascii","tagDump","textRanges","utils","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","findGaps","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","createTextTracksIfNecessary","sourceBuffer","mediaSource","trackId","inbandTextTracks_","captionStreams","metadataTrack_","inBandMetadataTrackDispatchType","dispatchType","removeCuesFromTrack","deprecateOldCue","privateData","durationOfVideo","dur","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","timestampOffset","videoDuration","mediaSource_","cueTime","frames","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","win","TARGET","SCRIPT_TYPE","URL","webkitURL","msURL","Worker","shimWorker","forceFallback","objURL","createSourceObject","wrapTerminate","selfShim","isThisThread","testWorker","testArray","revokeObjectURL","terminate","createObjectURL","blob","worker","term","TransmuxWorker","document$$1","commonjsGlobal","dinf","esds","ftyp","mdat","mfhd","minf","moof","moov","mvex","mvhd","mdia","hdlr","sdtp","stbl","stsd","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","window_1","UINT32_MAX","avc1","avcC","btrt","dref","mp4a","smhd","stco","stsc","stsz","stts","styp","vmhd","view","payload","DataView","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","samples","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","dataOffset","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","mp4Generator","fileType","movie","pipe","flushSource","USER_DATA_REGISTERED_ITU_T_T35","RBSP_TRAILING_BITS","parseSei","payloadType","payloadSize","parseUserData","sei","parseCaptionPackets","userData","ccData","CaptionStream","captionPackets_","ccStreams_","Cea608Stream","cc","nalUnitType","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","BOTTOM_ROW","ROWS","createDisplayBuffer","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","topRow_","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","row_","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","startPts","endPts","BASE_","EXT_","CONTROL_","OFFSET_","char","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","METADATA_STREAM_TYPE","_MetadataStream","timestampRolloverStream","percentEncode","parseUtf8","parseIso88591","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","tagSize","bufferSize","frameStart","frameHeader","dataAlignmentIndicator","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","TimestampRolloverStream$1","bytesInBuffer","everything","parsePsi","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","sectionLength","tableEnd","programInfoLength","timed-metadata","streamType","processPes_","STREAM_TYPES","h264","adts","timedMetadata","parsePes","ptsDtsFlags","packetLength","flushStream","stream$$1","forceFlush","packetData","packetFlushable","timelineStartInfo","codec","m2ts","PAT_PID","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","ADTS_SAMPLING_FREQUENCIES","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","getUint32","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","deltaScale","lastScale","nextScale","newLength","newData","emulationPreventionBytesPositions","sourceIndex","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","aspectRatioIdc","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","H264Stream","NalByteStream","setTimestamp","header","returnSize","footerPresent","lowThree","highTwo","bytesLeft","tempLength","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","highPrefix","lowPrefix","zeroFill","makeTable","metaTable","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","ONE_SECOND_IN_TS","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","createDefaultSample","collectDtsInfo","clearDtsInfo","calculateTrackBaseMediaDecodeTime","arrayEquals","sumFrameByteLengths","clock","AUDIO_PROPERTIES","VIDEO_PROPERTIES","ONE_SECOND_IN_TS$1","currentObj","sum","adtsFrames","earliestAllowedDts","audioAppendStartTs","videoBaseMediaDecodeTime","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","trimAdtsFramesByEarliestDts_","keepOriginalTimestamps","prefixWithSilence_","generateSampleTable_","concatenateFrameData_","baseMediaDecodeTimeTs","silentFrame","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","minSegmentDts","minSegmentPts","nalUnits","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","gops","resetStream_","groupNalsIntoFrames_","groupFramesIntoGops_","keyFrame","getGopForFusion_","nalCount","extendFirstKeyFrame_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","concatenateNalData_","dtsDistance","nearestGopObj","currentGop","currentGopObj","halfSecond","allowableOverlap","nearestDistance","currentNal","baseDataOffset","nalsByteLength","numberOfNals","totalByteLength","alignIndex","gopIndex","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","maxSegmentPts","maxSegmentDts","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","audioTrack","id3","timelineStartPts","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","setupTsPipeline","packetStream","parseStream","elementaryStream","videoTimestampRolloverStream","h264Stream","videoSegmentStream","setBaseMediaDecodeTime","isAac","resetCaptions","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","generator","classCallCheck$$1","createClass$$1","wireTransmuxerEvents","initArray","typedArray","gopInfo","MessageHandlers","appendStart","TransmuxerWorker","messageHandlers","transmuxerWorker","isAudioCodec","isVideoCodec","parseContentType","parameters","parameter","pair","translateLegacyCodecs","codecs","orig","profile","avcLevel","profileHex","avcLevelHex","makeWrappedSourceBuffer","mimeType","addSourceBuffer","updating","realBuffer_","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","VirtualSourceBuffer","_videojs$EventTarget","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoBuffer_","audioBuffer_","appendWindowStart","arity","extents","videoBuffered","audioBuffered","processPendingSegments_","createRealSourceBuffers_","codecProperty","nativeMediaSource_","shouldTrigger","appendBuffer","sortedSegments","segmentObj","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","originalError","HtmlMediaSource","_videojs$EventTarget2","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","addSeekableRange_","parsedType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","objectUrlPrefix","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","minimumUpdatePeriod","playlistUpdate","group","_playlistUpdate","DashPlaylistLoader","_EventTarget$","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","masterPlaylistLoader_","parseMasterXml","masterXml_","manifestUri","clientOffset","clientOffset_","phonyUri","_phonyUri","_this11","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","_this12","utcTiming","parseUTCTiming","serverTime","_this13","_this14","_this15","updatedMaster","logger","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","_this16","sourceBuffer_","start_","_this17","started_","onUpdateendCallback_","pendingCallback","runCallback_","_this18","queueCallback_","_this19","_this20","_this21","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","byterangeStr","byterangeStart","byterangeEnd","segmentXhrHeaders","Range","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","loaded","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","handleInitSegmentResponse","handleSegmentResponse","encryptedBytes","decryptSegment","decrypter","doneFn","decryptionHandler","requestId","iv","getMostImportantError","waitForCompletion","endOfAllRequests","worstError","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","keyRequestOptions","keyRequestCallback","keyXhr","initSegmentOptions","initSegmentRequestCallback","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","parseCodecs","codecCount","mapLegacyAvcCodecs","codecString","makeMimeTypeString","getContainerType","getCodecs","mediaAttributes","CODECS","audioProfileFromDefault","audioGroupId","audioGroup","audioType","mimeTypesForPlaylist","containerType","codecInfo","isMuxed","isMaat","groupId","codecStrings","justAudio","justVideo","bothVideoAudio","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","comparePlaylistResolution","leftWidth","rightWidth","RESOLUTION","simpleSelector","playerBandwidth","playerWidth","playerHeight","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","lastBandwidthSelector","systemBandwidth","minRebufferMaxBandwidthSelector","duration$$1","currentTimeline","syncController","compatiblePlaylists","enabledPlaylists","bandwidthPlaylists","rebufferingEstimates","getSyncPoint","numRequests","requestTimeEstimate","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","playlistsWithVideo","CHECK_BUFFER_DELAY","detectEndOfStream","segmentIndex","appendedLastSegment","finite","illegalMediaSwitch","loaderType","startingMedia","newSegmentMedia","containsAudio","containsVideo","safeBackBufferTrimTime","seekable$$1","removeToTime","segmentInfoString","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","timeline","SegmentLoader","_videojs$EventTarget3","_this22","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","decrypter_","syncController_","syncPoint_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","endOfStream","buffered_","set$$1","storedMap","couldBeginLoading_","playlist_","setDateTimeMapping","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","checkBuffer_","isEndOfStream","startOfSegment","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","_this23","segmentIndexArray","isSyncRequest","abortRequestEarly_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","handleProgress_","simpleSegment","trimBackBuffer_","createSimplifiedSegmentObj_","segmentRequestFinished_","processSegmentResponse_","handleSegment_","_this24","timingInfo","probeSegmentInfo","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","resolution","VTT_LINE_TERMINATORS","uintToString","uintArray","VTTSegmentLoader","_SegmentLoader","_this25","subtitlesTrack_","combinedByteLength","combinedSegment","_track","_this26","skipEmptySegments_","timestampOffsetForTimeline","checkTimestampOffset","_this27","requested","parseVTTCues_","updateTimeMapping_","timelines","decodeBytesToString","timestampmap","mapData","segmentData","mappingObj","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","updateAdCues","cueOut","adOffset","adTotal","_segment$cueOutCont$s","cueOutCont","tsprobe","syncPointStrategies","datetimeToDisplayTime","lastDistance","dateTimeObject","segmentTime","segmentStart","distance","discontinuityStarts","discontinuitySequence","discontinuitySync","discontinuities","SyncController","_videojs$EventTarget4","_this28","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","getExpiredTime","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timescales","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","inherits$$1","possibleConstructorReturn$$1","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","_tables","encKey","decKey","keyLen","rcon","out","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream$$1","jobs","timeout_","processJob_","job","decrypt$$1","Decrypter$$1","DecrypterWorker","decrypterWorker","audioTrackKind_","characteristics","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","_settings$segmentLoad","segmentLoaders","mainSegmentLoader","mediaTypes","activeTrack","activeGroup","previousActiveLoader","onTrackChanged","_settings$segmentLoad2","blacklistCurrentPlaylist","defaultTrack","setupListeners","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groupPlaylists","variantLabel","matchingPlaylists","_settings$mediaTypes$2","forced","_settings$mediaTypes$3","instreamId","variants","setupMediaGroups","onAudioTrackChanged","createMediaTypes","ABORT_EARLY_BLACKLIST_SECONDS","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","_videojs$EventTarget5","_this29","externHls","useCueTags","enableLowInitialPlaylist","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","_this30","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","onDurationchange","playlistOutdated","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","mediaGroup","_this31","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","mediaSecondsLoaded_","fastQualityChange_","_this32","absolutePlaylistEnd","pauseLoading","mainSeekable","audioSeekable","_this33","oldDuration","newDuration","setDuration","_this34","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","variantCodecs","enableFunction","loader","playlistUri","changePlaylistFn","incompatible","currentlyEnabled","Representation","hlsHandler","fastChangeFunction","masterPlaylistController_","renditionSelectionMixin","representations","timerCancelEvents","PlaybackWatcher","_this35","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reinitPlugin","reloadSourceOnError","version$1","Hls$1","AsyncStream","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","INITIAL_BANDWIDTH","simpleTypeFromSourceType","dashRE","handleHlsMediaChange","qualityLevels","selectedIndex_","handleHlsLoadedMetadata","addQualityLevel","emeKeySystems","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","keySystem","audioContentType","videoContentType","contentProtection","pssh","setupEmeOptions","eme","sourceOptions","source_","keySystems","supportsNativeHls","canPlay","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","HlsHandler","_this36","vhs","dash","ignoreNextSeekingEvent_","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","_this37","_this38","playbackWatcher_","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","currentTech","playerDimensions","setupQualityLevels_","_this39","qualityLevels_","HlsSourceHandler","_videojs$mergeOptions","supportedType","canUseMsePlayback","arch","execPath","argv","chdir","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","parsePid","parseAdaptionField","payloadOffset","parseNalUnitType","nalType","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","bitmap","_extends","_lineStream","_lineStream2","_parseStream","_parseStream2","lineStream","uris","currentUri","currentMap","defaultMediaGroups","allowCache","entry","rendition","allow-cache","allowed","endlist","inf","METHOD","URI","IV","media-sequence","discontinuity-sequence","playlist-type","playlistType","stream-inf","TYPE","NAME","mediaGroupType","autoselect","AUTOSELECT","LANGUAGE","CHARACTERISTICS","FORCED","program-date-time","dateTimeString","targetduration","totalduration","cue-out","cue-out-cont","cue-in","cueIn","tagType","comment","isArrayIter","toLength","getIterFn","BREAK","RETURN","iterable","iterFn","qs","qry","pairs","re","authority","ipv6uri","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","LIBRARY","$export","anInstance","forOf","speciesConstructor","task","microtask","newPromiseCapabilityModule","perform","promiseResolve","PROMISE","versions","v8","$Promise","isNode","newPromiseCapability","USE_NATIVE","promise","FakePromise","PromiseRejectionEvent","isThenable","isReject","chain","ok","reaction","exited","fail","domain","_h","onHandleUnhandled","onUnhandled","unhandled","isUnhandled","onunhandledrejection","_a","onrejectionhandled","$reject","_d","_w","$resolve","executor","onFulfilled","onRejected","catch","G","W","capability","$$reject","iter","remaining","$index","alreadyCalled","race","core","SHARED","copyright","Encoder","Decoder","ERROR_PACKET","encodeAsString","attachments","tryStringify","encodeAsBinary","writeEncoding","bloblessData","deconstruction","deconstructPacket","pack","buffers","removeBlobs","reconstructor","decodeString","tryParse","isPayloadValid","BinaryReconstructor","reconPack","encoding","base64","takeBinaryData","finishedReconstruction","binData","reconstructPacket","withNativeBlob","withNativeFile","File","hasBinary","_slicedToArray","sliceIterator","_arr","attributeSeparator","keyvalue","parseAttributes","ParseStream","BYTERANGE","_attributes$BYTERANGE","_attributes$BYTERANGE2","base64encoder","sliceBuffer","after","utf8","isAndroid","isPhantomJS","dontSendBlobs","packetslist","encodeBase64Object","encodeArrayBuffer","encodeBase64Packet","contentArray","resultBuffer","encodeBlobAsArrayBuffer","fr","FileReader","readAsArrayBuffer","encodeBlob","tryDecode","strict","eachWithIndex","utf8encode","b64data","readAsDataURL","typed","basic","btoa","utf8decode","decodeBase64Packet","asArray","rest","encodePayloadAsBlob","encodePayloadAsArrayBuffer","setLengthHeader","encodeOne","doneCallback","decodePayloadAsBinary","chr","encodedPackets","totalLength","resultArray","bufferIndex","isString","ab","lenStr","binaryIdentifier","lengthAry","bufferTail","tailArray","msgLength","PROTOTYPE","own","exp","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","P","IS_BIND","expProto","U","R","SAFE_CLOSING","riter","skipClosing","webpackPolyfill","deprecate","JSONP","websocket","valueOf","_deconstructPacket","_placeholder","_reconstructPacket","_removeBlobs","curKey","containingObject","pendingBlobs","fileReader","_callbacks","hasListeners","PADDING","plaintext","padding","__g","eio","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","lastPing","packetBuffer","_parser","encoder","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","skipReconnect","openSub","errorSub","timer","onping","onpong","ondata","ondecoded","onConnecting","processPacketQueue","subsLength","onreconnect","attempt","DESCRIPTORS","KEY","FProto","nameRE","alert","confirm","prompt","__e","chars","arraybuffer","encoded1","encoded2","encoded3","encoded4","bufferLength","managers","newConnection","forceNew","multiplex","macrotask","MutationObserver","WebKitMutationObserver","standalone","toggle","characterData","global_window__WEBPACK_IMPORTED_MODULE_1__","global_window__WEBPACK_IMPORTED_MODULE_1___default","formatAudioPlaylist","_attributes","periodIndex","formatVttPlaylist","_attributes2","baseUrl","sourceDuration","organizeAudioPlaylists","organizeVttPlaylists","formatVideoPlaylist","_attributes3","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoOnly","_ref4","audioOnly","_ref5","vttOnly","_ref6","videoPlaylists","audioPlaylists","vttPlaylists","merge","objects","relativeUrl","url_toolkit__WEBPACK_IMPORTED_MODULE_0___default","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","startRange","endRange","getLiveRValue","NOW","availabilityStartTime","_attributes$timescale","_attributes$start","_attributes$minimumUp","periodStartWC","periodEndWC","periodDuration","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","repeat","nextS","flatten","lists","segmentRange","static","dynamic","_attributes$timeShift","timeShiftBufferDepth","segmentCount","availableStart","availableEnd","toSegments","_attributes$timescale3","parseByDuration","_attributes$timescale4","_segmentRange$type","identifierPattern","identifierReplacement","identifier","constructTemplateUrl","parseTemplateInfo","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","Time","INVALID_NUMBER_OF_PERIOD","DASH_EMPTY_MANIFEST","DASH_INVALID_XML","NO_BASE_URL","MISSING_SEGMENT_INFORMATION","SEGMENT_TIME_UNSPECIFIED","UNSUPPORTED_UTC_TIMING_SCHEME","SegmentURLToSegmentObject","segmentUrl","mediaRange","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentTimeInfo","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentAttributes","segmentsFn","template","_segmentAttributes","_segmentAttributes$ti","toPlaylists","findChildren","getContent","parseDuration","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MIN","durationRegex","_match$slice","year","month","day","hour","minute","second","parseDate","dateRegex","parsers","mediaPresentationDuration","parsedValue","parseFn","decodeB64ToUint8Array","b64Text","decodedString","atob","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","inheritBaseUrls","adaptationSetAttributes","adaptationSetBaseUrls","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","generateKeySystemInformation","contentProtectionNodes","schemeIdUri","psshNode","psshBuffer","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","roleAttributes","toAdaptationSets","mpdAttributes","mpdBaseUrls","period","periodAtt","adaptationSets","inheritAttributes","mpd","_options$manifestUri","_options$NOW","_options$clientOffset","periods","stringToMpdXml","manifestString","DOMParser","xml","parseFromString","parseUTCTimingScheme","UTCTimingNode","IE8_DOM_DEFINE","toPrimitive","Attributes","_get","_x","_x2","_x3","_again","receiver","SafeParseTuple","reviver","read","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","LN2","instances","toInteger","__WEBPACK_AMD_DEFINE_RESULT__","freeExports","byteArray","byteCount","stringFromCharCode","ucs2decode","extra","ucs2encode","checkScalarValue","codePoint","createByte","encodeCodePoint","symbol","codePoints","byteString","readContinuationByte","continuationByte","decodeSymbol","byte1","byte2","byte3","byte4","PromiseCapability","$$resolve","autoKeyword","directionSetting","lr","rl","alignSetting","findDirectionSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","getCueAsHTML","_decrypter","ieee754","typedArraySupport","foo","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","RangeError","encodingOrOffset","allocUnsafe","fromArrayBuffer","fromString","fromObject","assertSize","alloc","checked","isEncoding","fromArrayLike","isnan","SlowBuffer","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","bidirectionalIndexOf","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","hexWrite","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","compare","swap16","swap32","swap64","equals","thisStart","thisEnd","thisCopy","targetCopy","includes","MAX_ARGUMENTS_LENGTH","toHex","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","base64clean","stringtrim","units","leadSurrogate","hi","lo","dst","BUFFERING","UNSTARTED","VIDEO_CUED","promiseCapability","_parser2","g","eval","px","abv","ii","loc","err_cb","bail","pad"],"mappings":"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","file":"js/vendors~app.cf17dd7b.js","sourcesContent":["\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof global.Buffer === 'function' && typeof global.Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof global.ArrayBuffer === 'function';\n\nvar isView = (function () {\n  if (withNativeArrayBuffer && typeof global.ArrayBuffer.isView === 'function') {\n    return global.ArrayBuffer.isView;\n  } else {\n    return function (obj) { return obj.buffer instanceof global.ArrayBuffer; };\n  }\n})();\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && global.Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof global.ArrayBuffer || isView(obj)));\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    _classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  _createClass(Stream, [{\n    key: 'on',\n    value: function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {String} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {Boolean} if we could turn it off or not\n     */\n\n  }, {\n    key: 'off',\n    value: function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n\n      var index = this.listeners[type].indexOf(listener);\n\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {String} type the event name\n     */\n\n  }, {\n    key: 'trigger',\n    value: function trigger(type) {\n      var callbacks = this.listeners[type];\n      var i = void 0;\n      var length = void 0;\n      var args = void 0;\n\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = Array.prototype.slice.call(arguments, 1);\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    }\n\n    /**\n     * Destroys the stream and cleans up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n  }, {\n    key: 'pipe',\n    value: function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    }\n  }]);\n\n  return Stream;\n}();\n\nexports['default'] = Stream;","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isFunction = require('is-function')\n\nmodule.exports = forEach\n\nvar toString = Object.prototype.toString\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction forEach(list, iterator, context) {\n    if (!isFunction(iterator)) {\n        throw new TypeError('iterator must be a function')\n    }\n\n    if (arguments.length < 3) {\n        context = this\n    }\n    \n    if (toString.call(list) === '[object Array]')\n        forEachArray(list, iterator, context)\n    else if (typeof list === 'string')\n        forEachString(list, iterator, context)\n    else\n        forEachObject(list, iterator, context)\n}\n\nfunction forEachArray(array, iterator, context) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            iterator.call(context, array[i], i, array)\n        }\n    }\n}\n\nfunction forEachString(string, iterator, context) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        iterator.call(context, string.charAt(i), i, string)\n    }\n}\n\nfunction forEachObject(object, iterator, context) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            iterator.call(context, object[k], k, object)\n        }\n    }\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","// see https://tools.ietf.org/html/rfc1808\r\n\r\n/* jshint ignore:start */\r\n(function(root) { \r\n/* jshint ignore:end */\r\n\r\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/\\;?#]*)?(.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\r\n  var FIRST_SEGMENT_REGEX = /^([^\\/;?#]*)(.*)$/;\r\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\r\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\r\n\r\n  var URLToolkit = { // jshint ignore:line\r\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\r\n    // E.g\r\n    // With opts.alwaysNormalize = false (default, spec compliant)\r\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\r\n    // With opts.alwaysNormalize = true (not spec compliant)\r\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\r\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\r\n      opts = opts || {};\r\n      // remove any remaining space and CRLF\r\n      baseURL = baseURL.trim();\r\n      relativeURL = relativeURL.trim();\r\n      if (!relativeURL) {\r\n        // 2a) If the embedded URL is entirely empty, it inherits the\r\n        // entire base URL (i.e., is set equal to the base URL)\r\n        // and we are done.\r\n        if (!opts.alwaysNormalize) {\r\n          return baseURL;\r\n        }\r\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\r\n        if (!basePartsForNormalise) {\r\n          throw new Error('Error trying to parse base URL.');\r\n        }\r\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\r\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\r\n      }\r\n      var relativeParts = URLToolkit.parseURL(relativeURL);\r\n      if (!relativeParts) {\r\n        throw new Error('Error trying to parse relative URL.');\r\n      }\r\n      if (relativeParts.scheme) {\r\n        // 2b) If the embedded URL starts with a scheme name, it is\r\n        // interpreted as an absolute URL and we are done.\r\n        if (!opts.alwaysNormalize) {\r\n          return relativeURL;\r\n        }\r\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\r\n        return URLToolkit.buildURLFromParts(relativeParts);\r\n      }\r\n      var baseParts = URLToolkit.parseURL(baseURL);\r\n      if (!baseParts) {\r\n        throw new Error('Error trying to parse base URL.');\r\n      }\r\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\r\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\r\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\r\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\r\n        baseParts.netLoc = pathParts[1];\r\n        baseParts.path = pathParts[2];\r\n      }\r\n      if (baseParts.netLoc && !baseParts.path) {\r\n        baseParts.path = '/';\r\n      }\r\n      var builtParts = {\r\n        // 2c) Otherwise, the embedded URL inherits the scheme of\r\n        // the base URL.\r\n        scheme: baseParts.scheme,\r\n        netLoc: relativeParts.netLoc,\r\n        path: null,\r\n        params: relativeParts.params,\r\n        query: relativeParts.query,\r\n        fragment: relativeParts.fragment\r\n      };\r\n      if (!relativeParts.netLoc) {\r\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\r\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\r\n        // (if any) of the base URL.\r\n        builtParts.netLoc = baseParts.netLoc;\r\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\r\n        // path is not relative and we skip to Step 7.\r\n        if (relativeParts.path[0] !== '/') {\r\n          if (!relativeParts.path) {\r\n            // 5) If the embedded URL path is empty (and not preceded by a\r\n            // slash), then the embedded URL inherits the base URL path\r\n            builtParts.path = baseParts.path;\r\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\r\n            // step 7; otherwise, it inherits the <params> of the base\r\n            // URL (if any) and\r\n            if (!relativeParts.params) {\r\n              builtParts.params = baseParts.params;\r\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\r\n              // step 7; otherwise, it inherits the <query> of the base\r\n              // URL (if any) and we skip to step 7.\r\n              if (!relativeParts.query) {\r\n                builtParts.query = baseParts.query;\r\n              }\r\n            }\r\n          } else {\r\n            // 6) The last segment of the base URL's path (anything\r\n            // following the rightmost slash \"/\", or the entire path if no\r\n            // slash is present) is removed and the embedded URL's path is\r\n            // appended in its place.\r\n            var baseURLPath = baseParts.path;\r\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\r\n            builtParts.path = URLToolkit.normalizePath(newPath);\r\n          }\r\n        }\r\n      }\r\n      if (builtParts.path === null) {\r\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\r\n      }\r\n      return URLToolkit.buildURLFromParts(builtParts);\r\n    },\r\n    parseURL: function(url) {\r\n      var parts = URL_REGEX.exec(url);\r\n      if (!parts) {\r\n        return null;\r\n      }\r\n      return {\r\n        scheme: parts[1] || '',\r\n        netLoc: parts[2] || '',\r\n        path: parts[3] || '',\r\n        params: parts[4] || '',\r\n        query: parts[5] || '',\r\n        fragment: parts[6] || ''\r\n      };\r\n    },\r\n    normalizePath: function(path) {\r\n      // The following operations are\r\n      // then applied, in order, to the new path:\r\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\r\n      // segment, are removed.\r\n      // 6b) If the path ends with \".\" as a complete path segment,\r\n      // that \".\" is removed.\r\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\r\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\r\n      // complete path segment not equal to \"..\", are removed.\r\n      // Removal of these path segments is performed iteratively,\r\n      // removing the leftmost matching pattern on each iteration,\r\n      // until no matching pattern remains.\r\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\r\n      // complete path segment not equal to \"..\", that\r\n      // \"<segment>/..\" is removed.\r\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\r\n      return path.split('').reverse().join('');\r\n    },\r\n    buildURLFromParts: function(parts) {\r\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\r\n    }\r\n  };\r\n\r\n/* jshint ignore:start */\r\n  if(typeof exports === 'object' && typeof module === 'object')\r\n    module.exports = URLToolkit;\r\n  else if(typeof define === 'function' && define.amd)\r\n    define([], function() { return URLToolkit; });\r\n  else if(typeof exports === 'object')\r\n    exports[\"URLToolkit\"] = URLToolkit;\r\n  else\r\n    root[\"URLToolkit\"] = URLToolkit;\r\n})(this);\r\n/* jshint ignore:end */\r\n","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0)\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/probe.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _debug = require('debug');\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _functionNames = require('./functionNames');\n\nvar _functionNames2 = _interopRequireDefault(_functionNames);\n\nvar _eventNames = require('./eventNames');\n\nvar _eventNames2 = _interopRequireDefault(_eventNames);\n\nvar _FunctionStateMap = require('./FunctionStateMap');\n\nvar _FunctionStateMap2 = _interopRequireDefault(_FunctionStateMap);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar debug = (0, _debug2.default)('youtube-player');\n\nvar YouTubePlayer = {};\n\n/**\n * Construct an object that defines an event handler for all of the YouTube\n * player events. Proxy captured events through an event emitter.\n *\n * @todo Capture event parameters.\n * @see https://developers.google.com/youtube/iframe_api_reference#Events\n */\nYouTubePlayer.proxyEvents = function (emitter) {\n  var events = {};\n\n  var _loop = function _loop(eventName) {\n    var onEventName = 'on' + eventName.slice(0, 1).toUpperCase() + eventName.slice(1);\n\n    events[onEventName] = function (event) {\n      debug('event \"%s\"', onEventName, event);\n\n      emitter.trigger(eventName, event);\n    };\n  };\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = _eventNames2.default[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var eventName = _step.value;\n\n      _loop(eventName);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return events;\n};\n\n/**\n * Delays player API method execution until player state is ready.\n *\n * @todo Proxy all of the methods using Object.keys.\n * @todo See TRICKY below.\n * @param playerAPIReady Promise that resolves when player is ready.\n * @param strictState A flag designating whether or not to wait for\n * an acceptable state when calling supported functions.\n * @returns {Object}\n */\nYouTubePlayer.promisifyPlayer = function (playerAPIReady) {\n  var strictState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var functions = {};\n\n  var _loop2 = function _loop2(functionName) {\n    if (strictState && _FunctionStateMap2.default[functionName]) {\n      functions[functionName] = function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return playerAPIReady.then(function (player) {\n          var stateInfo = _FunctionStateMap2.default[functionName];\n          var playerState = player.getPlayerState();\n\n          // eslint-disable-next-line no-warning-comments\n          // TODO: Just spread the args into the function once Babel is fixed:\n          // https://github.com/babel/babel/issues/4270\n          //\n          // eslint-disable-next-line prefer-spread\n          var value = player[functionName].apply(player, args);\n\n          // TRICKY: For functions like `seekTo`, a change in state must be\n          // triggered given that the resulting state could match the initial\n          // state.\n          if (stateInfo.stateChangeRequired ||\n\n          // eslint-disable-next-line no-extra-parens\n          Array.isArray(stateInfo.acceptableStates) && stateInfo.acceptableStates.indexOf(playerState) === -1) {\n            return new Promise(function (resolve) {\n              var onPlayerStateChange = function onPlayerStateChange() {\n                var playerStateAfterChange = player.getPlayerState();\n\n                var timeout = void 0;\n\n                if (typeof stateInfo.timeout === 'number') {\n                  timeout = setTimeout(function () {\n                    player.removeEventListener('onStateChange', onPlayerStateChange);\n\n                    resolve();\n                  }, stateInfo.timeout);\n                }\n\n                if (Array.isArray(stateInfo.acceptableStates) && stateInfo.acceptableStates.indexOf(playerStateAfterChange) !== -1) {\n                  player.removeEventListener('onStateChange', onPlayerStateChange);\n\n                  clearTimeout(timeout);\n\n                  resolve();\n                }\n              };\n\n              player.addEventListener('onStateChange', onPlayerStateChange);\n            }).then(function () {\n              return value;\n            });\n          }\n\n          return value;\n        });\n      };\n    } else {\n      functions[functionName] = function () {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return playerAPIReady.then(function (player) {\n          // eslint-disable-next-line no-warning-comments\n          // TODO: Just spread the args into the function once Babel is fixed:\n          // https://github.com/babel/babel/issues/4270\n          //\n          // eslint-disable-next-line prefer-spread\n          return player[functionName].apply(player, args);\n        });\n      };\n    }\n  };\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = _functionNames2.default[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var functionName = _step2.value;\n\n      _loop2(functionName);\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return functions;\n};\n\nexports.default = YouTubePlayer;\nmodule.exports = exports['default'];","var redefine = require('./_redefine');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file m3u8/line-stream.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\nvar LineStream = function (_Stream) {\n  _inherits(LineStream, _Stream);\n\n  function LineStream() {\n    _classCallCheck(this, LineStream);\n\n    var _this = _possibleConstructorReturn(this, (LineStream.__proto__ || Object.getPrototypeOf(LineStream)).call(this));\n\n    _this.buffer = '';\n    return _this;\n  }\n\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {String} data the text to process\n   */\n\n\n  _createClass(LineStream, [{\n    key: 'push',\n    value: function push(data) {\n      var nextNewline = void 0;\n\n      this.buffer += data;\n      nextNewline = this.buffer.indexOf('\\n');\n\n      for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n        this.trigger('data', this.buffer.substring(0, nextNewline));\n        this.buffer = this.buffer.substring(nextNewline + 1);\n      }\n    }\n  }]);\n\n  return LineStream;\n}(_stream2['default']);\n\nexports['default'] = LineStream;","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _PlayerStates = require('./constants/PlayerStates');\n\nvar _PlayerStates2 = _interopRequireDefault(_PlayerStates);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  pauseVideo: {\n    acceptableStates: [_PlayerStates2.default.ENDED, _PlayerStates2.default.PAUSED],\n    stateChangeRequired: false\n  },\n  playVideo: {\n    acceptableStates: [_PlayerStates2.default.ENDED, _PlayerStates2.default.PLAYING],\n    stateChangeRequired: false\n  },\n  seekTo: {\n    acceptableStates: [_PlayerStates2.default.ENDED, _PlayerStates2.default.PLAYING, _PlayerStates2.default.PAUSED],\n    stateChangeRequired: true,\n\n    // TRICKY: `seekTo` may not cause a state change if no buffering is\n    // required.\n    timeout: 3000\n  }\n};\nmodule.exports = exports['default'];","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/*\n * pkcs7.unpad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\n'use strict';\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nmodule.exports = function unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n};\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket;\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  WebSocket = NodeWebSocket;\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _sister = require('sister');\n\nvar _sister2 = _interopRequireDefault(_sister);\n\nvar _loadYouTubeIframeApi = require('./loadYouTubeIframeApi');\n\nvar _loadYouTubeIframeApi2 = _interopRequireDefault(_loadYouTubeIframeApi);\n\nvar _YouTubePlayer = require('./YouTubePlayer');\n\nvar _YouTubePlayer2 = _interopRequireDefault(_YouTubePlayer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @typedef YT.Player\n * @see https://developers.google.com/youtube/iframe_api_reference\n * */\n\n/**\n * @see https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player\n */\nvar youtubeIframeAPI = void 0;\n\n/**\n * A factory function used to produce an instance of YT.Player and queue function calls and proxy events of the resulting object.\n *\n * @param elementId Either An existing YT.Player instance,\n * the DOM element or the id of the HTML element where the API will insert an <iframe>.\n * @param options See `options` (Ignored when using an existing YT.Player instance).\n * @param strictState A flag designating whether or not to wait for\n * an acceptable state when calling supported functions. Default: `false`.\n * See `FunctionStateMap.js` for supported functions and acceptable states.\n */\n\nexports.default = function (maybeElementId) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var strictState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var emitter = (0, _sister2.default)();\n\n  if (!youtubeIframeAPI) {\n    youtubeIframeAPI = (0, _loadYouTubeIframeApi2.default)(emitter);\n  }\n\n  if (options.events) {\n    throw new Error('Event handlers cannot be overwritten.');\n  }\n\n  if (typeof maybeElementId === 'string' && !document.getElementById(maybeElementId)) {\n    throw new Error('Element \"' + maybeElementId + '\" does not exist.');\n  }\n\n  options.events = _YouTubePlayer2.default.proxyEvents(emitter);\n\n  var playerAPIReady = new Promise(function (resolve) {\n    if (typeof maybeElementId === 'string' || maybeElementId instanceof HTMLElement) {\n      // eslint-disable-next-line promise/catch-or-return\n      youtubeIframeAPI.then(function (YT) {\n        var player = new YT.Player(maybeElementId, options);\n\n        emitter.on('ready', function () {\n          resolve(player);\n        });\n\n        return null;\n      });\n    } else if ((typeof maybeElementId === 'undefined' ? 'undefined' : _typeof(maybeElementId)) === 'object' && maybeElementId.playVideo instanceof Function) {\n      var player = maybeElementId;\n\n      resolve(player);\n    } else {\n      throw new TypeError('Unexpected state.');\n    }\n  });\n\n  var playerApi = _YouTubePlayer2.default.promisifyPlayer(playerAPIReady, strictState);\n\n  playerApi.on = emitter.on;\n  playerApi.off = emitter.off;\n\n  return playerApi;\n};\n\nmodule.exports = exports['default'];","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar findBox, parseType, timescale, startTime;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = data[i]     << 24;\n    size |= data[i + 1] << 16;\n    size |= data[i + 2] << 8;\n    size |= data[i + 3];\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = tkhd[index]     << 24 |\n         tkhd[index + 1] << 16 |\n         tkhd[index + 2] <<  8 |\n         tkhd[index + 3];\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = mdhd[index]     << 24 |\n                 mdhd[index + 1] << 16 |\n                 mdhd[index + 2] <<  8 |\n                 mdhd[index + 3];\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = tfhd[4] << 24 |\n           tfhd[5] << 16 |\n           tfhd[6] << 8 |\n           tfhd[7];\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = tfdt[4] << 24 |\n                 tfdt[5] << 16 |\n                 tfdt[6] <<  8 |\n                 tfdt[7];\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += tfdt[8]  << 24 |\n                    tfdt[9]  << 16 |\n                    tfdt[10] <<  8 |\n                    tfdt[11];\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\nmodule.exports = {\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime\n};\n","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","/*!\n * Vue.js v2.5.16\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\n\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.16';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\n/*  */\n\n\n\n\n\n\n\n\n\n// add a raw attr (use this in preTransforms)\n\n\n\n\n\n\n\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\n\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nexport default Vue;\n","module.exports = false;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","'use strict';\n\nvar Sister;\n\n/**\n* @link https://github.com/gajus/sister for the canonical source repository\n* @license https://github.com/gajus/sister/blob/master/LICENSE BSD 3-Clause\n*/\nSister = function () {\n    var sister = {},\n        events = {};\n\n    /**\n     * @name handler\n     * @function\n     * @param {Object} data Event data.\n     */\n\n    /**\n     * @param {String} name Event name.\n     * @param {handler} handler\n     * @return {listener}\n     */\n    sister.on = function (name, handler) {\n        var listener = {name: name, handler: handler};\n        events[name] = events[name] || [];\n        events[name].unshift(listener);\n        return listener;\n    };\n\n    /**\n     * @param {listener}\n     */\n    sister.off = function (listener) {\n        var index = events[listener.name].indexOf(listener);\n\n        if (index !== -1) {\n            events[listener.name].splice(index, 1);\n        }\n    };\n\n    /**\n     * @param {String} name Event name.\n     * @param {Object} data Event data.\n     */\n    sister.trigger = function (name, data) {\n        var listeners = events[name],\n            i;\n\n        if (listeners) {\n            i = listeners.length;\n            while (i--) {\n                listeners[i].handler(data);\n            }\n        }\n    };\n\n    return sister;\n};\n\nmodule.exports = Sister;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _loadScript = require('load-script');\n\nvar _loadScript2 = _interopRequireDefault(_loadScript);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (emitter) {\n  /**\n   * A promise that is resolved when window.onYouTubeIframeAPIReady is called.\n   * The promise is resolved with a reference to window.YT object.\n   */\n  var iframeAPIReady = new Promise(function (resolve) {\n    if (window.YT && window.YT.Player && window.YT.Player instanceof Function) {\n      resolve(window.YT);\n\n      return;\n    }\n\n    var previous = window.onYouTubeIframeAPIReady;\n\n    // The API will call this function when page has finished downloading\n    // the JavaScript for the player API.\n    window.onYouTubeIframeAPIReady = function () {\n      if (previous) {\n        previous();\n      }\n\n      resolve(window.YT);\n    };\n  });\n\n  var protocol = window.location.protocol === 'http:' ? 'http:' : 'https:';\n\n  (0, _loadScript2.default)(protocol + '//www.youtube.com/iframe_api', function (error) {\n    if (error) {\n      emitter.trigger('error', error);\n    }\n  });\n\n  return iframeAPIReady;\n};\n\nmodule.exports = exports['default'];","/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _aes = require('./aes');\n\nvar _aes2 = _interopRequireDefault(_aes);\n\nvar _asyncStream = require('./async-stream');\n\nvar _asyncStream2 = _interopRequireDefault(_asyncStream);\n\nvar _pkcs7 = require('pkcs7');\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new _aes2['default'](Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = undefined;\n  var init1 = undefined;\n  var init2 = undefined;\n  var init3 = undefined;\n  var encrypted0 = undefined;\n  var encrypted1 = undefined;\n  var encrypted2 = undefined;\n  var encrypted3 = undefined;\n\n  // iteration variable\n  var wordIx = undefined;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\nexports.decrypt = decrypt;\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = (function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    _classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new _asyncStream2['default']();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, (0, _pkcs7.unpad)(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n  _createClass(Decrypter, [{\n    key: 'decryptChunk_',\n\n    /**\n     * @private\n     */\n    value: function decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        var bytes = decrypt(encrypted, key, initVector);\n\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }], [{\n    key: 'STEP',\n    get: function get() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n\n  return Decrypter;\n})();\n\nexports.Decrypter = Decrypter;\nexports['default'] = {\n  Decrypter: Decrypter,\n  decrypt: decrypt\n};","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","\nmodule.exports = function load (src, opts, cb) {\n  var head = document.head || document.getElementsByTagName('head')[0]\n  var script = document.createElement('script')\n\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  opts = opts || {}\n  cb = cb || function() {}\n\n  script.type = opts.type || 'text/javascript'\n  script.charset = opts.charset || 'utf8';\n  script.async = 'async' in opts ? !!opts.async : true\n  script.src = src\n\n  if (opts.attrs) {\n    setAttributes(script, opts.attrs)\n  }\n\n  if (opts.text) {\n    script.text = '' + opts.text\n  }\n\n  var onend = 'onload' in script ? stdOnEnd : ieOnEnd\n  onend(script, cb)\n\n  // some good legacy browsers (firefox) fail the 'in' detection above\n  // so as a fallback we always set onload\n  // old IE will ignore this and new IE will set onload\n  if (!script.onload) {\n    stdOnEnd(script, cb);\n  }\n\n  head.appendChild(script)\n}\n\nfunction setAttributes(script, attrs) {\n  for (var attr in attrs) {\n    script.setAttribute(attr, attrs[attr]);\n  }\n}\n\nfunction stdOnEnd (script, cb) {\n  script.onload = function () {\n    this.onerror = this.onload = null\n    cb(null, script)\n  }\n  script.onerror = function () {\n    // this.onload = null here is necessary\n    // because even IE9 works not like others\n    this.onerror = this.onload = null\n    cb(new Error('Failed to load ' + this.src), script)\n  }\n}\n\nfunction ieOnEnd (script, cb) {\n  script.onreadystatechange = function () {\n    if (this.readyState != 'complete' && this.readyState != 'loaded') return\n    this.onreadystatechange = null\n    cb(null, script) // there is no way to catch loading errors in IE8\n  }\n}\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * @license\n * Video.js 7.0.3 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar window$1 = _interopDefault(require('global/window'));\nvar document = _interopDefault(require('global/document'));\nvar tsml = _interopDefault(require('tsml'));\nvar xhr = _interopDefault(require('xhr'));\nvar vtt = _interopDefault(require('videojs-vtt.js'));\nvar safeParseTuple = _interopDefault(require('safe-json-parse/tuple'));\nvar URLToolkit = _interopDefault(require('url-toolkit'));\nvar m3u8Parser = require('m3u8-parser');\nvar mpdParser = require('mpd-parser');\nvar mp4probe = _interopDefault(require('mux.js/lib/mp4/probe'));\nvar tsInspector = _interopDefault(require('mux.js/lib/tools/ts-inspector.js'));\nvar aesDecrypter = require('aes-decrypter');\n\nvar version = \"7.0.3\";\n\n/**\n * @file log.js\n * @module log\n */\n\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nvar logByType = function logByType(type, args) {\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window$1.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window$1;\n\n  var timeout = void 0;\n\n  /* eslint-disable consistent-this */\n  return function () {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n};\n\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose}.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    fn = bind(this, fn);\n\n    var timeoutId = window$1.setTimeout(fn, timeout);\n    var disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      var id = window$1.requestAnimationFrame(fn);\n      var disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && /Chrome/i.test(USER_AGENT);\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/Chrome\\/(\\d+)/);\n\n  if (match && match[1]) {\n    return parseFloat(match[1]);\n  }\n  return null;\n}();\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = IS_SAFARI || IS_IOS;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The property that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    _this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(_this, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n    return _this;\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n    return _this;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(_this, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n    return _this;\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    classCallCheck(this, TextTrackList);\n    return possibleConstructorReturn(this, _TrackList.apply(this, arguments));\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.trigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_this, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    _this.tech_ = settings.tech;\n\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_this, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      /* eslint-disable no-unused-expressions */\n      this.activeCues;\n      /* eslint-enable no-unused-expressions */\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get$$1() {\n          return default_;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get$$1() {\n          return mode;\n        },\n        set: function set$$1(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          mode = newMode;\n          if (mode === 'showing') {\n\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n\n          return activeCues;\n        },\n        set: function set$$1() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _this);\n    } else {\n      _this.loaded_ = true;\n    }\n    return _this;\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n\n    var track = new TextTrack(options);\n\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n\n    Object.defineProperties(_this, {\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get$$1() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get$$1() {\n          return track;\n        }\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _this\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks() {};\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    var backgroundImage = '';\n\n    // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n    if (url) {\n      backgroundImage = 'url(\"' + url + '\")';\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n *\n * @private\n */\nfunction constructColor(color, opacity) {\n  return 'rgba(' +\n  // color looks like \"#f0e\"\n  parseInt(color[1] + color[1], 16) + ',' + parseInt(color[2] + color[2], 16) + ',' + parseInt(color[3] + color[3], 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nfunction formatTime (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n}\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    event.preventDefault();\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent || 0;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      // TODO: May need to be either menuitemcheckbox or menuitemradio,\n      //       and may need logical grouping of menu items.\n      _this.el_.setAttribute('role', 'menuitemcheckbox');\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts int into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window$1.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({ createEl: !RESIZE_OBSERVER_AVAILABLE }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    var docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {String} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {Boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n\n\n  Html5.prototype.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this['featuresNative' + type + 'Tracks']) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + 'TracksListeners_']) {\n      Object.keys(this[lowerCaseType + 'TracksListeners_']).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + 'Tracks'];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + 'TracksListeners_'][eventName]);\n      });\n    }\n\n    this['featuresNative' + type + 'Tracks'] = !override;\n    this[lowerCaseType + 'TracksListeners_'] = null;\n\n    this.proxyNativeTracksForType_(lowerCaseType);\n  };\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  };\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  };\n\n  /**\n    * Proxy native track list events for the given type to our track\n    * lists if the browser we are playing in supports that type of track list.\n    *\n    * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n    * @private\n    */\n\n\n  Html5.prototype.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n\n      elTracks.addEventListener(eventName, listener);\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    }\n\n    // set tabindex to -1 so we could focus on the player element\n    tag.setAttribute('tabindex', '-1');\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'autoplay': this.options_.autoplay,\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n\n    // Chrome and Safari both have issues with autoplay.\n    // In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.\n    // In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)\n    // This fixes both issues. Need to wait for API, so it updates displays correctly\n    if ((this.src() || this.currentSrc()) && this.tag && this.options_.autoplay && this.paused()) {\n      try {\n        // Chrome Fix. Fixed in Chrome v16.\n        delete this.tag.poster;\n      } catch (e) {\n        log$1('deleting tag.poster throws in some browsers', e);\n      }\n    }\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = { src: src, type: type };\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this4 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this4.updateSourceCaches_(_this4.techGet_('currentSrc'));\n          }\n\n          _this4.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this5 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this5.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   * @deprecated As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a `Promise` only if the browser returns one and the player\n   *         is ready to begin playback. For some browsers and all non-ready\n   *         situations, this will return `undefined`.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this6 = this;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this6.playWaitingForReady_ = false;\n        silencePromise(_this6.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      return this.techGet_('play');\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this6.playOnLoadstart_ = null;\n        silencePromise(_this6.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this7 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this7.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this8 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this8.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this8.cache_.sources = sources;\n      _this8.updateSourceCaches_(middlewareSource);\n\n      var err = _this8.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this8.src(sources.slice(1));\n        }\n\n        _this8.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this8.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this8.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this8.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this9 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this9.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay attribute.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should autoplay\n   *        - false means that we should not autoplay\n   *\n   * @return {string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    if (value !== undefined) {\n      this.techCall_('setAutoplay', value);\n      this.options_.autoplay = value;\n      return;\n    }\n    return this.techGet_('autoplay', value);\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this10 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this10.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs$1.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n  return videojs$1.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n    setTextContent(style$1, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs$1);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs$1.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs$1.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs$1.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs$1.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs$1.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs$1.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs$1.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs$1.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\n\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs$1.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs$1.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs$1.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs$1.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs$1.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs$1.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs$1.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs$1.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs$1.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs$1.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs$1.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs$1.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs$1.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs$1.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs$1.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs$1.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs$1.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs$1.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs$1.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs$1.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs$1.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs$1.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs$1.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs$1.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs$1.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.0.0\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$2 = videojs$1.log;\n\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  }\n\n  // consider the playlist unchanged if the number of segments is equal and the media\n  // sequence number is unchanged\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media);\n\n  // if the update could overlap existing segment information, merge the two segment lists\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  }\n\n  // resolve any segment URIs to prevent us from having to do it later\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  });\n\n  // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[media.uri] = mergedPlaylist;\n\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n\n      log$2.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n  return delay;\n};\n\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls, withCredentials) {\n    classCallCheck(this, PlaylistLoader);\n\n    var _this2 = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    _this2.srcUrl = srcUrl;\n    _this2.hls_ = hls;\n    _this2.withCredentials = withCredentials;\n\n    if (!_this2.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    // initialize the loader state\n    _this2.state = 'HAVE_NOTHING';\n\n    // live playlist staleness timeout\n    _this2.on('mediaupdatetimeout', function () {\n      if (_this2.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this2.state = 'HAVE_CURRENT_METADATA';\n\n      _this2.request = _this2.hls_.xhr({\n        uri: resolveUrl(_this2.master.uri, _this2.media().uri),\n        withCredentials: _this2.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        }\n\n        if (error) {\n          return _this2.playlistRequestError(_this2.request, _this2.media().uri, 'HAVE_METADATA');\n        }\n\n        _this2.haveMetadata(_this2.request, _this2.media().uri);\n      });\n    });\n    return _this2;\n  }\n\n  PlaylistLoader.prototype.playlistRequestError = function playlistRequestError(xhr$$1, url, startingState) {\n    // any in-flight request is now finished\n    this.request = null;\n\n    if (startingState) {\n      this.state = startingState;\n    }\n\n    this.error = {\n      playlist: this.master.playlists[url],\n      status: xhr$$1.status,\n      message: 'HLS playlist request error at URL: ' + url,\n      responseText: xhr$$1.responseText,\n      code: xhr$$1.status >= 500 ? 4 : 2\n    };\n\n    this.trigger('error');\n  };\n\n  // update the playlist loader's state in response to a new or\n  // updated playlist.\n\n\n  PlaylistLoader.prototype.haveMetadata = function haveMetadata(xhr$$1, url) {\n    var _this3 = this;\n\n    // any in-flight request is now finished\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n\n    var parser = new m3u8Parser.Parser();\n\n    parser.push(xhr$$1.responseText);\n    parser.end();\n    parser.manifest.uri = url;\n    // m3u8-parser does not attach an attributes property to media playlists so make\n    // sure that the property is attached to avoid undefined reference errors\n    parser.manifest.attributes = parser.manifest.attributes || {};\n\n    // merge this playlist into the master\n    var update = updateMaster(this.master, parser.manifest);\n\n    this.targetDuration = parser.manifest.targetDuration;\n\n    if (update) {\n      this.master = update;\n      this.media_ = this.master.playlists[parser.manifest.uri];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n\n    // refresh live playlists after a target duration passes\n    if (!this.media().endList) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\n        _this3.trigger('mediaupdatetimeout');\n      }, refreshDelay(this.media(), !!update));\n    }\n\n    this.trigger('loadedplaylist');\n  };\n\n  /**\n   * Abort any outstanding work and clean up.\n   */\n\n\n  PlaylistLoader.prototype.dispose = function dispose() {\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n  };\n\n  PlaylistLoader.prototype.stopRequest = function stopRequest() {\n    if (this.request) {\n      var oldRequest = this.request;\n\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  };\n\n  /**\n   * When called without any arguments, returns the currently\n   * active media playlist. When called with a single argument,\n   * triggers the playlist loader to asynchronously switch to the\n   * specified media playlist. Calling this method while the\n   * loader is in the HAVE_NOTHING causes an error to be emitted\n   * but otherwise has no effect.\n   *\n   * @param {Object=} playlist the parsed media playlist\n   * object to switch to\n   * @return {Playlist} the current loaded media\n   */\n\n\n  PlaylistLoader.prototype.media = function media(playlist) {\n    var _this4 = this;\n\n    // getter\n    if (!playlist) {\n      return this.media_;\n    }\n\n    // setter\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n\n    var startingState = this.state;\n\n    // find the playlist object if the target playlist has been\n    // specified by URI\n    if (typeof playlist === 'string') {\n      if (!this.master.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.master.playlists[playlist];\n    }\n\n    var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n    // switch to fully loaded playlists immediately\n    if (this.master.playlists[playlist.uri].endList) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist;\n\n      // trigger media change if the active media has been updated\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n      return;\n    }\n\n    // switching to the active playlist is a no-op\n    if (!mediaChange) {\n      return;\n    }\n\n    this.state = 'SWITCHING_MEDIA';\n\n    // there is already an outstanding playlist request\n    if (this.request) {\n      if (resolveUrl(this.master.uri, playlist.uri) === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    }\n\n    // request the new playlist\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n\n    this.request = this.hls_.xhr({\n      uri: resolveUrl(this.master.uri, playlist.uri),\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this4.request) {\n        return;\n      }\n\n      if (error) {\n        return _this4.playlistRequestError(_this4.request, playlist.uri, startingState);\n      }\n\n      _this4.haveMetadata(req, playlist.uri);\n\n      // fire loadedmetadata the first time a media playlist is loaded\n      if (startingState === 'HAVE_MASTER') {\n        _this4.trigger('loadedmetadata');\n      } else {\n        _this4.trigger('mediachange');\n      }\n    });\n  };\n\n  /**\n   * pause loading of the playlist\n   */\n\n\n  PlaylistLoader.prototype.pause = function pause() {\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n    // Need to restore state now that no activity is happening\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MASTER';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  };\n\n  /**\n   * start loading of the playlist\n   */\n\n\n  PlaylistLoader.prototype.load = function load(isFinalRendition) {\n    var _this5 = this;\n\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n\n    var media = this.media();\n\n    if (isFinalRendition) {\n      var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\n        return _this5.load();\n      }, delay);\n      return;\n    }\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  };\n\n  /**\n   * start loading of the playlist\n   */\n\n\n  PlaylistLoader.prototype.start = function start() {\n    var _this6 = this;\n\n    this.started = true;\n\n    // request the specified URL\n    this.request = this.hls_.xhr({\n      uri: this.srcUrl,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this6.request) {\n        return;\n      }\n\n      // clear the loader's request reference\n      _this6.request = null;\n\n      if (error) {\n        _this6.error = {\n          status: req.status,\n          message: 'HLS playlist request error at URL: ' + _this6.srcUrl,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        if (_this6.state === 'HAVE_NOTHING') {\n          _this6.started = false;\n        }\n        return _this6.trigger('error');\n      }\n\n      var parser = new m3u8Parser.Parser();\n\n      parser.push(req.responseText);\n      parser.end();\n\n      _this6.state = 'HAVE_MASTER';\n\n      parser.manifest.uri = _this6.srcUrl;\n\n      // loaded a master playlist\n      if (parser.manifest.playlists) {\n        _this6.master = parser.manifest;\n\n        setupMediaPlaylists(_this6.master);\n        resolveMediaGroupUris(_this6.master);\n\n        _this6.trigger('loadedplaylist');\n        if (!_this6.request) {\n          // no media playlist was specifically selected so start\n          // from the first listed one\n          _this6.media(parser.manifest.playlists[0]);\n        }\n        return;\n      }\n\n      // loaded a media playlist\n      // infer a master playlist if none was previously requested\n      _this6.master = {\n        mediaGroups: {\n          'AUDIO': {},\n          'VIDEO': {},\n          'CLOSED-CAPTIONS': {},\n          'SUBTITLES': {}\n        },\n        uri: window$1.location.href,\n        playlists: [{\n          uri: _this6.srcUrl,\n          id: 0\n        }]\n      };\n      _this6.master.playlists[_this6.srcUrl] = _this6.master.playlists[0];\n      _this6.master.playlists[0].resolvedUri = _this6.srcUrl;\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      _this6.master.playlists[0].attributes = _this6.master.playlists[0].attributes || {};\n      _this6.haveMetadata(req, _this6.srcUrl);\n      return _this6.trigger('loadedmetadata');\n    });\n  };\n\n  return PlaylistLoader;\n}(EventTarget$1);\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\nvar createTimeRange = videojs$1.createTimeRange;\n\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence;\n  // if a start time is available for segment immediately following\n  // the interval, use it\n  var segment = playlist.segments[i];\n\n  // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return { result: segment.start, precise: true };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return { result: result + segment.end, precise: true };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return { result: result + segment.start, precise: true };\n    }\n  }\n  return { result: result, precise: false };\n};\n\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence;\n  // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  }\n  // indicate we didn't find a useful duration estimate\n  return { result: -1, precise: false };\n};\n\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  }\n\n  // do a backward walk to estimate the duration\n  backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  }\n\n  // walk forward to see if a precise duration estimate can be made\n  // that way\n  forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  }\n\n  // return the less-precise, playlist-based duration estimate\n  return backward.result + expired;\n};\n\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  }\n\n  // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    }\n\n    // duration should be Infinity for live playlists\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  }\n\n  // calculate the total duration based on the segment durations\n  return intervalDuration(playlist, endSequence, expired);\n};\n\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n    startIndex = 0;\n  }\n\n  for (var _i2 = startIndex; _i2 < endIndex; _i2++) {\n    durations += playlist.segments[_i2].duration;\n  }\n\n  return durations;\n};\n\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    }\n    // We were unable to find a good segment within the playlist\n    // so select the first segment\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  }\n\n  // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  }\n\n  // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  }\n\n  // We are out of possible candidates so load the last one...\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n\n  return !playlist.disabled && !blacklisted;\n};\n\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n\n  return (size - bytesReceived * 8) / bandwidth;\n};\n\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\n\n// exports\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options);\n\n    // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      }\n\n      // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      }\n\n      // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n\n  return transferable;\n};\n\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n\n/**\n * utils to help dump binary data to the console\n */\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref2) {\n  var bytes = _ref2.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n// Fudge factor to account for TimeRanges rounding\nvar TIME_FUDGE_FACTOR = 1 / 30;\n// Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_;\n\n  // create an in-band caption track if one is present in the segment\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({ type: 'usage', name: 'hls-608' });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i];\n\n    // Remove any overlapping cue\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n\n/**\n * @file add-text-track-data.js\n */\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset;\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler);\n\n    // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = [];\n\n      // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      }\n\n      // Group cues by their startTime value\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n\n        return obj;\n      }, {});\n\n      // Sort startTimes by ascending order\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      });\n\n      // Map each cue group's endTime to the next group's startTime\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration;\n\n        // Map each cue's endTime the next group's startTime\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({ data: m, target: selfShim });\n            });\n          }\n        }\n      };\n\n      fn.call(selfShim);\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({ data: m, target: o });\n        });\n      };\n      this.isThisThread = true;\n    }\n  };\n}\n// Test Worker capabilities\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL);\n\n    // Native browser on some Samsung devices throws for transferables, let's detect it\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], { type: SCRIPT_TYPE }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var transmuxerWorker = function () {\n\n    var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n    // pre-calculate constants\n    (function () {\n      var i;\n      types = {\n        avc1: [], // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [], // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      };\n\n      // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length;\n\n      // calculate the total size we need to allocate\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4);\n\n      // copy the payload into the result\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]);\n\n      // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length;\n      // build traf boxes for each track fragment\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i;\n\n      // leave the full box header (4 bytes) all zero\n\n      // write the sample table\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i;\n\n        // assemble the SPSs\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        }\n\n        // assemble the PPSs\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([\n\n        // SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n\n      return box(types.tkhd, result);\n    };\n\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF]));\n\n      // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n\n      // audio tracks require less metadata\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      }\n\n      // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]);\n      // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader;\n\n      // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0;\n\n        // trun flag constants\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n        this.off = function (type, listener) {\n          var index;\n          if (!listeners[type]) {\n            return false;\n          }\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n          if (!callbacks) {\n            return;\n          }\n          // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n          if (arguments.length === 2) {\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n\n      return destination;\n    };\n\n    // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n\n    // -----------------\n    // Link To Transport\n    // -----------------\n\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0;\n\n      // go through the sei_rbsp parsing each each individual sei_message\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        }\n\n        // Parse payload type\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n        payloadType += bytes[i++];\n\n        // Parse payload size\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n        payloadSize += bytes[i++];\n\n        // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        }\n\n        // skip the payload and parse the next message\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    };\n\n    // see ANSI/SCTE 128-1 (2013), section 8.1\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      }\n\n      // itu_t_t35_provider_code should be 49 (ATSC) for captions\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      }\n\n      // the user_identifier should be \"GA94\" to indicate ATSC1 data\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      }\n\n      // finally, user_data_type_code should be 0x03 for caption data\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      }\n\n      // return the user_data_type_structure and strip the trailing\n      // marker bits\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    };\n\n    // see CEA-708-D, section 4.4\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data;\n\n      // if this is just filler, return immediately\n      if (!(userData[0] & 0x40)) {\n        return results;\n      }\n\n      // parse out the cc_data_1 and cc_data_2 fields\n      count = userData[0] & 0x1f;\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        };\n\n        // capture cc data when cc_valid is 1\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n      return results;\n    };\n\n    var CaptionStream = function CaptionStream() {\n\n      CaptionStream.prototype.init.call(this);\n\n      this.captionPackets_ = [];\n\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n\n      this.reset();\n\n      // forward data and done events from CCs to this CaptionStream\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData;\n\n      // only examine SEI NALs\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      }\n\n      // parse the sei\n      sei = parseSei(event.escapedRBSP);\n\n      // ignore everything but user_data_registered_itu_t_t35\n      if (sei.payloadType !== USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      }\n\n      // parse out the user data payload\n      userData = parseUserData(sei);\n\n      // ignore unrecognized userData\n      if (!userData) {\n        return;\n      }\n\n      // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n        return;\n      }\n\n      // parse out CC data packets and save them for later\n      this.captionPackets_ = this.captionPackets_.concat(parseCaptionPackets(event.pts, userData));\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      }\n\n      // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      });\n\n      // sort caption byte-pairs based on their PTS values\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n        return a.pts - b.pts;\n      });\n\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        }\n        // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n      }, this);\n\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    // ----------------------\n    // Session to Application\n    // ----------------------\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1, // á\n      0x5c: 0xe9, // é\n      0x5e: 0xed, // í\n      0x5f: 0xf3, // ó\n      0x60: 0xfa, // ú\n      0x7b: 0xe7, // ç\n      0x7c: 0xf7, // ÷\n      0x7d: 0xd1, // Ñ\n      0x7e: 0xf1, // ñ\n      0x7f: 0x2588, // █\n      0x0130: 0xae, // ®\n      0x0131: 0xb0, // °\n      0x0132: 0xbd, // ½\n      0x0133: 0xbf, // ¿\n      0x0134: 0x2122, // ™\n      0x0135: 0xa2, // ¢\n      0x0136: 0xa3, // £\n      0x0137: 0x266a, // ♪\n      0x0138: 0xe0, // à\n      0x0139: 0xa0, //\n      0x013a: 0xe8, // è\n      0x013b: 0xe2, // â\n      0x013c: 0xea, // ê\n      0x013d: 0xee, // î\n      0x013e: 0xf4, // ô\n      0x013f: 0xfb, // û\n      0x0220: 0xc1, // Á\n      0x0221: 0xc9, // É\n      0x0222: 0xd3, // Ó\n      0x0223: 0xda, // Ú\n      0x0224: 0xdc, // Ü\n      0x0225: 0xfc, // ü\n      0x0226: 0x2018, // ‘\n      0x0227: 0xa1, // ¡\n      0x0228: 0x2a, // *\n      0x0229: 0x27, // '\n      0x022a: 0x2014, // —\n      0x022b: 0xa9, // ©\n      0x022c: 0x2120, // ℠\n      0x022d: 0x2022, // •\n      0x022e: 0x201c, // “\n      0x022f: 0x201d, // ”\n      0x0230: 0xc0, // À\n      0x0231: 0xc2, // Â\n      0x0232: 0xc7, // Ç\n      0x0233: 0xc8, // È\n      0x0234: 0xca, // Ê\n      0x0235: 0xcb, // Ë\n      0x0236: 0xeb, // ë\n      0x0237: 0xce, // Î\n      0x0238: 0xcf, // Ï\n      0x0239: 0xef, // ï\n      0x023a: 0xd4, // Ô\n      0x023b: 0xd9, // Ù\n      0x023c: 0xf9, // ù\n      0x023d: 0xdb, // Û\n      0x023e: 0xab, // «\n      0x023f: 0xbb, // »\n      0x0320: 0xc3, // Ã\n      0x0321: 0xe3, // ã\n      0x0322: 0xcd, // Í\n      0x0323: 0xcc, // Ì\n      0x0324: 0xec, // ì\n      0x0325: 0xd2, // Ò\n      0x0326: 0xf2, // ò\n      0x0327: 0xd5, // Õ\n      0x0328: 0xf5, // õ\n      0x0329: 0x7b, // {\n      0x032a: 0x7d, // }\n      0x032b: 0x5c, // \\\n      0x032c: 0x5e, // ^\n      0x032d: 0x5f, // _\n      0x032e: 0x7c, // |\n      0x032f: 0x7e, // ~\n      0x0330: 0xc4, // Ä\n      0x0331: 0xe4, // ä\n      0x0332: 0xd6, // Ö\n      0x0333: 0xf6, // ö\n      0x0334: 0xdf, // ß\n      0x0335: 0xa5, // ¥\n      0x0336: 0xa4, // ¤\n      0x0337: 0x2502, // │\n      0x0338: 0xc5, // Å\n      0x0339: 0xe5, // å\n      0x033a: 0xd8, // Ø\n      0x033b: 0xf8, // ø\n      0x033c: 0x250c, // ┌\n      0x033d: 0x2510, // ┐\n      0x033e: 0x2514, // └\n      0x033f: 0x2518 // ┘\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    };\n\n    // the index of the last row in a CEA-608 display buffer\n    var BOTTOM_ROW = 14;\n\n    // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n    // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n      while (i--) {\n        result.push('');\n      }\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text;\n        // remove the parity bits\n        data = packet.ccData & 0x7f7f;\n\n        // ignore duplicate control codes; the spec demands they're sent twice\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        }\n\n        // Store control codes\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          this.clearFormatting(packet.pts);\n          // if a caption was being displayed, it's gone now\n          this.flushDisplayed(packet.pts);\n\n          // flip memory\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap;\n\n          // start measuring the time to display the caption\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 1;\n          this.mode_ = 'rollUp';\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 2;\n          this.mode_ = 'rollUp';\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 3;\n          this.mode_ = 'rollUp';\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[BOTTOM_ROW] = this.nonDisplayed_[BOTTOM_ROW].slice(0, -1);\n          } else {\n            this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          this.mode_ = 'paintOn';\n\n          // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n          }\n\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts);\n\n          // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          // Detect offset control codes and adjust cursor\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03;\n\n          // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20);\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          }\n          // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          }\n\n          // We have a normal character in char0, and possibly one in char1\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n      };\n    };\n    Cea608Stream.prototype = new stream();\n    // Trigger a cue point that captures the current state of the\n    // display buffer\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_\n      // remove spaces from the start and end of the string\n      .map(function (row) {\n        return row.trim();\n      })\n      // combine all text rows to display in one cue\n      .join('\\n')\n      // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn';\n      // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null;\n\n      // Track row and column for proper line-breaking and spacing\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n\n      // This variable holds currently-applied formatting\n      this.formatting_ = [];\n    };\n\n    /**\n     * Sets up control code and related constants for this instance\n     */\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      }\n\n      // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n      this.PADDING_ = 0x0000;\n      // Pop-on Mode\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f;\n      // Roll-up Mode\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d;\n      // paint-on mode (not supported)\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29;\n      // Erasure\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n\n    // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    };\n\n    // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    };\n\n    // Mode Implementations\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_];\n\n      // buffer characters\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[BOTTOM_ROW];\n\n      baseRow += text;\n      this.displayed_[BOTTOM_ROW] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i;\n      // clear out inactive rows\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n      // shift displayed rows up\n      for (i = this.topRow_; i < BOTTOM_ROW; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      }\n      // clear out the bottom row\n      this.displayed_[BOTTOM_ROW] = '';\n    };\n\n    // paintOn mode is not implemented\n    Cea608Stream.prototype.paintOn = function () {};\n\n    // exports\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n\n    var MAX_TS = 8589934592;\n\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      }\n\n      // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n\n      TimestampRolloverStream.prototype.init.call(this);\n\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n\n        lastDTS = data.dts;\n\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            // do not include the null terminator in the tag value\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n\n\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n\n\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n\n\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this);\n\n      // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        }\n\n        // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        }\n\n        // ignore events that don't look like ID3 data\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n          return;\n        }\n\n        // add this chunk to the data we've collected so far\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength;\n\n        // grab the size of the entire frame from the ID3 header\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n          // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n          tagSize += 10;\n        }\n\n        // if the entire frame has not arrived, wait for more data\n        if (bufferSize < tagSize) {\n          return;\n        }\n\n        // collect the entire frame so it can be parsed\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        }\n\n        // find the start of the first frame and the end of the tag\n        frameStart = 10;\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n          // clip any padding off the end\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        }\n\n        // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame);\n\n            // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size;\n              // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n              this.trigger('timestamp', frame);\n            }\n          }\n          tag.frames.push(frame);\n\n          frameStart += 10; // advance past the frame header\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n        this.trigger('data', tag);\n      };\n    };\n    _MetadataStream.prototype = new stream();\n\n    var metadataStream = _MetadataStream;\n\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream;\n\n    // object types\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream;\n\n    // constants\n    var MP2T_PACKET_LENGTH = 188,\n\n    // bytes\n    SYNC_BYTE = 0x47;\n\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this);\n\n      // Deliver new bytes to the stream.\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        }\n\n        // While we have enough data for a packet\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          }\n          // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n          startIndex++;\n          endIndex++;\n        }\n\n        // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n        this.trigger('done');\n      };\n    };\n    _TransportPacketStream.prototype = new stream();\n\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n      _TransportParseStream.prototype.init.call(this);\n      self = this;\n\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0;\n\n        // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n        // skip the PSI header and parse the first PMT entry\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset;\n\n        // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n        if (!(payload[5] & 0x01)) {\n          return;\n        }\n\n        // overwrite any existing program map table\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        };\n\n        // the mapping table ends at the end of the current section\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4;\n\n        // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n        // advance the offset to the first entry in the mapping table\n        offset = 12 + programInfoLength;\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n          // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          }\n\n          // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        }\n\n        // record the map on the packet as well\n        pmt.programMapTable = self.programMapTable;\n      };\n\n      /**\n       * Deliver a new MP2T packet to the stream.\n       */\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n        // pid is a 13-bit field starting at the last bit of packet[1]\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2];\n\n        // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        }\n\n        // parse the rest of the packet based on the type\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n\n          // if there are any packets waiting for a PMT to be found, process them now\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n\n        this.trigger('data', result);\n      };\n    };\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n\n\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags;\n\n        // get the packet length, this will be 0 for video\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]);\n\n        // find out if this packets starts a new keyframe\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n        // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n        ptsDtsFlags = payload[7];\n\n        // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        }\n        // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n          flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment;\n\n        // do nothing if there is not enough buffered data for a complete\n        // PES header\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n        event.trackId = stream$$1.data[0].pid;\n\n        // reassemble the packet\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        }\n\n        // parse assembled packet's PES header\n        parsePes(packetData, event);\n\n        // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size;\n\n        // flush pending packets if the conditions are right\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        }\n\n        // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {\n            // we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n              default:\n                // ignore unknown stream types\n                return;\n            }\n\n            // if a new packet is starting, we can flush the completed\n            // packet\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            }\n\n            // buffer this fragment until we are sure we've received the\n            // complete payload\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable;\n\n            // translate audio and video streams to tracks\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n    _ElementaryStream.prototype = new stream();\n\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        }\n\n        // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        }\n\n        // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n        while (i + 5 < buffer.length) {\n\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          }\n\n          // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n          // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n          frameEnd = i + frameLength;\n\n          // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n          if (buffer.byteLength < frameEnd) {\n            return;\n          }\n\n          // Otherwise, deliver the complete AAC frame\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n\n          // If the buffer is empty, clear it and return\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++;\n\n          // Remove the finished frame from the buffer and start the process again\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n\n    var adts = _AdtsStream;\n\n    var ExpGolomb;\n\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n    ExpGolomb = function ExpGolomb(workingData) {\n      var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n\n\n      // the current word being examined\n      workingWord = 0,\n\n      // :uint\n\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n\n      // ():uint\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      };\n\n      // ():uint\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      };\n\n      // ():void\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n        // track the amount of workingData that has been processed\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      };\n\n      // (count:int):void\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n\n          this.loadWord();\n\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      };\n\n      // (size:int):uint\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n        workingBitsAvailable -= bits;\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n        return valu;\n      };\n\n      // ():uint\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        }\n\n        // we exhausted workingWord and still have not found a 1\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      };\n\n      // ():void\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():void\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():uint\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n        return this.readBits(clz + 1) - 1;\n      };\n\n      // ():int\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      };\n\n      // Some convenience functions\n      // :Boolean\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      };\n\n      // ():int\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n      _NalByteStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n\n        // advance the sync point to a NAL start, if necessary\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              }\n\n              // deliver the NAL unit if it isn't empty\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              }\n\n              // drop trailing zeroes\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              }\n\n              // deliver the NAL unit\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        }\n        // filter out the NAL units that were delivered\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        }\n        // reset the stream state\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n    _NalByteStream.prototype = new stream();\n\n    // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n      self = this;\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n\n        nalByteStream.push(packet);\n      };\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        }\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData;\n\n        // Find all `Emulation Prevention Bytes`\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        }\n\n        // If no Emulation Prevention Bytes were found just return the original\n        // array\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        }\n\n        // Create a new array to hold the NAL unit data\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++;\n            // Remove this position index\n            emulationPreventionBytesPositions.shift();\n          }\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n        // some profiles have more optional data we don't need\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];break;\n              case 2:\n                sarRatio = [12, 11];break;\n              case 3:\n                sarRatio = [10, 11];break;\n              case 4:\n                sarRatio = [16, 11];break;\n              case 5:\n                sarRatio = [40, 33];break;\n              case 6:\n                sarRatio = [24, 11];break;\n              case 7:\n                sarRatio = [20, 11];break;\n              case 8:\n                sarRatio = [32, 11];break;\n              case 9:\n                sarRatio = [80, 33];break;\n              case 10:\n                sarRatio = [18, 11];break;\n              case 11:\n                sarRatio = [15, 11];break;\n              case 12:\n                sarRatio = [64, 33];break;\n              case 13:\n                sarRatio = [160, 99];break;\n              case 14:\n                sarRatio = [4, 3];break;\n              case 15:\n                sarRatio = [3, 2];break;\n              case 16:\n                sarRatio = [2, 1];break;\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n    _H264Stream.prototype = new stream();\n\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n\n    // Constants\n    var _AacStream;\n\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.parseId3TagSize = function (header, byteIndex) {\n        var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n            flags = header[byteIndex + 5],\n            footerPresent = (flags & 16) >> 4;\n\n        if (footerPresent) {\n          return returnSize + 20;\n        }\n        return returnSize + 10;\n      };\n\n      this.parseAdtsSize = function (header, byteIndex) {\n        var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n            middle = header[byteIndex + 4] << 3,\n            highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n        return highTwo | middle | lowThree;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            }\n\n            // check framesize\n            frameSize = this.parseId3TagSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if (everything[byteIndex] & 0xff === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = this.parseAdtsSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n          byteIndex++;\n        }\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n\n    var aac = _AacStream;\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n      while (count--) {\n        a.push(0);\n      }\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    // Frames-of-silence to use for filling in missing AAC frames\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n\n    var silence = makeTable(coneOfSilence);\n\n    var ONE_SECOND_IN_TS = 90000,\n\n    // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n\n    var H264Stream = h264.H264Stream;\n\n    // constants\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility'];\n\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    // object types\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n    // Helper functions\n    var createDefaultSample, isLikelyAacData, collectDtsInfo, clearDtsInfo, calculateTrackBaseMediaDecodeTime, arrayEquals, sumFrameByteLengths;\n\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n    createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0\n        }\n      };\n    };\n\n    isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n      return false;\n    };\n\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n    arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      // compare the value of each element in the array\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n    sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0;\n\n      // sum the byteLength's all each nal unit in the frame\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    };\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        }\n\n        // buffer audio data until end() is called\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes;\n\n        // return early if no audio data has been observed\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n        track.baseMediaDecodeTime = calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.prefixWithSilence_(track, frames);\n\n        // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n        track.samples = this.generateSampleTable_(frames);\n\n        // concatenate the audio data to constuct the mdat\n        mdat = mp4Generator.mdat(this.concatenateFrameData_(frames));\n\n        adtsFrames = [];\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        clearDtsInfo(track);\n\n        this.trigger('data', { track: track, boxes: boxes });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      // Possibly pad (prefix) the audio track with silence if appending this track\n      // would lead to the introduction of a gap in the audio buffer\n      this.prefixWithSilence_ = function (track, frames) {\n        var baseMediaDecodeTimeTs,\n            frameDuration = 0,\n            audioGapDuration = 0,\n            audioFillFrameCount = 0,\n            audioFillDuration = 0,\n            silentFrame,\n            i;\n\n        if (!frames.length) {\n          return;\n        }\n\n        baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n        // determine frame clock duration based on sample rate, round up to avoid overfills\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n        if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n          // insert the shortest possible amount (audio gap or audio to video gap)\n          audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n          // number of full frames in the audio gap\n          audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n          audioFillDuration = audioFillFrameCount * frameDuration;\n        }\n\n        // don't attempt to fill gaps smaller than a single frame or larger\n        // than a half second\n        if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n          return;\n        }\n\n        silentFrame = silence[track.samplerate];\n\n        if (!silentFrame) {\n          // we don't have a silent frame pregenerated for the sample rate, so use a frame\n          // from the content instead\n          silentFrame = frames[0].data;\n        }\n\n        for (i = 0; i < audioFillFrameCount; i++) {\n          frames.splice(i, 0, {\n            data: silentFrame\n          });\n        }\n\n        track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      };\n\n      // If the audio segment extends before the earliest allowed dts\n      // value, remove AAC frames until starts at or after the earliest\n      // allowed DTS so that we don't end up with a negative baseMedia-\n      // DecodeTime for the audio track\n      this.trimAdtsFramesByEarliestDts_ = function (adtsFrames) {\n        if (track.minSegmentDts >= earliestAllowedDts) {\n          return adtsFrames;\n        }\n\n        // We will need to recalculate the earliest segment Dts\n        track.minSegmentDts = Infinity;\n\n        return adtsFrames.filter(function (currentFrame) {\n          // If this is an allowed frame, keep it and record it's Dts\n          if (currentFrame.dts >= earliestAllowedDts) {\n            track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n            track.minSegmentPts = track.minSegmentDts;\n            return true;\n          }\n          // Otherwise, discard it\n          return false;\n        });\n      };\n\n      // generate the track's raw mdat data from an array of frames\n      this.generateSampleTable_ = function (frames) {\n        var i,\n            currentFrame,\n            samples = [];\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n          samples.push({\n            size: currentFrame.data.byteLength,\n            duration: 1024 // For AAC audio, all samples contain 1024 samples\n          });\n        }\n        return samples;\n      };\n\n      // generate the track's sample table from an array of frames\n      this.concatenateFrameData_ = function (frames) {\n        var i,\n            currentFrame,\n            dataOffset = 0,\n            data = new Uint8Array(sumFrameByteLengths(frames));\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          data.set(currentFrame.data, dataOffset);\n          dataOffset += currentFrame.data.byteLength;\n        }\n        return data;\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n\n      this.gopCache_ = [];\n\n      this.push = function (nalUnit) {\n        collectDtsInfo(track, nalUnit);\n\n        // record the track config\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        }\n\n        // buffer video until flush() is called\n        nalUnits.push(nalUnit);\n      };\n\n      this.flush = function () {\n        var frames, gopForFusion, gops, moof, mdat, boxes;\n\n        // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n          nalUnits.shift();\n        }\n\n        // Return early if no video data has been observed\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        }\n\n        // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n        frames = this.groupNalsIntoFrames_(nalUnits);\n        gops = this.groupFramesIntoGops_(frames);\n\n        // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            gops.unshift(gopForFusion);\n            // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = this.extendFirstKeyFrame_(gops);\n          }\n        }\n\n        // Trim gops to align with gopsToAlignWith\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            });\n\n            // Keep a maximum of 6 GOPs in the cache\n            this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n            // Clear nalUnits\n            nalUnits = [];\n\n            // return early no gops can be aligned with desired gopsToAlignWith\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          }\n\n          // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n          clearDtsInfo(track);\n\n          gops = alignedGops;\n        }\n\n        collectDtsInfo(track, gops);\n\n        // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n        track.samples = this.generateSampleTable_(gops);\n\n        // Concatenate the video data and construct the mdat\n        mdat = mp4Generator.mdat(this.concatenateNalData_(gops));\n\n        track.baseMediaDecodeTime = calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n\n        // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // Bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        this.trigger('data', { track: track, boxes: boxes });\n\n        this.resetStream_();\n\n        // Continue with the flush process now\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        clearDtsInfo(track);\n\n        // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n        config = undefined;\n        pps = undefined;\n      };\n\n      // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i;\n\n        // Search for the GOP nearest to the beginning of this nal unit\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop;\n\n          // Reject Gops with different SPS or PPS\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          }\n\n          // Reject Gops that would require a negative baseMediaDecodeTime\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          }\n\n          // The distance between the end of the gop and the start of the nalUnit\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration;\n\n          // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n        return null;\n      };\n\n      this.extendFirstKeyFrame_ = function (gops) {\n        var currentGop;\n\n        if (!gops[0][0].keyFrame && gops.length > 1) {\n          // Remove the first GOP\n          currentGop = gops.shift();\n\n          gops.byteLength -= currentGop.byteLength;\n          gops.nalCount -= currentGop.nalCount;\n\n          // Extend the first frame of what is now the\n          // first gop to cover the time period of the\n          // frames we just removed\n          gops[0][0].dts = currentGop.dts;\n          gops[0][0].pts = currentGop.pts;\n          gops[0][0].duration += currentGop.duration;\n        }\n\n        return gops;\n      };\n\n      // Convert an array of nal units into an array of frames with each frame being\n      // composed of the nal units that make up that frame\n      // Also keep track of cummulative data about the frame from the nal units such\n      // as the frame duration, starting pts, etc.\n      this.groupNalsIntoFrames_ = function (nalUnits) {\n        var i,\n            currentNal,\n            currentFrame = [],\n            frames = [];\n\n        currentFrame.byteLength = 0;\n\n        for (i = 0; i < nalUnits.length; i++) {\n          currentNal = nalUnits[i];\n\n          // Split on 'aud'-type nal units\n          if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n            // Since the very first nal unit is expected to be an AUD\n            // only push to the frames array when currentFrame is not empty\n            if (currentFrame.length) {\n              currentFrame.duration = currentNal.dts - currentFrame.dts;\n              frames.push(currentFrame);\n            }\n            currentFrame = [currentNal];\n            currentFrame.byteLength = currentNal.data.byteLength;\n            currentFrame.pts = currentNal.pts;\n            currentFrame.dts = currentNal.dts;\n          } else {\n            // Specifically flag key frames for ease of use later\n            if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n              currentFrame.keyFrame = true;\n            }\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            currentFrame.byteLength += currentNal.data.byteLength;\n            currentFrame.push(currentNal);\n          }\n        }\n\n        // For the last frame, use the duration of the previous frame if we\n        // have nothing better to go on\n        if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n          currentFrame.duration = frames[frames.length - 1].duration;\n        }\n\n        // Push the final frame\n        frames.push(currentFrame);\n        return frames;\n      };\n\n      // Convert an array of frames into an array of Gop with each Gop being composed\n      // of the frames that make up that Gop\n      // Also keep track of cummulative data about the Gop from the frames such as the\n      // Gop duration, starting pts, etc.\n      this.groupFramesIntoGops_ = function (frames) {\n        var i,\n            currentFrame,\n            currentGop = [],\n            gops = [];\n\n        // We must pre-set some of the values on the Gop since we\n        // keep running totals of these values\n        currentGop.byteLength = 0;\n        currentGop.nalCount = 0;\n        currentGop.duration = 0;\n        currentGop.pts = frames[0].pts;\n        currentGop.dts = frames[0].dts;\n\n        // store some metadata about all the Gops\n        gops.byteLength = 0;\n        gops.nalCount = 0;\n        gops.duration = 0;\n        gops.pts = frames[0].pts;\n        gops.dts = frames[0].dts;\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          if (currentFrame.keyFrame) {\n            // Since the very first frame is expected to be an keyframe\n            // only push to the gops array when currentGop is not empty\n            if (currentGop.length) {\n              gops.push(currentGop);\n              gops.byteLength += currentGop.byteLength;\n              gops.nalCount += currentGop.nalCount;\n              gops.duration += currentGop.duration;\n            }\n\n            currentGop = [currentFrame];\n            currentGop.nalCount = currentFrame.length;\n            currentGop.byteLength = currentFrame.byteLength;\n            currentGop.pts = currentFrame.pts;\n            currentGop.dts = currentFrame.dts;\n            currentGop.duration = currentFrame.duration;\n          } else {\n            currentGop.duration += currentFrame.duration;\n            currentGop.nalCount += currentFrame.length;\n            currentGop.byteLength += currentFrame.byteLength;\n            currentGop.push(currentFrame);\n          }\n        }\n\n        if (gops.length && currentGop.duration <= 0) {\n          currentGop.duration = gops[gops.length - 1].duration;\n        }\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n\n        // push the final Gop\n        gops.push(currentGop);\n        return gops;\n      };\n\n      // generate the track's sample table from an array of gops\n      this.generateSampleTable_ = function (gops, baseDataOffset) {\n        var h,\n            i,\n            sample,\n            currentGop,\n            currentFrame,\n            dataOffset = baseDataOffset || 0,\n            samples = [];\n\n        for (h = 0; h < gops.length; h++) {\n          currentGop = gops[h];\n\n          for (i = 0; i < currentGop.length; i++) {\n            currentFrame = currentGop[i];\n\n            sample = createDefaultSample();\n\n            sample.dataOffset = dataOffset;\n            sample.compositionTimeOffset = currentFrame.pts - currentFrame.dts;\n            sample.duration = currentFrame.duration;\n            sample.size = 4 * currentFrame.length; // Space for nal unit size\n            sample.size += currentFrame.byteLength;\n\n            if (currentFrame.keyFrame) {\n              sample.flags.dependsOn = 2;\n            }\n\n            dataOffset += sample.size;\n\n            samples.push(sample);\n          }\n        }\n        return samples;\n      };\n\n      // generate the track's raw mdat data from an array of gops\n      this.concatenateNalData_ = function (gops) {\n        var h,\n            i,\n            j,\n            currentGop,\n            currentFrame,\n            currentNal,\n            dataOffset = 0,\n            nalsByteLength = gops.byteLength,\n            numberOfNals = gops.nalCount,\n            totalByteLength = nalsByteLength + 4 * numberOfNals,\n            data = new Uint8Array(totalByteLength),\n            view = new DataView(data.buffer);\n\n        // For each Gop..\n        for (h = 0; h < gops.length; h++) {\n          currentGop = gops[h];\n\n          // For each Frame..\n          for (i = 0; i < currentGop.length; i++) {\n            currentFrame = currentGop[i];\n\n            // For each NAL..\n            for (j = 0; j < currentFrame.length; j++) {\n              currentNal = currentFrame[j];\n\n              view.setUint32(dataOffset, currentNal.data.byteLength);\n              dataOffset += 4;\n              data.set(currentNal.data, dataOffset);\n              dataOffset += currentNal.data.byteLength;\n            }\n          }\n        }\n        return data;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          }\n\n          // current gop starts before the current gop we want to align on. so increment gop\n          // index\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n    collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n    clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts;\n\n      // Optionally adjust the time so the first segment starts at zero.\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      }\n\n      // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n      // Add to that the distance this segment is from the very first\n      baseMediaDecodeTime += minSegmentDts;\n\n      // baseMediaDecodeTime must not become negative\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$1;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     */\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this);\n\n      // Take output from multiple\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        }\n        // buffer incoming id3 tags until the final flush\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        }\n\n        // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n\n      initSegment = mp4Generator.initSegment(this.pendingTracks);\n\n      // Create a new typed array to hold the init segment\n      event.initSegment = new Uint8Array(initSegment.byteLength);\n\n      // Create an init segment containing a moov\n      // and track definitions\n      event.initSegment.set(initSegment);\n\n      // Create a new typed array to hold the moof+mdats\n      event.data = new Uint8Array(this.pendingBytes);\n\n      // Append each moof+mdat (one per track) together\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      }\n\n      // Translate caption PTS times into second offsets into the\n      // video timeline for the segment, and add track info\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts - timelineStartPts;\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts - timelineStartPts;\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      }\n\n      // Translate ID3 frame PTS times into second offsets into the\n      // video timeline for the segment\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts - timelineStartPts;\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      }\n      // We add this to every single emitted segment even though we only need\n      // it for the first\n      event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n      // Reset stream state\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0;\n\n      // Emit the built segment\n      this.trigger('data', event);\n\n      // Only emit `done` if all tracks have been flushed and emitted\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            };\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            // Set up the final part of the audio pipeline\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream;\n\n        // disassemble MPEG2-TS packets into elementary streams\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream);\n\n        // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        // Hook up CEA-608/708 caption stream\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length;\n\n            // scan the tracks listed in the metadata\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            }\n\n            // hook up the video segment stream to the first track with h264 data\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo;\n                  // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n\n              // Set up the final part of the video pipeline\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n\n              // Set up the final part of the audio pipeline\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      // hook up the segment streams once track metadata is delivered\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          clearDtsInfo(audioTrack);\n          audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n          videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n\n      // feed incoming data to the front of the parsing pipeline\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n          hasFlushed = false;\n        }\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      };\n\n      // flush any buffered data\n      this.flush = function () {\n        hasFlushed = true;\n        // Start at the top of the pipeline and flush all pending work\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      // Caption data has to be reset when seeking outside buffered range\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n    _Transmuxer.prototype = new stream();\n\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES\n    };\n\n    var mp4 = {\n      generator: mp4Generator,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream\n    };\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n    var wireTransmuxerEvents = function wireTransmuxerEvents(transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n\n        var typedArray = segment.data;\n\n        segment.data = typedArray.buffer;\n        window_1.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          window_1.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        window_1.postMessage({ action: 'done' });\n      });\n\n      transmuxer.on('gopInfo', function (gopInfo) {\n        window_1.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n    };\n\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n    var MessageHandlers = function () {\n      function MessageHandlers(options) {\n        classCallCheck$$1(this, MessageHandlers);\n\n        this.options = options || {};\n        this.init();\n      }\n\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n      createClass$$1(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.transmuxer);\n        }\n\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n\n          this.transmuxer.push(segment);\n        }\n\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers();\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n\n    return transmuxerWorker;\n  }();\n});\n\n/**\n * @file codec-utils.js\n */\n\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\nvar isAudioCodec = function isAudioCodec(codec) {\n  return (/mp4a\\.\\d+.\\d+/i.test(codec)\n  );\n};\n\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\nvar isVideoCodec = function isVideoCodec(codec) {\n  return (/avc1\\.[\\da-f]+/i.test(codec)\n  );\n};\n\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\nvar parseContentType = function parseContentType(type) {\n  var object = { type: '', parameters: {} };\n  var parameters = type.trim().split(';');\n\n  // first parameter should always be content-type\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n\n      object.parameters[name] = value;\n    }\n  });\n\n  return object;\n};\n\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n\n/**\n * @file virtual-source-buffer.js\n */\n\n// We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Player} player\n *        The player instance\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, player, mapping) {\n  if (!player || !buffer.length) {\n    return [];\n  }\n\n  // pts value for current time + 3 seconds to give a bit more wiggle room\n  var currentTimePts = Math.ceil((player.currentTime() - mapping + 3) * 90000);\n\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  }\n\n  // clamp remove range start to 0 index\n  j = Math.max(j, 0);\n\n  updatedBuffer.splice(j, i - j + 1);\n\n  return updatedBuffer;\n};\n\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this7 = possibleConstructorReturn(this, _videojs$EventTarget.call(this, videojs$1.EventTarget));\n\n    _this7.timestampOffset_ = 0;\n    _this7.pendingBuffers_ = [];\n    _this7.bufferUpdating_ = false;\n\n    _this7.mediaSource_ = mediaSource;\n    _this7.codecs_ = codecs;\n    _this7.audioCodec_ = null;\n    _this7.videoCodec_ = null;\n    _this7.audioDisabled_ = false;\n    _this7.appendAudioInitSegment_ = true;\n    _this7.gopBuffer_ = [];\n    _this7.timeMapping_ = 0;\n    _this7.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this7.safeAppend_\n    };\n\n    _this7.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this7.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this7.videoCodec_ = codec;\n      }\n    });\n\n    // append muxed segments to their respective native buffers as\n    // soon as they are available\n    _this7.transmuxer_ = new TransmuxWorker();\n    _this7.transmuxer_.postMessage({ action: 'init', options: options });\n\n    _this7.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this7.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this7.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this7.appendGopInfo_(event);\n      }\n    };\n\n    // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n    Object.defineProperty(_this7, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true;\n\n          // reset gop buffer on timestampoffset as this signals a change in timeline\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0;\n\n          // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    });\n\n    // setting the append window affects both source buffers\n    Object.defineProperty(_this7, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    });\n\n    // this buffer is \"updating\" if either of its native buffers are\n    Object.defineProperty(_this7, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    });\n\n    // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n    Object.defineProperty(_this7, 'buffered', {\n      get: function get$$1() {\n        var start = null;\n        var end = null;\n        var arity = 0;\n        var extents = [];\n        var ranges = [];\n\n        // neither buffer has been created yet\n        if (!this.videoBuffer_ && !this.audioBuffer_) {\n          return videojs$1.createTimeRange();\n        }\n\n        // only one buffer is configured\n        if (!this.videoBuffer_) {\n          return this.audioBuffer_.buffered;\n        }\n        if (!this.audioBuffer_) {\n          return this.videoBuffer_.buffered;\n        }\n\n        // both buffers are configured\n        if (this.audioDisabled_) {\n          return this.videoBuffer_.buffered;\n        }\n\n        // both buffers are empty\n        if (this.videoBuffer_.buffered.length === 0 && this.audioBuffer_.buffered.length === 0) {\n          return videojs$1.createTimeRange();\n        }\n\n        // Handle the case where we have both buffers and create an\n        // intersection of the two\n        var videoBuffered = this.videoBuffer_.buffered;\n        var audioBuffered = this.audioBuffer_.buffered;\n        var count = videoBuffered.length;\n\n        // A) Gather up all start and end times\n        while (count--) {\n          extents.push({ time: videoBuffered.start(count), type: 'start' });\n          extents.push({ time: videoBuffered.end(count), type: 'end' });\n        }\n        count = audioBuffered.length;\n        while (count--) {\n          extents.push({ time: audioBuffered.start(count), type: 'start' });\n          extents.push({ time: audioBuffered.end(count), type: 'end' });\n        }\n        // B) Sort them by time\n        extents.sort(function (a, b) {\n          return a.time - b.time;\n        });\n\n        // C) Go along one by one incrementing arity for start and decrementing\n        //    arity for ends\n        for (count = 0; count < extents.length; count++) {\n          if (extents[count].type === 'start') {\n            arity++;\n\n            // D) If arity is ever incremented to 2 we are entering an\n            //    overlapping range\n            if (arity === 2) {\n              start = extents[count].time;\n            }\n          } else if (extents[count].type === 'end') {\n            arity--;\n\n            // E) If arity is ever decremented to 1 we leaving an\n            //    overlapping range\n            if (arity === 1) {\n              end = extents[count].time;\n            }\n          }\n\n          // F) Record overlapping ranges\n          if (start !== null && end !== null) {\n            ranges.push([start, end]);\n            start = null;\n            end = null;\n          }\n        }\n\n        return videojs$1.createTimeRanges(ranges);\n      }\n    });\n    return _this7;\n  }\n\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  VirtualSourceBuffer.prototype.data_ = function data_(event) {\n    var segment = event.data.segment;\n\n    // Cast ArrayBuffer to TypedArray\n    segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n\n    segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n\n    createTextTracksIfNecessary(this, this.mediaSource_, segment);\n\n    // Add the segments to the pendingBuffers array\n    this.pendingBuffers_.push(segment);\n    return;\n  };\n\n  /**\n   * When we get a done event from the transmuxer\n   * we call this function and we process all\n   * of the pending data that we have been saving in the\n   * data_ function\n   *\n   * @private\n   * @param {Event} event the done event from the transmuxer\n   */\n\n\n  VirtualSourceBuffer.prototype.done_ = function done_(event) {\n    // Don't process and append data if the mediaSource is closed\n    if (this.mediaSource_.readyState === 'closed') {\n      this.pendingBuffers_.length = 0;\n      return;\n    }\n\n    // All buffers should have been flushed from the muxer\n    // start processing anything we have received\n    this.processPendingSegments_();\n    return;\n  };\n\n  /**\n   * Create our internal native audio/video source buffers and add\n   * event handlers to them with the following conditions:\n   * 1. they do not already exist on the mediaSource\n   * 2. this VSB has a codec for them\n   *\n   * @private\n   */\n\n\n  VirtualSourceBuffer.prototype.createRealSourceBuffers_ = function createRealSourceBuffers_() {\n    var _this8 = this;\n\n    var types = ['audio', 'video'];\n\n    types.forEach(function (type) {\n      // Don't create a SourceBuffer of this type if we don't have a\n      // codec for it\n      if (!_this8[type + 'Codec_']) {\n        return;\n      }\n\n      // Do nothing if a SourceBuffer of this type already exists\n      if (_this8[type + 'Buffer_']) {\n        return;\n      }\n\n      var buffer = null;\n\n      // If the mediasource already has a SourceBuffer for the codec\n      // use that\n      if (_this8.mediaSource_[type + 'Buffer_']) {\n        buffer = _this8.mediaSource_[type + 'Buffer_'];\n        // In multiple audio track cases, the audio source buffer is disabled\n        // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n        // than createRealSourceBuffers_ is called to create the second\n        // VirtualSourceBuffer because that happens as a side-effect of\n        // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n        // the audioBuffer is essentially \"ownerless\" and no one will toggle\n        // the `updating` state back to false once the `updateend` event is received\n        //\n        // Setting `updating` to false manually will work around this\n        // situation and allow work to continue\n        buffer.updating = false;\n      } else {\n        var codecProperty = type + 'Codec_';\n        var mimeType = type + '/mp4;codecs=\"' + _this8[codecProperty] + '\"';\n\n        buffer = makeWrappedSourceBuffer(_this8.mediaSource_.nativeMediaSource_, mimeType);\n\n        _this8.mediaSource_[type + 'Buffer_'] = buffer;\n      }\n\n      _this8[type + 'Buffer_'] = buffer;\n\n      // Wire up the events to the SourceBuffer\n      ['update', 'updatestart', 'updateend'].forEach(function (event) {\n        buffer.addEventListener(event, function () {\n          // if audio is disabled\n          if (type === 'audio' && _this8.audioDisabled_) {\n            return;\n          }\n\n          if (event === 'updateend') {\n            _this8[type + 'Buffer_'].updating = false;\n          }\n\n          var shouldTrigger = types.every(function (t) {\n            // skip checking audio's updating status if audio\n            // is not enabled\n            if (t === 'audio' && _this8.audioDisabled_) {\n              return true;\n            }\n            // if the other type if updating we don't trigger\n            if (type !== t && _this8[t + 'Buffer_'] && _this8[t + 'Buffer_'].updating) {\n              return false;\n            }\n            return true;\n          });\n\n          if (shouldTrigger) {\n            return _this8.trigger(event);\n          }\n        });\n      });\n    });\n  };\n\n  /**\n   * Emulate the native mediasource function, but our function will\n   * send all of the proposed segments to the transmuxer so that we\n   * can transmux them before we append them to our internal\n   * native source buffers in the correct format.\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n   * @param {Uint8Array} segment the segment to append to the buffer\n   */\n\n\n  VirtualSourceBuffer.prototype.appendBuffer = function appendBuffer(segment) {\n    // Start the internal \"updating\" state\n    this.bufferUpdating_ = true;\n\n    if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n      var audioBuffered = this.audioBuffer_.buffered;\n\n      this.transmuxer_.postMessage({\n        action: 'setAudioAppendStart',\n        appendStart: audioBuffered.end(audioBuffered.length - 1)\n      });\n    }\n\n    if (this.videoBuffer_) {\n      this.transmuxer_.postMessage({\n        action: 'alignGopsWith',\n        gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_, this.timeMapping_)\n      });\n    }\n\n    this.transmuxer_.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: segment.buffer,\n\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset: segment.byteOffset,\n      byteLength: segment.byteLength\n    }, [segment.buffer]);\n    this.transmuxer_.postMessage({ action: 'flush' });\n  };\n\n  /**\n   * Appends gop information (timing and byteLength) received by the transmuxer for the\n   * gops appended in the last call to appendBuffer\n   *\n   * @param {Event} event\n   *        The gopInfo event from the transmuxer\n   * @param {Array} event.data.gopInfo\n   *        List of gop info to append\n   */\n\n\n  VirtualSourceBuffer.prototype.appendGopInfo_ = function appendGopInfo_(event) {\n    this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n  };\n\n  /**\n   * Emulate the native mediasource function and remove parts\n   * of the buffer from any of our internal buffers that exist\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n   * @param {Double} start position to start the remove at\n   * @param {Double} end position to end the remove at\n   */\n\n\n  VirtualSourceBuffer.prototype.remove = function remove(start, end) {\n    if (this.videoBuffer_) {\n      this.videoBuffer_.updating = true;\n      this.videoBuffer_.remove(start, end);\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n    }\n    if (!this.audioDisabled_ && this.audioBuffer_) {\n      this.audioBuffer_.updating = true;\n      this.audioBuffer_.remove(start, end);\n    }\n\n    // Remove Metadata Cues (id3)\n    removeCuesFromTrack(start, end, this.metadataTrack_);\n\n    // Remove Any Captions\n    if (this.inbandTextTracks_) {\n      for (var track in this.inbandTextTracks_) {\n        removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n      }\n    }\n  };\n\n  /**\n   * Process any segments that the muxer has output\n   * Concatenate segments together based on type and append them into\n   * their respective sourceBuffers\n   *\n   * @private\n   */\n\n\n  VirtualSourceBuffer.prototype.processPendingSegments_ = function processPendingSegments_() {\n    var sortedSegments = {\n      video: {\n        segments: [],\n        bytes: 0\n      },\n      audio: {\n        segments: [],\n        bytes: 0\n      },\n      captions: [],\n      metadata: []\n    };\n\n    // Sort segments into separate video/audio arrays and\n    // keep track of their total byte lengths\n    sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n      var type = segment.type;\n      var data = segment.data;\n      var initSegment = segment.initSegment;\n\n      segmentObj[type].segments.push(data);\n      segmentObj[type].bytes += data.byteLength;\n\n      segmentObj[type].initSegment = initSegment;\n\n      // Gather any captions into a single array\n      if (segment.captions) {\n        segmentObj.captions = segmentObj.captions.concat(segment.captions);\n      }\n\n      if (segment.info) {\n        segmentObj[type].info = segment.info;\n      }\n\n      // Gather any metadata into a single array\n      if (segment.metadata) {\n        segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n      }\n\n      return segmentObj;\n    }, sortedSegments);\n\n    // Create the real source buffers if they don't exist by now since we\n    // finally are sure what tracks are contained in the source\n    if (!this.videoBuffer_ && !this.audioBuffer_) {\n      // Remove any codecs that may have been specified by default but\n      // are no longer applicable now\n      if (sortedSegments.video.bytes === 0) {\n        this.videoCodec_ = null;\n      }\n      if (sortedSegments.audio.bytes === 0) {\n        this.audioCodec_ = null;\n      }\n\n      this.createRealSourceBuffers_();\n    }\n\n    if (sortedSegments.audio.info) {\n      this.mediaSource_.trigger({ type: 'audioinfo', info: sortedSegments.audio.info });\n    }\n    if (sortedSegments.video.info) {\n      this.mediaSource_.trigger({ type: 'videoinfo', info: sortedSegments.video.info });\n    }\n\n    if (this.appendAudioInitSegment_) {\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n        sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n      }\n      this.appendAudioInitSegment_ = false;\n    }\n\n    var triggerUpdateend = false;\n\n    // Merge multiple video and audio segments into one and append\n    if (this.videoBuffer_ && sortedSegments.video.bytes) {\n      sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n      sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n      this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      // TODO: are video tracks the only ones with text tracks?\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n    } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n      // The transmuxer did not return any bytes of video, meaning it was all trimmed\n      // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n      // will never be triggered by this source buffer, which will cause contrib-hls\n      // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n      // will be triggered by the audio buffer, which will be sent upwards since the video\n      // buffer will not be in an updating state.\n      triggerUpdateend = true;\n    }\n\n    if (!this.audioDisabled_ && this.audioBuffer_) {\n      this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n    }\n\n    this.pendingBuffers_.length = 0;\n\n    if (triggerUpdateend) {\n      this.trigger('updateend');\n    }\n\n    // We are no longer in the internal \"updating\" state\n    this.bufferUpdating_ = false;\n  };\n\n  /**\n   * Combine all segments into a single Uint8Array and then append them\n   * to the destination buffer\n   *\n   * @param {Object} segmentObj\n   * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n   * @private\n   */\n\n\n  VirtualSourceBuffer.prototype.concatAndAppendSegments_ = function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n    var offset = 0;\n    var tempBuffer = void 0;\n\n    if (segmentObj.bytes) {\n      tempBuffer = new Uint8Array(segmentObj.bytes);\n\n      // Combine the individual segments into one large typed-array\n      segmentObj.segments.forEach(function (segment) {\n        tempBuffer.set(segment, offset);\n        offset += segment.byteLength;\n      });\n\n      try {\n        destinationBuffer.updating = true;\n        destinationBuffer.appendBuffer(tempBuffer);\n      } catch (error) {\n        if (this.mediaSource_.player_) {\n          this.mediaSource_.player_.error({\n            code: -3,\n            type: 'APPEND_BUFFER_ERR',\n            message: error.message,\n            originalError: error\n          });\n        }\n      }\n    }\n  };\n\n  /**\n   * Emulate the native mediasource function. abort any soureBuffer\n   * actions and throw out any un-appended data.\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n   */\n\n\n  VirtualSourceBuffer.prototype.abort = function abort() {\n    if (this.videoBuffer_) {\n      this.videoBuffer_.abort();\n    }\n    if (!this.audioDisabled_ && this.audioBuffer_) {\n      this.audioBuffer_.abort();\n    }\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({ action: 'reset' });\n    }\n    this.pendingBuffers_.length = 0;\n    this.bufferUpdating_ = false;\n  };\n\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget2) {\n  inherits(HtmlMediaSource, _videojs$EventTarget2);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this9 = possibleConstructorReturn(this, _videojs$EventTarget2.call(this));\n\n    var property = void 0;\n\n    _this9.nativeMediaSource_ = new window$1.MediaSource();\n    // delegate to the native MediaSource's methods by default\n    for (property in _this9.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this9.nativeMediaSource_[property] === 'function') {\n        _this9[property] = _this9.nativeMediaSource_[property].bind(_this9.nativeMediaSource_);\n      }\n    }\n\n    // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n    _this9.duration_ = NaN;\n    Object.defineProperty(_this9, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this9, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n\n    Object.defineProperty(_this9, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n\n    Object.defineProperty(_this9, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    });\n\n    // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n    _this9.sourceBuffers = [];\n\n    _this9.activeSourceBuffers_ = [];\n\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n    _this9.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this9.activeSourceBuffers_.length = 0;\n\n      // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n      if (_this9.sourceBuffers.length === 1) {\n        var sourceBuffer = _this9.sourceBuffers[0];\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n        _this9.activeSourceBuffers_.push(sourceBuffer);\n        return;\n      }\n\n      // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n      var disableCombined = false;\n      var disableAudioOnly = true;\n\n      // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n      for (var i = 0; i < _this9.player_.audioTracks().length; i++) {\n        var track = _this9.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this9.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n        /* eslinst-enable */\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this9.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this9.onPlayerMediachange_ = function () {\n      _this9.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this9.onHlsReset_ = function () {\n      _this9.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({ action: 'resetCaptions' });\n        }\n      });\n    };\n\n    _this9.onHlsSegmentTimeMapping_ = function (event) {\n      _this9.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    };\n\n    // Re-emit MediaSource events on the polyfill\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this9);\n\n    // capture the associated player when the MediaSource is\n    // successfully attached\n    _this9.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this9.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this9.player_ = videojs$1(video.parentNode);\n\n      // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n      _this9.player_.tech_.on('hls-reset', _this9.onHlsReset_);\n      // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n      _this9.player_.tech_.on('hls-segment-time-mapping', _this9.onHlsSegmentTimeMapping_);\n\n      if (_this9.player_.audioTracks && _this9.player_.audioTracks()) {\n        _this9.player_.audioTracks().on('change', _this9.updateActiveSourceBuffers_);\n        _this9.player_.audioTracks().on('addtrack', _this9.updateActiveSourceBuffers_);\n        _this9.player_.audioTracks().on('removetrack', _this9.updateActiveSourceBuffers_);\n      }\n\n      _this9.player_.on('mediachange', _this9.onPlayerMediachange_);\n    });\n\n    _this9.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this9.duration);\n\n      for (var i = 0; i < _this9.sourceBuffers.length; i++) {\n        var sourcebuffer = _this9.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    });\n\n    // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n    _this9.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n\n      this.sourceBuffers.length = 0;\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      }\n\n      // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n    return _this9;\n  }\n\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  HtmlMediaSource.prototype.addSeekableRange_ = function addSeekableRange_(start, end) {\n    var error = void 0;\n\n    if (this.duration !== Infinity) {\n      error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n      error.name = 'InvalidStateError';\n      error.code = 11;\n      throw error;\n    }\n\n    if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n      this.nativeMediaSource_.duration = end;\n    }\n  };\n\n  /**\n   * Add a source buffer to the media source.\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n   * @param {String} type the content-type of the content\n   * @return {Object} the created source buffer\n   */\n\n\n  HtmlMediaSource.prototype.addSourceBuffer = function addSourceBuffer(type) {\n    var buffer = void 0;\n    var parsedType = parseContentType(type);\n\n    // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n    // stream segments into fragmented MP4s\n    if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n      var codecs = [];\n\n      if (parsedType.parameters && parsedType.parameters.codecs) {\n        codecs = parsedType.parameters.codecs.split(',');\n        codecs = translateLegacyCodecs(codecs);\n        codecs = codecs.filter(function (codec) {\n          return isAudioCodec(codec) || isVideoCodec(codec);\n        });\n      }\n\n      if (codecs.length === 0) {\n        codecs = ['avc1.4d400d', 'mp4a.40.2'];\n      }\n\n      buffer = new VirtualSourceBuffer(this, codecs);\n\n      if (this.sourceBuffers.length !== 0) {\n        // If another VirtualSourceBuffer already exists, then we are creating a\n        // SourceBuffer for an alternate audio track and therefore we know that\n        // the source has both an audio and video track.\n        // That means we should trigger the manual creation of the real\n        // SourceBuffers instead of waiting for the transmuxer to return data\n        this.sourceBuffers[0].createRealSourceBuffers_();\n        buffer.createRealSourceBuffers_();\n\n        // Automatically disable the audio on the first source buffer if\n        // a second source buffer is ever created\n        this.sourceBuffers[0].audioDisabled_ = true;\n      }\n    } else {\n      // delegate to the native implementation\n      buffer = this.nativeMediaSource_.addSourceBuffer(type);\n    }\n\n    this.sourceBuffers.push(buffer);\n    return buffer;\n  };\n\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0;\n\n// ------------\n// Media Source\n// ------------\n\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\nvideojs$1.mediaSources = {};\n\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({ type: 'sourceopen', swfId: swfId });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0;\n\n    // use the native MediaSource to generate an object URL\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    }\n    // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    }\n\n    // build a URL that can be used to map back to the emulated\n    // MediaSource\n    url = objectUrlPrefix + urlCount;\n\n    urlCount++;\n\n    // setup the mapping back to object\n    videojs$1.mediaSources[url] = object;\n\n    return url;\n  }\n};\n\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\n\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$1(oldMaster, newMaster) {\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  });\n\n  // First update the playlists in playlist list\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    }\n  }\n\n  // Then update media group playlists\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate;\n        // update the playlist reference within media groups\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n      }\n    }\n  });\n\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget$) {\n  inherits(DashPlaylistLoader, _EventTarget$);\n\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls, withCredentials, masterPlaylistLoader) {\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this10 = possibleConstructorReturn(this, _EventTarget$.call(this));\n\n    _this10.hls_ = hls;\n    _this10.withCredentials = withCredentials;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    }\n\n    // event naming?\n    _this10.on('minimumUpdatePeriod', function () {\n      _this10.refreshXml_();\n    });\n\n    // live playlist staleness timeout\n    _this10.on('mediaupdatetimeout', function () {\n      _this10.refreshMedia_();\n    });\n\n    // initialize the loader state\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this10.srcUrl = srcUrlOrPlaylist;\n      _this10.state = 'HAVE_NOTHING';\n      return possibleConstructorReturn(_this10);\n    }\n\n    _this10.masterPlaylistLoader_ = masterPlaylistLoader;\n\n    _this10.state = 'HAVE_METADATA';\n    _this10.started = true;\n    // we only should have one playlist so select it\n    _this10.media(srcUrlOrPlaylist);\n    // trigger async to mimic behavior of HLS, where it must request a playlist\n    window$1.setTimeout(function () {\n      _this10.trigger('loadedmetadata');\n    }, 0);\n    return _this10;\n  }\n\n  DashPlaylistLoader.prototype.dispose = function dispose() {\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n  };\n\n  DashPlaylistLoader.prototype.stopRequest = function stopRequest() {\n    if (this.request) {\n      var oldRequest = this.request;\n\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  };\n\n  DashPlaylistLoader.prototype.media = function media(playlist) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    }\n\n    // setter\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n\n    var startingState = this.state;\n\n    // find the playlist object if the target playlist has been specified by URI\n    if (typeof playlist === 'string') {\n      if (!this.master.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.master.playlists[playlist];\n    }\n\n    var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n    this.state = 'HAVE_METADATA';\n\n    // switching to the active playlist is a no-op\n    if (!mediaChange) {\n      return;\n    }\n\n    // switching from an already loaded playlist\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n\n    this.media_ = playlist;\n\n    this.refreshMedia_();\n\n    // trigger media change if the active media has been updated\n    if (startingState !== 'HAVE_MASTER') {\n      this.trigger('mediachange');\n    }\n  };\n\n  DashPlaylistLoader.prototype.pause = function pause() {\n    this.stopRequest();\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  };\n\n  DashPlaylistLoader.prototype.load = function load() {\n    // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n    if (!this.started) {\n      this.start();\n      return;\n    }\n\n    this.trigger('loadedplaylist');\n  };\n\n  /**\n   * Parses the master xml string and updates playlist uri references\n   *\n   * @return {Object}\n   *         The parsed mpd manifest object\n   */\n\n\n  DashPlaylistLoader.prototype.parseMasterXml = function parseMasterXml() {\n    var master = mpdParser.parse(this.masterXml_, {\n      manifestUri: this.srcUrl,\n      clientOffset: this.clientOffset_\n    });\n\n    master.uri = this.srcUrl;\n\n    // Set up phony URIs for the playlists since we won't have external URIs for DASH\n    // but reference playlists by their URI throughout the project\n    // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n    for (var i = 0; i < master.playlists.length; i++) {\n      var phonyUri = 'placeholder-uri-' + i;\n\n      master.playlists[i].uri = phonyUri;\n      // set up by URI references\n      master.playlists[phonyUri] = master.playlists[i];\n    }\n\n    // set up phony URIs for the media group playlists since we won't have external\n    // URIs for DASH but reference playlists by their URI throughout the project\n    forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n      if (properties.playlists && properties.playlists.length) {\n        var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n        properties.playlists[0].uri = _phonyUri;\n        // setup URI references\n        master.playlists[_phonyUri] = properties.playlists[0];\n      }\n    });\n\n    setupMediaPlaylists(master);\n    resolveMediaGroupUris(master);\n\n    return master;\n  };\n\n  DashPlaylistLoader.prototype.start = function start() {\n    var _this11 = this;\n\n    this.started = true;\n\n    // request the specified URL\n    this.request = this.hls_.xhr({\n      uri: this.srcUrl,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this11.request) {\n        return;\n      }\n\n      // clear the loader's request reference\n      _this11.request = null;\n\n      if (error) {\n        _this11.error = {\n          status: req.status,\n          message: 'DASH playlist request error at URL: ' + _this11.srcUrl,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        if (_this11.state === 'HAVE_NOTHING') {\n          _this11.started = false;\n        }\n        return _this11.trigger('error');\n      }\n\n      _this11.masterXml_ = req.responseText;\n\n      if (req.responseHeaders && req.responseHeaders.date) {\n        _this11.masterLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        _this11.masterLoaded_ = Date.now();\n      }\n\n      _this11.syncClientServerClock_(_this11.onClientServerClockSync_.bind(_this11));\n    });\n  };\n\n  /**\n   * Parses the master xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n\n\n  DashPlaylistLoader.prototype.syncClientServerClock_ = function syncClientServerClock_(done) {\n    var _this12 = this;\n\n    var utcTiming = mpdParser.parseUTCTiming(this.masterXml_);\n\n    // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n    if (utcTiming === null) {\n      this.clientOffset_ = this.masterLoaded_ - Date.now();\n      return done();\n    }\n\n    if (utcTiming.method === 'DIRECT') {\n      this.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n\n    this.request = this.hls_.xhr({\n      uri: resolveUrl(this.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this12.request) {\n        return;\n      }\n\n      if (error) {\n        // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n        _this12.clientOffset_ = _this12.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      var serverTime = void 0;\n\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = _this12.masterLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n\n      _this12.clientOffset_ = serverTime - Date.now();\n\n      done();\n    });\n  };\n\n  /**\n   * Handler for after client/server clock synchronization has happened. Sets up\n   * xml refresh timer if specificed by the manifest.\n   */\n\n\n  DashPlaylistLoader.prototype.onClientServerClockSync_ = function onClientServerClockSync_() {\n    var _this13 = this;\n\n    this.master = this.parseMasterXml();\n\n    this.state = 'HAVE_MASTER';\n\n    this.trigger('loadedplaylist');\n\n    if (!this.media_) {\n      // no media playlist was specifically selected so start\n      // from the first listed one\n      this.media(this.master.playlists[0]);\n    }\n    // trigger loadedmetadata to resolve setup of media groups\n    // trigger async to mimic behavior of HLS, where it must request a playlist\n    window$1.setTimeout(function () {\n      _this13.trigger('loadedmetadata');\n    }, 0);\n\n    // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n    // be refreshed when this is the case. The inter-op guide says that when the\n    // minimumUpdatePeriod is 0, the manifest should outline all currently available\n    // segments, but future segments may require an update. I think a good solution\n    // would be to update the manifest at the same rate that the media playlists\n    // are \"refreshed\", i.e. every targetDuration.\n    if (this.master.minimumUpdatePeriod) {\n      window$1.setTimeout(function () {\n        _this13.trigger('minimumUpdatePeriod');\n      }, this.master.minimumUpdatePeriod);\n    }\n  };\n\n  /**\n   * Sends request to refresh the master xml and updates the parsed master manifest\n   * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n   */\n\n\n  DashPlaylistLoader.prototype.refreshXml_ = function refreshXml_() {\n    var _this14 = this;\n\n    this.request = this.hls_.xhr({\n      uri: this.srcUrl,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this14.request) {\n        return;\n      }\n\n      // clear the loader's request reference\n      _this14.request = null;\n\n      if (error) {\n        _this14.error = {\n          status: req.status,\n          message: 'DASH playlist request error at URL: ' + _this14.srcUrl,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        if (_this14.state === 'HAVE_NOTHING') {\n          _this14.started = false;\n        }\n        return _this14.trigger('error');\n      }\n\n      _this14.masterXml_ = req.responseText;\n\n      var newMaster = _this14.parseMasterXml();\n\n      _this14.master = updateMaster$1(_this14.master, newMaster);\n\n      window$1.setTimeout(function () {\n        _this14.trigger('minimumUpdatePeriod');\n      }, _this14.master.minimumUpdatePeriod);\n    });\n  };\n\n  /**\n   * Refreshes the media playlist by re-parsing the master xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the master loader.\n   */\n\n\n  DashPlaylistLoader.prototype.refreshMedia_ = function refreshMedia_() {\n    var _this15 = this;\n\n    var oldMaster = void 0;\n    var newMaster = void 0;\n\n    if (this.masterPlaylistLoader_) {\n      oldMaster = this.masterPlaylistLoader_.master;\n      newMaster = this.masterPlaylistLoader_.parseMasterXml();\n    } else {\n      oldMaster = this.master;\n      newMaster = this.parseMasterXml();\n    }\n\n    var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n    if (updatedMaster) {\n      if (this.masterPlaylistLoader_) {\n        this.masterPlaylistLoader_.master = updatedMaster;\n      } else {\n        this.master = updatedMaster;\n      }\n      this.media_ = updatedMaster.playlists[this.media_.uri];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n\n    if (!this.media().endList) {\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\n        _this15.trigger('mediaupdatetimeout');\n      }, refreshDelay(this.media(), !!updatedMaster));\n    }\n\n    this.trigger('loadedplaylist');\n  };\n\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  SourceUpdater.prototype.createSourceBuffer_ = function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n    var _this16 = this;\n\n    this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n\n    this.logger_('created SourceBuffer');\n\n    if (sourceBufferEmitter) {\n      sourceBufferEmitter.trigger('sourcebufferadded');\n\n      if (this.mediaSource.sourceBuffers.length < 2) {\n        // There's another source buffer we must wait for before we can start updating\n        // our own (or else we can get into a bad state, i.e., appending video/audio data\n        // before the other video/audio source buffer is available and leading to a video\n        // or audio only buffer).\n        sourceBufferEmitter.on('sourcebufferadded', function () {\n          _this16.start_();\n        });\n        return;\n      }\n    }\n\n    this.start_();\n  };\n\n  SourceUpdater.prototype.start_ = function start_() {\n    var _this17 = this;\n\n    this.started_ = true;\n\n    // run completion handlers and process callbacks as updateend\n    // events fire\n    this.onUpdateendCallback_ = function () {\n      var pendingCallback = _this17.pendingCallback_;\n\n      _this17.pendingCallback_ = null;\n\n      _this17.logger_('buffered [' + printableRange(_this17.buffered()) + ']');\n\n      if (pendingCallback) {\n        pendingCallback();\n      }\n\n      _this17.runCallback_();\n    };\n\n    this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n\n    this.runCallback_();\n  };\n\n  /**\n   * Aborts the current segment and resets the segment parser.\n   *\n   * @param {Function} done function to call when done\n   * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n   */\n\n\n  SourceUpdater.prototype.abort = function abort(done) {\n    var _this18 = this;\n\n    if (this.processedAppend_) {\n      this.queueCallback_(function () {\n        _this18.sourceBuffer_.abort();\n      }, done);\n    }\n  };\n\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {ArrayBuffer} bytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n\n\n  SourceUpdater.prototype.appendBuffer = function appendBuffer(bytes, done) {\n    var _this19 = this;\n\n    this.processedAppend_ = true;\n    this.queueCallback_(function () {\n      _this19.sourceBuffer_.appendBuffer(bytes);\n    }, done);\n  };\n\n  /**\n   * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n   *\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n   */\n\n\n  SourceUpdater.prototype.buffered = function buffered() {\n    if (!this.sourceBuffer_) {\n      return videojs$1.createTimeRanges();\n    }\n    return this.sourceBuffer_.buffered;\n  };\n\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {Number} start where to start the removal\n   * @param {Number} end where to end the removal\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n\n  SourceUpdater.prototype.remove = function remove(start, end) {\n    var _this20 = this;\n\n    if (this.processedAppend_) {\n      this.queueCallback_(function () {\n        _this20.logger_('remove [' + start + ' => ' + end + ']');\n        _this20.sourceBuffer_.remove(start, end);\n      }, noop);\n    }\n  };\n\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {Boolean} the updating status of the SourceBuffer\n   */\n\n\n  SourceUpdater.prototype.updating = function updating() {\n    return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;\n  };\n\n  /**\n   * Set/get the timestampoffset on the SourceBuffer\n   *\n   * @return {Number} the timestamp offset\n   */\n\n\n  SourceUpdater.prototype.timestampOffset = function timestampOffset(offset) {\n    var _this21 = this;\n\n    if (typeof offset !== 'undefined') {\n      this.queueCallback_(function () {\n        _this21.sourceBuffer_.timestampOffset = offset;\n      });\n      this.timestampOffset_ = offset;\n    }\n    return this.timestampOffset_;\n  };\n\n  /**\n   * Queue a callback to run\n   */\n\n\n  SourceUpdater.prototype.queueCallback_ = function queueCallback_(callback, done) {\n    this.callbacks_.push([callback.bind(this), done]);\n    this.runCallback_();\n  };\n\n  /**\n   * Run a queued callback\n   */\n\n\n  SourceUpdater.prototype.runCallback_ = function runCallback_() {\n    var callbacks = void 0;\n\n    if (!this.updating() && this.callbacks_.length && this.started_) {\n      callbacks = this.callbacks_.shift();\n      this.pendingCallback_ = callbacks[1];\n      callbacks[0]();\n    }\n  };\n\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n\n\n  SourceUpdater.prototype.dispose = function dispose() {\n    this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n    if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n      this.sourceBuffer_.abort();\n    }\n  };\n\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\n\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0;\n\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n\n  stats.bytesReceived = progressEvent.loaded;\n  // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n\n  return stats;\n};\n\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleSegmentResponse = function handleSegmentResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n\n  // this is an encrypted segment\n  // incrementally decrypt the segment\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n\n/**\n * The purpose of this function is to get the most pertinent error from the\n * array of errors.\n * For instance if a timeout and two aborts occur, then the aborts were\n * likely triggered by the timeout so return that error object.\n */\nvar getMostImportantError = function getMostImportantError(errors) {\n  return errors.reduce(function (prev, err) {\n    return err.code > prev.code ? err : prev;\n  });\n};\n\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var errors = [];\n  var count = 0;\n\n  return function (error, segment) {\n    if (error) {\n      // If there are errors, we have to abort any outstanding requests\n      abortAll(activeXhrs);\n      errors.push(error);\n    }\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (errors.length > 0) {\n        var worstError = getMostImportantError(errors);\n\n        return doneFn(worstError, segment);\n      }\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      }\n      // Otherwise, everything is ready just continue\n      return doneFn(null, segment);\n    }\n  };\n};\n\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event));\n\n    // record the time that we receive the first byte of data\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn);\n\n  // optionally, request the decryption key\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n\n    activeXhrs.push(keyXhr);\n  }\n\n  // optionally, request the associated media init segment\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n\n// Default codec parameters if none were provided for video and/or audio\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2;\n\n  // parse the video codec\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  }\n\n  // parse the last field of the audio codec\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n\n  return result;\n};\n\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n  return 'mp2t';\n};\n\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {};\n  // Default condition for a traditional HLS (no demuxed audio/video)\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n    // Handle the case where we are in a multiple-audio track scenario\n    if (audioGroup) {\n      isMaat = true;\n      // Start with the everything demuxed then...\n      isMuxed = false;\n      // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  }\n\n  // Generate the final codec strings from the codec object generated above\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  }\n\n  // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    }\n\n    // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n    return [bothVideoAudio, justAudio];\n  }\n\n  // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n  if (!codecStrings.video) {\n    return [justAudio];\n  }\n\n  // When not using separate audio media groups, audio and video is\n  // *always* muxed\n  return [bothVideoAudio];\n};\n\n// Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n\n  return leftBandwidth - rightBandwidth;\n};\n\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE;\n\n  // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  });\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  }\n\n  // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1];\n\n  // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  // filter out playlists without resolution information\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  });\n\n  // sort variants by resolution\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  });\n\n  // if we have the exact resolution as the player use it\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1];\n  // ensure that we pick the highest bandwidth variant that have exact resolution\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0;\n\n  // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    });\n\n    // find all the variants have the same smallest resolution\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    });\n\n    // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  }\n\n  // fallback chain of variants\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n  return chosenRep ? chosenRep.playlist : null;\n};\n\n// Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10));\n};\n\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController;\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime);\n    // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  });\n\n  // Sort by bandwidth DESC\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n\n  return rebufferingEstimates[0] || null;\n};\n\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled);\n\n  // Sort ascending by bitrate\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  });\n\n  // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * @file segment-loader.js\n */\n\n// in ms\nvar CHECK_BUFFER_DELAY = 500;\n\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments;\n\n  // determine a few boolean values to help make the branch below easier\n  // to read\n  var appendedLastSegment = segmentIndex === segments.length;\n\n  // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  }\n\n  // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n\n\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar SegmentLoader = function (_videojs$EventTarget3) {\n  inherits(SegmentLoader, _videojs$EventTarget3);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader);\n\n    // check pre-conditions\n    var _this22 = possibleConstructorReturn(this, _videojs$EventTarget3.call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    }\n    // public properties\n    _this22.bandwidth = settings.bandwidth;\n    _this22.throughput = { rate: 0, count: 0 };\n    _this22.roundTrip = NaN;\n    _this22.resetStats_();\n    _this22.mediaIndex = null;\n\n    // private settings\n    _this22.hasPlayed_ = settings.hasPlayed;\n    _this22.currentTime_ = settings.currentTime;\n    _this22.seekable_ = settings.seekable;\n    _this22.seeking_ = settings.seeking;\n    _this22.duration_ = settings.duration;\n    _this22.mediaSource_ = settings.mediaSource;\n    _this22.hls_ = settings.hls;\n    _this22.loaderType_ = settings.loaderType;\n    _this22.startingMedia_ = void 0;\n    _this22.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this22.goalBufferLength_ = settings.goalBufferLength;\n    _this22.sourceType_ = settings.sourceType;\n    _this22.state_ = 'INIT';\n\n    // private instance variables\n    _this22.checkBufferTimeout_ = null;\n    _this22.error_ = void 0;\n    _this22.currentTimeline_ = -1;\n    _this22.pendingSegment_ = null;\n    _this22.mimeType_ = null;\n    _this22.sourceUpdater_ = null;\n    _this22.xhrOptions_ = null;\n\n    // Fragmented mp4 playback\n    _this22.activeInitSegmentId_ = null;\n    _this22.initSegments_ = {};\n\n    _this22.decrypter_ = settings.decrypter;\n\n    // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n    _this22.syncController_ = settings.syncController;\n    _this22.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this22.syncController_.on('syncinfoupdate', function () {\n      return _this22.trigger('syncinfoupdate');\n    });\n\n    _this22.mediaSource_.addEventListener('sourceopen', function () {\n      return _this22.ended_ = false;\n    });\n\n    // ...for determining the fetch location\n    _this22.fetchAtBuffer_ = false;\n\n    _this22.logger_ = logger('SegmentLoader[' + _this22.loaderType_ + ']');\n\n    Object.defineProperty(_this22, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this22;\n  }\n\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.resetStats_ = function resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n  };\n\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n\n\n  SegmentLoader.prototype.dispose = function dispose() {\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n    if (this.sourceUpdater_) {\n      this.sourceUpdater_.dispose();\n    }\n    this.resetStats_();\n  };\n\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n\n\n  SegmentLoader.prototype.abort = function abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n      return;\n    }\n\n    this.abort_();\n\n    // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n    this.state = 'READY';\n\n    // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  };\n\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.abort_ = function abort_() {\n    if (this.pendingSegment_) {\n      this.pendingSegment_.abortRequests();\n    }\n\n    // clear out the segment being processed\n    this.pendingSegment_ = null;\n  };\n\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n\n\n  SegmentLoader.prototype.error = function error(_error) {\n    if (typeof _error !== 'undefined') {\n      this.error_ = _error;\n    }\n\n    this.pendingSegment_ = null;\n    return this.error_;\n  };\n\n  SegmentLoader.prototype.endOfStream = function endOfStream() {\n    this.ended_ = true;\n    this.pause();\n    this.trigger('ended');\n  };\n\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  SegmentLoader.prototype.buffered_ = function buffered_() {\n    if (!this.sourceUpdater_) {\n      return videojs$1.createTimeRanges();\n    }\n\n    return this.sourceUpdater_.buffered();\n  };\n\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {Boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n\n  SegmentLoader.prototype.initSegment = function initSegment(map) {\n    var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!map) {\n      return null;\n    }\n\n    var id = initSegmentId(map);\n    var storedMap = this.initSegments_[id];\n\n    if (set$$1 && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes\n      };\n    }\n\n    return storedMap || map;\n  };\n\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {Boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n\n  SegmentLoader.prototype.couldBeginLoading_ = function couldBeginLoading_() {\n    return this.playlist_ && (\n    // the source updater is created when init_ is called, so either having a\n    // source updater or being in the INIT state with a mimeType is enough\n    // to say we have all the needed configuration to start loading.\n    this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n  };\n\n  /**\n   * load a playlist and start to fill the buffer\n   */\n\n\n  SegmentLoader.prototype.load = function load() {\n    // un-pause\n    this.monitorBuffer_();\n\n    // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n    if (!this.playlist_) {\n      return;\n    }\n\n    // not sure if this is the best place for this\n    this.syncController_.setDateTimeMapping(this.playlist_);\n\n    // if all the configuration is ready, initialize and begin loading\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n\n    // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n\n    this.state = 'READY';\n  };\n\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.init_ = function init_() {\n    this.state = 'READY';\n    this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n    this.resetEverything();\n    return this.monitorBuffer_();\n  };\n\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n\n\n  SegmentLoader.prototype.playlist = function playlist(newPlaylist) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!newPlaylist) {\n      return;\n    }\n\n    var oldPlaylist = this.playlist_;\n    var segmentInfo = this.pendingSegment_;\n\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options;\n\n    // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    if (!this.hasPlayed_()) {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      };\n    }\n\n    var oldId = oldPlaylist ? oldPlaylist.id : null;\n\n    this.logger_('playlist update [' + oldId + ' => ' + newPlaylist.id + ']');\n\n    // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n    this.trigger('syncinfoupdate');\n\n    // if we were unpaused but waiting for a playlist, start\n    // buffering now\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must \"resync\" the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        this.resyncLoader();\n      }\n\n      // the rest of this function depends on `oldPlaylist` being defined\n      return;\n    }\n\n    // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n    var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n    this.logger_('live window shift [' + mediaSequenceDiff + ']');\n\n    // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff;\n    }\n\n    // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleUpdateEnd_` after the segment has been successfully appended\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n      // we need to update the referenced segment so that timing information is\n      // saved for the new playlist's segment, however, if the segment fell off the\n      // playlist, we can leave the old reference and just lose the timing info\n      if (segmentInfo.mediaIndex >= 0) {\n        segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n      }\n    }\n\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  };\n\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n\n\n  SegmentLoader.prototype.pause = function pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n\n      this.checkBufferTimeout_ = null;\n    }\n  };\n\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n\n\n  SegmentLoader.prototype.paused = function paused() {\n    return this.checkBufferTimeout_ === null;\n  };\n\n  /**\n   * create/set the following mimetype on the SourceBuffer through a\n   * SourceUpdater\n   *\n   * @param {String} mimeType the mime type string to use\n   * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n   * is added to the media source\n   */\n\n\n  SegmentLoader.prototype.mimeType = function mimeType(_mimeType, sourceBufferEmitter) {\n    if (this.mimeType_) {\n      return;\n    }\n\n    this.mimeType_ = _mimeType;\n    this.sourceBufferEmitter_ = sourceBufferEmitter;\n    // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n  };\n\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   */\n\n\n  SegmentLoader.prototype.resetEverything = function resetEverything() {\n    this.ended_ = false;\n    this.resetLoader();\n    this.remove(0, this.duration_());\n    this.trigger('reseteverything');\n  };\n\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n\n\n  SegmentLoader.prototype.resetLoader = function resetLoader() {\n    this.fetchAtBuffer_ = false;\n    this.resyncLoader();\n  };\n\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n\n\n  SegmentLoader.prototype.resyncLoader = function resyncLoader() {\n    this.mediaIndex = null;\n    this.syncPoint_ = null;\n    this.abort();\n  };\n\n  /**\n   * Remove any data in the source buffer between start and end times\n   * @param {Number} start - the start time of the region to remove from the buffer\n   * @param {Number} end - the end time of the region to remove from the buffer\n   */\n\n\n  SegmentLoader.prototype.remove = function remove(start, end) {\n    if (this.sourceUpdater_) {\n      this.sourceUpdater_.remove(start, end);\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n  };\n\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.monitorBuffer_ = function monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  };\n\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.monitorBufferTick_ = function monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  };\n\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.fillBuffer_ = function fillBuffer_() {\n    if (this.sourceUpdater_.updating()) {\n      return;\n    }\n\n    if (!this.syncPoint_) {\n      this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    }\n\n    // see if we need to begin loading immediately\n    var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n    if (!segmentInfo) {\n      return;\n    }\n\n    var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n    if (isEndOfStream) {\n      this.endOfStream();\n      return;\n    }\n\n    if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n      return;\n    }\n\n    // We will need to change timestampOffset of the sourceBuffer if either of\n    // the following conditions are true:\n    // - The segment.timeline !== this.currentTimeline\n    //   (we are crossing a discontinuity somehow)\n    // - The \"timestampOffset\" for the start of this segment is less than\n    //   the currently set timestampOffset\n    if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n      this.syncController_.reset();\n      segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n    }\n\n    this.loadSegment_(segmentInfo);\n  };\n\n  /**\n   * Determines what segment request should be made, given current playback\n   * state.\n   *\n   * @param {TimeRanges} buffered - the state of the buffer\n   * @param {Object} playlist - the playlist object to fetch segments from\n   * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n   * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n   * @param {Number} currentTime - the playback position in seconds\n   * @param {Object} syncPoint - a segment info object that describes the\n   * @returns {Object} a segment request object that describes the segment to load\n   */\n\n\n  SegmentLoader.prototype.checkBuffer_ = function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n    var lastBufferedEnd = 0;\n    var startOfSegment = void 0;\n\n    if (buffered.length) {\n      lastBufferedEnd = buffered.end(buffered.length - 1);\n    }\n\n    var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n    if (!playlist.segments.length) {\n      return null;\n    }\n\n    // if there is plenty of content buffered, and the video has\n    // been played before relax for awhile\n    if (bufferedTime >= this.goalBufferLength_()) {\n      return null;\n    }\n\n    // if the video has not yet played once, and we already have\n    // one segment downloaded do nothing\n    if (!hasPlayed && bufferedTime >= 1) {\n      return null;\n    }\n\n    // When the syncPoint is null, there is no way of determining a good\n    // conservative segment index to fetch from\n    // The best thing to do here is to get the kind of sync-point data by\n    // making a request\n    if (syncPoint === null) {\n      mediaIndex = this.getSyncSegmentCandidate_(playlist);\n      return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n    }\n\n    // Under normal playback conditions fetching is a simple walk forward\n    if (mediaIndex !== null) {\n      var segment = playlist.segments[mediaIndex];\n\n      if (segment && segment.end) {\n        startOfSegment = segment.end;\n      } else {\n        startOfSegment = lastBufferedEnd;\n      }\n      return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n    }\n\n    // There is a sync-point but the lack of a mediaIndex indicates that\n    // we need to make a good conservative guess about which segment to\n    // fetch\n    if (this.fetchAtBuffer_) {\n      // Find the segment containing the end of the buffer\n      var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n\n      mediaIndex = mediaSourceInfo.mediaIndex;\n      startOfSegment = mediaSourceInfo.startTime;\n    } else {\n      // Find the segment containing currentTime\n      var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n      mediaIndex = _mediaSourceInfo.mediaIndex;\n      startOfSegment = _mediaSourceInfo.startTime;\n    }\n\n    return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n  };\n\n  /**\n   * The segment loader has no recourse except to fetch a segment in the\n   * current playlist and use the internal timestamps in that segment to\n   * generate a syncPoint. This function returns a good candidate index\n   * for that process.\n   *\n   * @param {Object} playlist - the playlist object to look for a\n   * @returns {Number} An index of a segment from the playlist to load\n   */\n\n\n  SegmentLoader.prototype.getSyncSegmentCandidate_ = function getSyncSegmentCandidate_(playlist) {\n    var _this23 = this;\n\n    if (this.currentTimeline_ === -1) {\n      return 0;\n    }\n\n    var segmentIndexArray = playlist.segments.map(function (s, i) {\n      return {\n        timeline: s.timeline,\n        segmentIndex: i\n      };\n    }).filter(function (s) {\n      return s.timeline === _this23.currentTimeline_;\n    });\n\n    if (segmentIndexArray.length) {\n      return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n    }\n\n    return Math.max(playlist.segments.length - 1, 0);\n  };\n\n  SegmentLoader.prototype.generateSegmentInfo_ = function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n    if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n      return null;\n    }\n\n    var segment = playlist.segments[mediaIndex];\n\n    return {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex: mediaIndex,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest: isSyncRequest,\n      startOfSegment: startOfSegment,\n      // the segment's playlist\n      playlist: playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment: segment\n    };\n  };\n\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @return {Boolean} True if the request was aborted, false otherwise\n   * @private\n   */\n\n\n  SegmentLoader.prototype.abortRequestEarly_ = function abortRequestEarly_(stats) {\n    if (this.hls_.tech_.paused() ||\n    // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout ||\n    // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return false;\n    }\n\n    // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return false;\n    }\n\n    var currentTime = this.currentTime_();\n    var measuredBandwidth = stats.bandwidth;\n    var segmentDuration = this.pendingSegment_.duration;\n\n    var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived);\n\n    // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n    var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1;\n\n    // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n    if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n      return false;\n    }\n\n    var switchCandidate = minRebufferMaxBandwidthSelector({\n      master: this.hls_.playlists.master,\n      currentTime: currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration: segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n\n    if (!switchCandidate) {\n      return;\n    }\n\n    var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n\n    var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n\n    var minimumTimeSaving = 0.5;\n\n    // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n    if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return false;\n    }\n\n    // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.abort();\n    this.trigger('earlyabort');\n    return true;\n  };\n\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n\n\n  SegmentLoader.prototype.handleProgress_ = function handleProgress_(event, simpleSegment) {\n    if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n      return;\n    }\n\n    this.trigger('progress');\n  };\n\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.loadSegment_ = function loadSegment_(segmentInfo) {\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n\n    segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.createSimplifiedSegmentObj_(segmentInfo),\n    // progress callback\n    this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n  };\n\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n\n\n  SegmentLoader.prototype.trimBackBuffer_ = function trimBackBuffer_(segmentInfo) {\n    var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);\n\n    // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  };\n\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @returns {Object} a simplified segment object copy\n   */\n\n\n  SegmentLoader.prototype.createSimplifiedSegmentObj_ = function createSimplifiedSegmentObj_(segmentInfo) {\n    var segment = segmentInfo.segment;\n    var simpleSegment = {\n      resolvedUri: segment.resolvedUri,\n      byterange: segment.byterange,\n      requestId: segmentInfo.requestId\n    };\n\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n\n      simpleSegment.key = {\n        resolvedUri: segment.key.resolvedUri,\n        iv: iv\n      };\n    }\n\n    if (segment.map) {\n      simpleSegment.map = this.initSegment(segment.map);\n    }\n\n    return simpleSegment;\n  };\n\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n\n    if (simpleSegment.stats) {\n      this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n      this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n    }\n\n    // The request was aborted and the SegmentLoader has already been reset\n    if (!this.pendingSegment_) {\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n\n    // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n\n    // an error occurred from the active pendingSegment_ so reset everything\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n\n      // the requests were aborted just record the aborted stat and exit\n      // this is not a true error condition and nothing corrective needs\n      // to be done\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      this.pause();\n\n      // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.mediaRequestsTimedout += 1;\n        this.bandwidth = 1;\n        this.roundTrip = NaN;\n        this.trigger('bandwidthupdate');\n        return;\n      }\n\n      // if control-flow has arrived here, then the error is real\n      // emit an error event to blacklist the current playlist\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n\n    // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n    this.bandwidth = simpleSegment.stats.bandwidth;\n    this.roundTrip = simpleSegment.stats.roundTripTime;\n\n    // if this request included an initialization segment, save that data\n    // to the initSegment cache\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegment(simpleSegment.map, true);\n    }\n\n    this.processSegmentResponse_(simpleSegment);\n  };\n\n  /**\n   * Move any important data from the simplified segment object\n   * back to the real segment object for future phases\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.processSegmentResponse_ = function processSegmentResponse_(simpleSegment) {\n    var segmentInfo = this.pendingSegment_;\n\n    segmentInfo.bytes = simpleSegment.bytes;\n    if (simpleSegment.map) {\n      segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n    }\n\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n    this.handleSegment_();\n  };\n\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.handleSegment_ = function handleSegment_() {\n    var _this24 = this;\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_;\n    var segment = segmentInfo.segment;\n    var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo);\n\n    // When we have our first timing info, determine what media types this loader is\n    // dealing with. Although we're maintaining extra state, it helps to preserve the\n    // separation of segment loader from the actual source buffers.\n    if (typeof this.startingMedia_ === 'undefined' && timingInfo && (\n    // Guard against cases where we're not getting timing info at all until we are\n    // certain that all streams will provide it.\n    timingInfo.containsAudio || timingInfo.containsVideo)) {\n      this.startingMedia_ = {\n        containsAudio: timingInfo.containsAudio,\n        containsVideo: timingInfo.containsVideo\n      };\n    }\n\n    var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        blacklistDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    }\n\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n\n    if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n      this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset);\n      // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n      this.trigger('timestampoffset');\n    }\n\n    var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n    if (timelineMapping !== null) {\n      this.trigger({\n        type: 'segmenttimemapping',\n        mapping: timelineMapping\n      });\n    }\n\n    this.state = 'APPENDING';\n\n    // if the media initialization segment is changing, append it\n    // before the content segment\n    if (segment.map) {\n      var initId = initSegmentId(segment.map);\n\n      if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n        var initSegment = this.initSegment(segment.map);\n\n        this.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n          _this24.activeInitSegmentId_ = initId;\n        });\n      }\n    }\n\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n\n    this.logger_(segmentInfoString(segmentInfo));\n\n    this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n  };\n\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.handleUpdateEnd_ = function handleUpdateEnd_() {\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_;\n    var segment = segmentInfo.segment;\n    var isWalkingForward = this.mediaIndex !== null;\n\n    this.pendingSegment_ = null;\n    this.recordThroughput_(segmentInfo);\n    this.addSegmentMetadataCue_(segmentInfo);\n\n    this.state = 'READY';\n\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.fetchAtBuffer_ = true;\n    this.currentTimeline_ = segmentInfo.timeline;\n\n    // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n    this.trigger('syncinfoupdate');\n\n    // If we previously appended a segment that ends more than 3 targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n    if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n      this.resetEverything();\n      return;\n    }\n\n    // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n    this.trigger('progress');\n\n    // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n    var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, segmentInfo.mediaIndex + 1);\n\n    if (isEndOfStream) {\n      this.endOfStream();\n    }\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  };\n\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n\n\n  SegmentLoader.prototype.recordThroughput_ = function recordThroughput_(segmentInfo) {\n    var rate = this.throughput.rate;\n    // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n    var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1;\n    // Multiply by 8000 to convert from bytes/millisecond to bits/second\n    var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000);\n\n    // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  };\n\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n\n\n  SegmentLoader.prototype.addSegmentMetadataCue_ = function addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n\n    var segment = segmentInfo.segment;\n    var start = segment.start;\n    var end = segment.end;\n\n    // Do not try adding the cue if the start and end times are invalid.\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n    var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    var value = {\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.uri,\n      start: start,\n      end: end\n    };\n    var data = JSON.stringify(value);\n    var cue = new Cue(start, end, data);\n\n    // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n    cue.value = value;\n\n    this.segmentMetadataTrack_.addCue(cue);\n  };\n\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\n/**\n * @file vtt-segment-loader.js\n */\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n\nvar uintToString = function uintToString(uintArray) {\n  return String.fromCharCode.apply(null, uintArray);\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader);\n\n    // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n    var _this25 = possibleConstructorReturn(this, _SegmentLoader.call(this, settings, options));\n\n    _this25.mediaSource_ = null;\n\n    _this25.subtitlesTrack_ = null;\n    return _this25;\n  }\n\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  VTTSegmentLoader.prototype.buffered_ = function buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n      return videojs$1.createTimeRanges();\n    }\n\n    var cues = this.subtitlesTrack_.cues;\n    var start = cues[0].startTime;\n    var end = cues[cues.length - 1].startTime;\n\n    return videojs$1.createTimeRanges([[start, end]]);\n  };\n\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {Boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n\n  VTTSegmentLoader.prototype.initSegment = function initSegment(map) {\n    var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!map) {\n      return null;\n    }\n\n    var id = initSegmentId(map);\n    var storedMap = this.initSegments_[id];\n\n    if (set$$1 && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      var combinedSegment = new Uint8Array(combinedByteLength);\n\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n\n    return storedMap || map;\n  };\n\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {Boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.couldBeginLoading_ = function couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  };\n\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.init_ = function init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  };\n\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n\n\n  VTTSegmentLoader.prototype.track = function track(_track) {\n    if (typeof _track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n\n    this.subtitlesTrack_ = _track;\n\n    // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n\n    return this.subtitlesTrack_;\n  };\n\n  /**\n   * Remove any data in the source buffer between start and end times\n   * @param {Number} start - the start time of the region to remove from the buffer\n   * @param {Number} end - the end time of the region to remove from the buffer\n   */\n\n\n  VTTSegmentLoader.prototype.remove = function remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  };\n\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.fillBuffer_ = function fillBuffer_() {\n    var _this26 = this;\n\n    if (!this.syncPoint_) {\n      this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    }\n\n    // see if we need to begin loading immediately\n    var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n    segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n    if (!segmentInfo) {\n      return;\n    }\n\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      var checkTimestampOffset = function checkTimestampOffset() {\n        _this26.state = 'READY';\n        if (!_this26.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          _this26.monitorBuffer_();\n        }\n      };\n\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n\n    this.loadSegment_(segmentInfo);\n  };\n\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n\n\n  VTTSegmentLoader.prototype.skipEmptySegments_ = function skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n    }\n    return segmentInfo;\n  };\n\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.handleSegment_ = function handleSegment_() {\n    var _this27 = this;\n\n    if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n\n    this.state = 'APPENDING';\n\n    var segmentInfo = this.pendingSegment_;\n    var segment = segmentInfo.segment;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n\n      var loadHandler = function loadHandler() {\n        _this27.handleSegment_();\n      };\n\n      this.state = 'WAITING_ON_VTTJS';\n      this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n      this.subtitlesTrack_.tech_.one('vttjserror', function () {\n        _this27.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n        _this27.error({\n          message: 'Error loading vtt.js'\n        });\n        _this27.state = 'READY';\n        _this27.pause();\n        _this27.trigger('error');\n      });\n\n      return;\n    }\n\n    segment.requested = true;\n\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.error({\n        message: e.message\n      });\n      this.state = 'READY';\n      this.pause();\n      return this.trigger('error');\n    }\n\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n    this.mediaSecondsLoaded += segment.duration;\n\n    if (segmentInfo.cues.length) {\n      // remove any overlapping cues to prevent doubling\n      this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n    }\n\n    segmentInfo.cues.forEach(function (cue) {\n      _this27.subtitlesTrack_.addCue(cue);\n    });\n\n    this.handleUpdateEnd_();\n  };\n\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.parseVTTCues_ = function parseVTTCues_(segmentInfo) {\n    var decoder = void 0;\n    var decodeBytesToString = false;\n\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n\n    var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = { MPEGTS: 0, LOCAL: 0 };\n\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n    parser.ontimestampmap = function (map) {\n      return segmentInfo.timestampmap = map;\n    };\n    parser.onparsingerror = function (error) {\n      videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n\n    if (segmentInfo.segment.map) {\n      var mapData = segmentInfo.segment.map.bytes;\n\n      if (decodeBytesToString) {\n        mapData = uintToString(mapData);\n      }\n\n      parser.parse(mapData);\n    }\n\n    var segmentData = segmentInfo.bytes;\n\n    if (decodeBytesToString) {\n      segmentData = uintToString(segmentData);\n    }\n\n    parser.parse(segmentData);\n    parser.flush();\n  };\n\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.updateTimeMapping_ = function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    var segment = segmentInfo.segment;\n\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n\n    var timestampmap = segmentInfo.timestampmap;\n    var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n\n    segmentInfo.cues.forEach(function (cue) {\n      // First convert cue time to TS time using the timestamp-map provided within the vtt\n      cue.startTime += diff;\n      cue.endTime += diff;\n    });\n\n    if (!playlist.syncInfo) {\n      var firstStart = segmentInfo.cues[0].startTime;\n      var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  };\n\n  return VTTSegmentLoader;\n}(SegmentLoader);\n\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      }\n\n      // otherwise extend cue until a CUE-IN is found\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime;\n        // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0;\n\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        adOffset = _segment$cueOutCont$s[0];\n        adTotal = _segment$cueOutCont$s[1];\n\n\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n\nvar tsprobe = tsInspector.inspect;\n\nvar syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time);\n\n          // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget4) {\n  inherits(SyncController, _videojs$EventTarget4);\n\n  function SyncController() {\n    classCallCheck(this, SyncController);\n\n    // Segment Loader state variables...\n    // ...for synching across variants\n    var _this28 = possibleConstructorReturn(this, _videojs$EventTarget4.call(this));\n\n    _this28.inspectCache_ = undefined;\n\n    // ...for synching across variants\n    _this28.timelines = [];\n    _this28.discontinuities = [];\n    _this28.datetimeToDisplayTime = null;\n\n    _this28.logger_ = logger('SyncController');\n    return _this28;\n  }\n\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  SyncController.prototype.getSyncPoint = function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    }\n\n    // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n    return this.selectSyncPoint_(syncPoints, { key: 'time', value: currentTime });\n  };\n\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @returns {Number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n\n\n  SyncController.prototype.getExpiredTime = function getExpiredTime(playlist, duration$$1) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n\n    var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0);\n\n    // Without sync-points, there is not enough information to determine the expired time\n    if (!syncPoints.length) {\n      return null;\n    }\n\n    var syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    });\n\n    // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n\n    return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n  };\n\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Array}\n   *          A list of sync-point objects\n   */\n\n\n  SyncController.prototype.runStrategies_ = function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoints = [];\n\n    // Try to find a sync-point in by utilizing various strategies...\n    for (var i = 0; i < syncPointStrategies.length; i++) {\n      var strategy = syncPointStrategies[i];\n      var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint: syncPoint\n        });\n      }\n    }\n\n    return syncPoints;\n  };\n\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {String} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {Number} target.value\n   *        The value to target for the specified key.\n   * @returns {Object}\n   *          The sync-point nearest the target\n   */\n\n\n  SyncController.prototype.selectSyncPoint_ = function selectSyncPoint_(syncPoints, target) {\n    var bestSyncPoint = syncPoints[0].syncPoint;\n    var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    var bestStrategy = syncPoints[0].strategy;\n\n    for (var i = 1; i < syncPoints.length; i++) {\n      var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n\n    this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n\n    return bestSyncPoint;\n  };\n\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n\n\n  SyncController.prototype.saveExpiredSegmentInfo = function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n    // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n    for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n      var lastRemovedSegment = oldPlaylist.segments[i];\n\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  };\n\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should\n   * only ever happen once at the start of playback.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n\n\n  SyncController.prototype.setDateTimeMapping = function setDateTimeMapping(playlist) {\n    if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n\n      this.datetimeToDisplayTime = -playlistTimestamp;\n    }\n  };\n\n  /**\n   * Reset the state of the inspection cache when we do a rendition\n   * switch\n   */\n\n\n  SyncController.prototype.reset = function reset() {\n    this.inspectCache_ = undefined;\n  };\n\n  /**\n   * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n   * and end of the segment in it's internal \"media time\". Used to generate\n   * mappings from that internal \"media time\" to the display time that is\n   * shown on the player.\n   *\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n\n  SyncController.prototype.probeSegmentInfo = function probeSegmentInfo(segmentInfo) {\n    var segment = segmentInfo.segment;\n    var playlist = segmentInfo.playlist;\n    var timingInfo = void 0;\n\n    if (segment.map) {\n      timingInfo = this.probeMp4Segment_(segmentInfo);\n    } else {\n      timingInfo = this.probeTsSegment_(segmentInfo);\n    }\n\n    if (timingInfo) {\n      if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n        this.saveDiscontinuitySyncInfo_(segmentInfo);\n\n        // If the playlist does not have sync information yet, record that information\n        // now with segment timing information\n        if (!playlist.syncInfo) {\n          playlist.syncInfo = {\n            mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n            time: segment.start\n          };\n        }\n      }\n    }\n\n    return timingInfo;\n  };\n\n  /**\n   * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n   * in it's internal \"media time\".\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   * @return {object} The start and end time of the current segment in \"media time\"\n   */\n\n\n  SyncController.prototype.probeMp4Segment_ = function probeMp4Segment_(segmentInfo) {\n    var segment = segmentInfo.segment;\n    var timescales = mp4probe.timescale(segment.map.bytes);\n    var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n    if (segmentInfo.timestampOffset !== null) {\n      segmentInfo.timestampOffset -= startTime;\n    }\n\n    return {\n      start: startTime,\n      end: startTime + segment.duration\n    };\n  };\n\n  /**\n   * Probe an mpeg2-ts segment to determine the start and end of the segment\n   * in it's internal \"media time\".\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   * @return {object} The start and end time of the current segment in \"media time\"\n   */\n\n\n  SyncController.prototype.probeTsSegment_ = function probeTsSegment_(segmentInfo) {\n    var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n    var segmentStartTime = void 0;\n    var segmentEndTime = void 0;\n\n    if (!timeInfo) {\n      return null;\n    }\n\n    if (timeInfo.video && timeInfo.video.length === 2) {\n      this.inspectCache_ = timeInfo.video[1].dts;\n      segmentStartTime = timeInfo.video[0].dtsTime;\n      segmentEndTime = timeInfo.video[1].dtsTime;\n    } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n      this.inspectCache_ = timeInfo.audio[1].dts;\n      segmentStartTime = timeInfo.audio[0].dtsTime;\n      segmentEndTime = timeInfo.audio[1].dtsTime;\n    }\n\n    return {\n      start: segmentStartTime,\n      end: segmentEndTime,\n      containsVideo: timeInfo.video && timeInfo.video.length === 2,\n      containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n    };\n  };\n\n  SyncController.prototype.timestampOffsetForTimeline = function timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].time;\n  };\n\n  SyncController.prototype.mappingForTimeline = function mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].mapping;\n  };\n\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @returns {Boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n\n\n  SyncController.prototype.calculateSegmentTimeMapping_ = function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n    var segment = segmentInfo.segment;\n    var mappingObj = this.timelines[segmentInfo.timeline];\n\n    if (segmentInfo.timestampOffset !== null) {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n      this.timelines[segmentInfo.timeline] = mappingObj;\n      this.trigger('timestampoffset');\n\n      this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n\n      segment.start = segmentInfo.startOfSegment;\n      segment.end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      segment.start = timingInfo.start + mappingObj.mapping;\n      segment.end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n\n  SyncController.prototype.saveDiscontinuitySyncInfo_ = function saveDiscontinuitySyncInfo_(segmentInfo) {\n    var playlist = segmentInfo.playlist;\n    var segment = segmentInfo.segment;\n\n    // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        var accuracy = Math.abs(mediaIndexDiff);\n\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          var time = void 0;\n\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n          } else {\n            time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n          }\n\n          this.discontinuities[discontinuity] = {\n            time: time,\n            accuracy: accuracy\n          };\n        }\n      }\n    }\n  };\n\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var decrypterWorker = function () {\n\n    var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits$$1 = function inherits$$1(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn$$1 = function possibleConstructorReturn$$1(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0;\n\n      // Compute double and third tables\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x;\n\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      }\n\n      // Compactify. Considerable speedup on Firefox.\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n      return tables;\n    };\n    var aesTables = null;\n\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck$$1(this, AES);\n\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        }\n        // then make a copy of that object for use\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey];\n\n        // schedule encryption keys\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1];\n\n          // apply sbox\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n            // shift rows and add rcon\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        }\n\n        // schedule decryption keys\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1];\n        // state variables a,b,c,d are loaded with pre-whitened data\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0;\n\n        // key.length === 2 ?\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1];\n\n        // load up the tables\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4];\n\n        // Inner rounds. Cribbed from OpenSSL.\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;b = b2;c = c2;\n        }\n\n        // Last round.\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;a = b;b = c;c = d;d = a2;\n        }\n      };\n\n      return AES;\n    }();\n\n    /**\n     * @file stream.js\n     */\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n    var Stream = function () {\n      function Stream() {\n        classCallCheck$$1(this, Stream);\n\n        this.listeners = {};\n      }\n\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n        this.listeners[type].push(listener);\n      };\n\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        }\n\n        // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n\n    /**\n     * @file async-stream.js\n     */\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits$$1(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck$$1(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn$$1(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n      var decipher = new AES(Array.prototype.slice.call(key));\n\n      // byte and word-level access for the decrypted output\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer);\n\n      // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0;\n\n      // iteration variable\n      var wordIx = void 0;\n\n      // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3];\n\n      // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n        // decrypt the block\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n        // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n        // setup the IV for the next round\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck$$1(this, Decrypter$$1);\n\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n\n        this.asyncStream_ = new AsyncStream$$1();\n\n        // split up the encryption job and do the individual chunks asynchronously\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        }\n        // invoke the done() callback when everything is finished\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass$$1(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n\n      return transferable;\n    };\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n\n        /* eslint-disable no-new, handle-callback-err */\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          window_1.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n\n    return decrypterWorker;\n  }();\n});\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n      return;\n    }\n\n    // Non-destructive resync\n    segmentLoader.resyncLoader();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    }\n\n    // destructive reset\n    segmentLoader.resetEverything();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n\n\n      stopLoaders(segmentLoader, mediaType);\n\n      // switch back to default audio track\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n\n\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n\n      stopLoaders(segmentLoader, mediaType);\n\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\n\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack());\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = { main: { default: { default: true } } };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({ id: variantLabel, playlistLoader: playlistLoader }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        }\n\n        // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n        groups[groupId].push(videojs$1.mergeOptions({ id: variantLabel }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n\n\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls;\n\n  // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  });\n\n  // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  });\n\n  // custom audio track change event handler for usage event\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({ type: 'usage', name: 'hls-audio-change' });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  });\n\n  // clear existing audio tracks and add the ones we just created\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n\n  return mediaTypes;\n};\n\n/**\n * @file master-playlist-controller.js\n */\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n\nvar Hls = void 0;\n\n// SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\nvar MasterPlaylistController = function (_videojs$EventTarget5) {\n  inherits(MasterPlaylistController, _videojs$EventTarget5);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this29 = possibleConstructorReturn(this, _videojs$EventTarget5.call(this));\n\n    var url = options.url,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType;\n\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n\n    _this29.withCredentials = withCredentials;\n    _this29.tech_ = tech;\n    _this29.hls_ = tech.hls;\n    _this29.sourceType_ = sourceType;\n    _this29.useCueTags_ = useCueTags;\n    _this29.blacklistDuration = blacklistDuration;\n    _this29.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (_this29.useCueTags_) {\n      _this29.cueTagsTrack_ = _this29.tech_.addTextTrack('metadata', 'ad-cues');\n      _this29.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this29.requestOptions_ = {\n      withCredentials: _this29.withCredentials,\n      timeout: null\n    };\n\n    _this29.mediaTypes_ = createMediaTypes();\n\n    _this29.mediaSource = new videojs$1.MediaSource();\n\n    // load the media source into the player\n    _this29.mediaSource.addEventListener('sourceopen', _this29.handleSourceOpen_.bind(_this29));\n\n    _this29.seekable_ = videojs$1.createTimeRanges();\n    _this29.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this29.syncController_ = new SyncController(options);\n    _this29.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n\n    _this29.decrypter_ = new Decrypter$1();\n\n    var segmentLoaderSettings = {\n      hls: _this29.hls_,\n      mediaSource: _this29.mediaSource,\n      currentTime: _this29.tech_.currentTime.bind(_this29.tech_),\n      seekable: function seekable() {\n        return _this29.seekable();\n      },\n      seeking: function seeking() {\n        return _this29.tech_.seeking();\n      },\n      duration: function duration() {\n        return _this29.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this29.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this29.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this29.syncController_,\n      decrypter: _this29.decrypter_,\n      sourceType: _this29.sourceType_\n    };\n\n    _this29.masterPlaylistLoader_ = _this29.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this29.hls_, _this29.withCredentials) : new PlaylistLoader(url, _this29.hls_, _this29.withCredentials);\n    _this29.setupMasterPlaylistLoaderListeners_();\n\n    // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n    _this29.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this29.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options);\n\n    // alternate audio track\n    _this29.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n\n    _this29.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this29.setupSegmentLoaderListeners_();\n\n    // Create SegmentLoader stat-getters\n    loaderStats.forEach(function (stat) {\n      _this29[stat + '_'] = sumLoaderStat.bind(_this29, stat);\n    });\n\n    _this29.logger_ = logger('MPC');\n\n    _this29.masterPlaylistLoader_.load();\n    return _this29;\n  }\n\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.setupMasterPlaylistLoaderListeners_ = function setupMasterPlaylistLoaderListeners_() {\n    var _this30 = this;\n\n    this.masterPlaylistLoader_.on('loadedmetadata', function () {\n      var media = _this30.masterPlaylistLoader_.media();\n      var requestTimeout = _this30.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n      // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n      if (isLowestEnabledRendition(_this30.masterPlaylistLoader_.master, _this30.masterPlaylistLoader_.media())) {\n        _this30.requestOptions_.timeout = 0;\n      } else {\n        _this30.requestOptions_.timeout = requestTimeout;\n      }\n\n      // if this isn't a live video and preload permits, start\n      // downloading segments\n      if (media.endList && _this30.tech_.preload() !== 'none') {\n        _this30.mainSegmentLoader_.playlist(media, _this30.requestOptions_);\n        _this30.mainSegmentLoader_.load();\n      }\n\n      setupMediaGroups({\n        sourceType: _this30.sourceType_,\n        segmentLoaders: {\n          AUDIO: _this30.audioSegmentLoader_,\n          SUBTITLES: _this30.subtitleSegmentLoader_,\n          main: _this30.mainSegmentLoader_\n        },\n        tech: _this30.tech_,\n        requestOptions: _this30.requestOptions_,\n        masterPlaylistLoader: _this30.masterPlaylistLoader_,\n        hls: _this30.hls_,\n        master: _this30.master(),\n        mediaTypes: _this30.mediaTypes_,\n        blacklistCurrentPlaylist: _this30.blacklistCurrentPlaylist.bind(_this30)\n      });\n\n      _this30.triggerPresenceUsage_(_this30.master(), media);\n\n      try {\n        _this30.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create SourceBuffers', e);\n        return _this30.mediaSource.endOfStream('decode');\n      }\n      _this30.setupFirstPlay();\n\n      _this30.trigger('selectedinitialmedia');\n    });\n\n    this.masterPlaylistLoader_.on('loadedplaylist', function () {\n      var updatedPlaylist = _this30.masterPlaylistLoader_.media();\n\n      if (!updatedPlaylist) {\n        // blacklist any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n        _this30.excludeUnsupportedVariants_();\n\n        var selectedMedia = void 0;\n\n        if (_this30.enableLowInitialPlaylist) {\n          selectedMedia = _this30.selectInitialPlaylist();\n        }\n\n        if (!selectedMedia) {\n          selectedMedia = _this30.selectPlaylist();\n        }\n\n        _this30.initialMedia_ = selectedMedia;\n        _this30.masterPlaylistLoader_.media(_this30.initialMedia_);\n        return;\n      }\n\n      if (_this30.useCueTags_) {\n        _this30.updateAdCues_(updatedPlaylist);\n      }\n\n      // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `mediachange`\n      _this30.mainSegmentLoader_.playlist(updatedPlaylist, _this30.requestOptions_);\n      _this30.updateDuration();\n\n      // If the player isn't paused, ensure that the segment loader is running,\n      // as it is possible that it was temporarily stopped while waiting for\n      // a playlist (e.g., in case the playlist errored and we re-requested it).\n      if (!_this30.tech_.paused()) {\n        _this30.mainSegmentLoader_.load();\n      }\n\n      if (!updatedPlaylist.endList) {\n        var addSeekableRange = function addSeekableRange() {\n          var seekable$$1 = _this30.seekable();\n\n          if (seekable$$1.length !== 0) {\n            _this30.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n          }\n        };\n\n        if (_this30.duration() !== Infinity) {\n          var onDurationchange = function onDurationchange() {\n            if (_this30.duration() === Infinity) {\n              addSeekableRange();\n            } else {\n              _this30.tech_.one('durationchange', onDurationchange);\n            }\n          };\n\n          _this30.tech_.one('durationchange', onDurationchange);\n        } else {\n          addSeekableRange();\n        }\n      }\n    });\n\n    this.masterPlaylistLoader_.on('error', function () {\n      _this30.blacklistCurrentPlaylist(_this30.masterPlaylistLoader_.error);\n    });\n\n    this.masterPlaylistLoader_.on('mediachanging', function () {\n      _this30.mainSegmentLoader_.abort();\n      _this30.mainSegmentLoader_.pause();\n    });\n\n    this.masterPlaylistLoader_.on('mediachange', function () {\n      var media = _this30.masterPlaylistLoader_.media();\n      var requestTimeout = _this30.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n      // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n      if (isLowestEnabledRendition(_this30.masterPlaylistLoader_.master, _this30.masterPlaylistLoader_.media())) {\n        _this30.requestOptions_.timeout = 0;\n      } else {\n        _this30.requestOptions_.timeout = requestTimeout;\n      }\n\n      // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n      _this30.mainSegmentLoader_.playlist(media, _this30.requestOptions_);\n      _this30.mainSegmentLoader_.load();\n\n      _this30.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n\n    this.masterPlaylistLoader_.on('playlistunchanged', function () {\n      var updatedPlaylist = _this30.masterPlaylistLoader_.media();\n      var playlistOutdated = _this30.stuckAtPlaylistEnd_(updatedPlaylist);\n\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // blacklist it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        _this30.blacklistCurrentPlaylist({\n          message: 'Playlist no longer updating.'\n        });\n        // useful for monitoring QoS\n        _this30.tech_.trigger('playliststuck');\n      }\n    });\n\n    this.masterPlaylistLoader_.on('renditiondisabled', function () {\n      _this30.tech_.trigger({ type: 'usage', name: 'hls-rendition-disabled' });\n    });\n    this.masterPlaylistLoader_.on('renditionenabled', function () {\n      _this30.tech_.trigger({ type: 'usage', name: 'hls-rendition-enabled' });\n    });\n  };\n\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.triggerPresenceUsage_ = function triggerPresenceUsage_(master, media) {\n    var mediaGroups = master.mediaGroups || {};\n    var defaultDemuxed = true;\n    var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n    for (var mediaGroup in mediaGroups.AUDIO) {\n      for (var label in mediaGroups.AUDIO[mediaGroup]) {\n        var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n\n    if (defaultDemuxed) {\n      this.tech_.trigger({ type: 'usage', name: 'hls-demuxed' });\n    }\n\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({ type: 'usage', name: 'hls-webvtt' });\n    }\n\n    if (Hls.Playlist.isAes(media)) {\n      this.tech_.trigger({ type: 'usage', name: 'hls-aes' });\n    }\n\n    if (Hls.Playlist.isFmp4(media)) {\n      this.tech_.trigger({ type: 'usage', name: 'hls-fmp4' });\n    }\n\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({ type: 'usage', name: 'hls-alternate-audio' });\n    }\n\n    if (this.useCueTags_) {\n      this.tech_.trigger({ type: 'usage', name: 'hls-playlist-cue-tags' });\n    }\n  };\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.setupSegmentLoaderListeners_ = function setupSegmentLoaderListeners_() {\n    var _this31 = this;\n\n    this.mainSegmentLoader_.on('bandwidthupdate', function () {\n      var nextPlaylist = _this31.selectPlaylist();\n      var currentPlaylist = _this31.masterPlaylistLoader_.media();\n      var buffered = _this31.tech_.buffered();\n      var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this31.tech_.currentTime() : 0;\n\n      var bufferLowWaterLine = _this31.bufferLowWaterLine();\n\n      // If the playlist is live, then we want to not take low water line into account.\n      // This is because in LIVE, the player plays 3 segments from the end of the\n      // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n      // in those segments, a viewer will never experience a rendition upswitch.\n      if (!currentPlaylist.endList ||\n      // For the same reason as LIVE, we ignore the low water line when the VOD\n      // duration is below the max potential low water line\n      _this31.duration() < Config.MAX_BUFFER_LOW_WATER_LINE ||\n      // we want to switch down to lower resolutions quickly to continue playback, but\n      nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH ||\n      // ensure we have some buffer before we switch up to prevent us running out of\n      // buffer while loading a higher rendition.\n      forwardBuffer >= bufferLowWaterLine) {\n        _this31.masterPlaylistLoader_.media(nextPlaylist);\n      }\n\n      _this31.tech_.trigger('bandwidthupdate');\n    });\n    this.mainSegmentLoader_.on('progress', function () {\n      _this31.trigger('progress');\n    });\n\n    this.mainSegmentLoader_.on('error', function () {\n      _this31.blacklistCurrentPlaylist(_this31.mainSegmentLoader_.error());\n    });\n\n    this.mainSegmentLoader_.on('syncinfoupdate', function () {\n      _this31.onSyncInfoUpdate_();\n    });\n\n    this.mainSegmentLoader_.on('timestampoffset', function () {\n      _this31.tech_.trigger({ type: 'usage', name: 'hls-timestamp-offset' });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', function () {\n      _this31.onSyncInfoUpdate_();\n    });\n\n    this.mainSegmentLoader_.on('ended', function () {\n      _this31.onEndOfStream();\n    });\n\n    this.mainSegmentLoader_.on('earlyabort', function () {\n      _this31.blacklistCurrentPlaylist({\n        message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n      }, ABORT_EARLY_BLACKLIST_SECONDS);\n    });\n\n    this.mainSegmentLoader_.on('reseteverything', function () {\n      // If playing an MTS stream, a videojs.MediaSource is listening for\n      // hls-reset to reset caption parsing state in the transmuxer\n      _this31.tech_.trigger('hls-reset');\n    });\n\n    this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n      // If playing an MTS stream in html, a videojs.MediaSource is listening for\n      // hls-segment-time-mapping update its internal mapping of stream to display time\n      _this31.tech_.trigger({\n        type: 'hls-segment-time-mapping',\n        mapping: event.mapping\n      });\n    });\n\n    this.audioSegmentLoader_.on('ended', function () {\n      _this31.onEndOfStream();\n    });\n  };\n\n  MasterPlaylistController.prototype.mediaSecondsLoaded_ = function mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  };\n\n  /**\n   * Call load on our SegmentLoaders\n   */\n\n\n  MasterPlaylistController.prototype.load = function load() {\n    this.mainSegmentLoader_.load();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  };\n\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method may perform destructive actions, like\n   * removing already buffered content, to readjust the currently\n   * active playlist quickly.\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.fastQualityChange_ = function fastQualityChange_() {\n    var media = this.selectPlaylist();\n\n    if (media !== this.masterPlaylistLoader_.media()) {\n      this.masterPlaylistLoader_.media(media);\n\n      this.mainSegmentLoader_.resetLoader();\n      // don't need to reset audio as it is reset when media changes\n    }\n  };\n\n  /**\n   * Begin playback.\n   */\n\n\n  MasterPlaylistController.prototype.play = function play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n\n    if (this.hasPlayed_()) {\n      this.load();\n    }\n\n    var seekable$$1 = this.tech_.seekable();\n\n    // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable$$1.start(0)) {\n        return this.tech_.setCurrentTime(seekable$$1.end(seekable$$1.length - 1));\n      }\n    }\n  };\n\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n\n\n  MasterPlaylistController.prototype.setupFirstPlay = function setupFirstPlay() {\n    var _this32 = this;\n\n    var media = this.masterPlaylistLoader_.media();\n\n    // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n    if (!media || this.tech_.paused() || this.hasPlayed_()) {\n      return false;\n    }\n\n    // when the video is a live stream\n    if (!media.endList) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the live\n        // point\n        return false;\n      }\n\n      if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n        // IE11 throws an InvalidStateError if you try to set currentTime while the\n        // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n        this.tech_.one('loadedmetadata', function () {\n          _this32.trigger('firstplay');\n          _this32.tech_.setCurrentTime(seekable$$1.end(0));\n          _this32.hasPlayed_ = function () {\n            return true;\n          };\n        });\n\n        return false;\n      }\n\n      // trigger firstplay to inform the source handler to ignore the next seek event\n      this.trigger('firstplay');\n      // seek to the live point\n      this.tech_.setCurrentTime(seekable$$1.end(0));\n    }\n\n    this.hasPlayed_ = function () {\n      return true;\n    };\n    // we can begin loading now that everything is ready\n    this.load();\n    return true;\n  };\n\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.handleSourceOpen_ = function handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    try {\n      this.setupSourceBuffers_();\n    } catch (e) {\n      videojs$1.log.warn('Failed to create Source Buffers', e);\n      return this.mediaSource.endOfStream('decode');\n    }\n\n    // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n    if (this.tech_.autoplay()) {\n      var playPromise = this.tech_.play();\n\n      // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, function (e) {});\n      }\n    }\n\n    this.trigger('sourceopen');\n  };\n\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.onEndOfStream = function onEndOfStream() {\n    var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      // if the audio playlist loader exists, then alternate audio is active\n      if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n\n    if (isEndOfStream) {\n      this.mediaSource.endOfStream();\n    }\n  };\n\n  /**\n   * Check if a playlist has stopped being updated\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n\n\n  MasterPlaylistController.prototype.stuckAtPlaylistEnd_ = function stuckAtPlaylistEnd_(playlist) {\n    var seekable$$1 = this.seekable();\n\n    if (!seekable$$1.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n\n    var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n    if (expired === null) {\n      return false;\n    }\n\n    // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n    var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n    var bufferedEnd = buffered.end(buffered.length - 1);\n\n    // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  };\n\n  /**\n   * Blacklists a playlist when an error occurs for a set amount of time\n   * making it unavailable for selection by the rendition selection algorithm\n   * and then forces a new playlist (rendition) selection.\n   *\n   * @param {Object=} error an optional error that may include the playlist\n   * to blacklist\n   * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n   * playlist\n   */\n\n\n  MasterPlaylistController.prototype.blacklistCurrentPlaylist = function blacklistCurrentPlaylist() {\n    var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var blacklistDuration = arguments[1];\n\n    var currentPlaylist = void 0;\n    var nextPlaylist = void 0;\n\n    // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // blacklisted instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n    currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n\n    blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration;\n\n    // If there is no current playlist, then an error occurred while we were\n    // trying to load the master OR while we were disposing of the tech\n    if (!currentPlaylist) {\n      this.error = error;\n\n      try {\n        return this.mediaSource.endOfStream('network');\n      } catch (e) {\n        return this.trigger('error');\n      }\n    }\n\n    var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n    if (isFinalRendition) {\n      // Never blacklisting this playlist because it's final rendition\n      videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n\n      this.tech_.trigger('retryplaylist');\n      return this.masterPlaylistLoader_.load(isFinalRendition);\n    }\n    // Blacklist this playlist\n    currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n    this.tech_.trigger('blacklistplaylist');\n    this.tech_.trigger({ type: 'usage', name: 'hls-rendition-blacklisted' });\n\n    // Select a new playlist\n    nextPlaylist = this.selectPlaylist();\n    videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n\n    return this.masterPlaylistLoader_.media(nextPlaylist);\n  };\n\n  /**\n   * Pause all segment loaders\n   */\n\n\n  MasterPlaylistController.prototype.pauseLoading = function pauseLoading() {\n    this.mainSegmentLoader_.pause();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.pause();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.pause();\n    }\n  };\n\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n\n\n  MasterPlaylistController.prototype.setCurrentTime = function setCurrentTime(currentTime) {\n    var buffered = findRange(this.tech_.buffered(), currentTime);\n\n    if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    }\n\n    // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n    if (!this.masterPlaylistLoader_.media().segments) {\n      return 0;\n    }\n\n    // In flash playback, the segment loaders should be reset on every seek, even\n    // in buffer seeks. If the seek location is already buffered, continue buffering as\n    // usual\n    // TODO: redo this comment\n    if (buffered && buffered.length) {\n      return currentTime;\n    }\n\n    // cancel outstanding requests so we begin buffering at the new\n    // location\n    this.mainSegmentLoader_.resetEverything();\n    this.mainSegmentLoader_.abort();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.resetEverything();\n      this.audioSegmentLoader_.abort();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.resetEverything();\n      this.subtitleSegmentLoader_.abort();\n    }\n\n    // start segment loader loading in case they are paused\n    this.load();\n  };\n\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n\n\n  MasterPlaylistController.prototype.duration = function duration() {\n    if (!this.masterPlaylistLoader_) {\n      return 0;\n    }\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n\n    return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n  };\n\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n\n\n  MasterPlaylistController.prototype.seekable = function seekable() {\n    return this.seekable_;\n  };\n\n  MasterPlaylistController.prototype.onSyncInfoUpdate_ = function onSyncInfoUpdate_() {\n    var mainSeekable = void 0;\n    var audioSeekable = void 0;\n\n    if (!this.masterPlaylistLoader_) {\n      return;\n    }\n\n    var media = this.masterPlaylistLoader_.media();\n\n    if (!media) {\n      return;\n    }\n\n    var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n\n    mainSeekable = Hls.Playlist.seekable(media, expired);\n\n    if (mainSeekable.length === 0) {\n      return;\n    }\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        return;\n      }\n\n      audioSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    }\n\n    this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n\n    this.tech_.trigger('seekablechanged');\n  };\n\n  /**\n   * Update the player duration\n   */\n\n\n  MasterPlaylistController.prototype.updateDuration = function updateDuration() {\n    var _this33 = this;\n\n    var oldDuration = this.mediaSource.duration;\n    var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    var buffered = this.tech_.buffered();\n    var setDuration = function setDuration() {\n      _this33.mediaSource.duration = newDuration;\n      _this33.tech_.trigger('durationchange');\n\n      _this33.mediaSource.removeEventListener('sourceopen', setDuration);\n    };\n\n    if (buffered.length > 0) {\n      newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n    }\n\n    // if the duration has changed, invalidate the cached value\n    if (oldDuration !== newDuration) {\n      // update the duration\n      if (this.mediaSource.readyState !== 'open') {\n        this.mediaSource.addEventListener('sourceopen', setDuration);\n      } else {\n        setDuration();\n      }\n    }\n  };\n\n  /**\n   * dispose of the MasterPlaylistController and everything\n   * that it controls\n   */\n\n\n  MasterPlaylistController.prototype.dispose = function dispose() {\n    var _this34 = this;\n\n    this.decrypter_.terminate();\n    this.masterPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      var groups = _this34.mediaTypes_[type].groups;\n\n      for (var id in groups) {\n        groups[id].forEach(function (group) {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n  };\n\n  /**\n   * return the master playlist object if we have one\n   *\n   * @return {Object} the master playlist object that we parsed\n   */\n\n\n  MasterPlaylistController.prototype.master = function master() {\n    return this.masterPlaylistLoader_.master;\n  };\n\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n\n\n  MasterPlaylistController.prototype.media = function media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.masterPlaylistLoader_.media() || this.initialMedia_;\n  };\n\n  /**\n   * setup our internal source buffers on our segment Loaders\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.setupSourceBuffers_ = function setupSourceBuffers_() {\n    var media = this.masterPlaylistLoader_.media();\n    var mimeTypes = void 0;\n\n    // wait until a media playlist is available and the Media Source is\n    // attached\n    if (!media || this.mediaSource.readyState !== 'open') {\n      return;\n    }\n\n    mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n    if (mimeTypes.length < 1) {\n      this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n      return this.mediaSource.endOfStream('decode');\n    }\n\n    this.configureLoaderMimeTypes_(mimeTypes);\n    // exclude any incompatible variant streams from future playlist\n    // selection\n    this.excludeIncompatibleVariants_(media);\n  };\n\n  MasterPlaylistController.prototype.configureLoaderMimeTypes_ = function configureLoaderMimeTypes_(mimeTypes) {\n    // If the content is demuxed, we can't start appending segments to a source buffer\n    // until both source buffers are set up, or else the browser may not let us add the\n    // second source buffer (it will assume we are playing either audio only or video\n    // only).\n    var sourceBufferEmitter =\n    // If there is more than one mime type\n    mimeTypes.length > 1 &&\n    // and the first mime type does not have muxed video and audio\n    mimeTypes[0].indexOf(',') === -1 &&\n    // and the two mime types are different (they can be the same in the case of audio\n    // only with alternate audio)\n    mimeTypes[0] !== mimeTypes[1] ?\n    // then we want to wait on the second source buffer\n    new videojs$1.EventTarget() :\n    // otherwise there is no need to wait as the content is either audio only,\n    // video only, or muxed content.\n    null;\n\n    this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n    if (mimeTypes[1]) {\n      this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n    }\n  };\n\n  /**\n   * Blacklists playlists with codecs that are unsupported by the browser.\n   */\n\n\n  MasterPlaylistController.prototype.excludeUnsupportedVariants_ = function excludeUnsupportedVariants_() {\n    this.master().playlists.forEach(function (variant) {\n      if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n        variant.excludeUntil = Infinity;\n      }\n    });\n  };\n\n  /**\n   * Blacklist playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current master playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.excludeIncompatibleVariants_ = function excludeIncompatibleVariants_(media) {\n    var codecCount = 2;\n    var videoCodec = null;\n    var codecs = void 0;\n\n    if (media.attributes.CODECS) {\n      codecs = parseCodecs(media.attributes.CODECS);\n      videoCodec = codecs.videoCodec;\n      codecCount = codecs.codecCount;\n    }\n\n    this.master().playlists.forEach(function (variant) {\n      var variantCodecs = {\n        codecCount: 2,\n        videoCodec: null\n      };\n\n      if (variant.attributes.CODECS) {\n        variantCodecs = parseCodecs(variant.attributes.CODECS);\n      }\n\n      // if the streams differ in the presence or absence of audio or\n      // video, they are incompatible\n      if (variantCodecs.codecCount !== codecCount) {\n        variant.excludeUntil = Infinity;\n      }\n\n      // if h.264 is specified on the current playlist, some flavor of\n      // it must be specified on all compatible variants\n      if (variantCodecs.videoCodec !== videoCodec) {\n        variant.excludeUntil = Infinity;\n      }\n    });\n  };\n\n  MasterPlaylistController.prototype.updateAdCues_ = function updateAdCues_(media) {\n    var offset = 0;\n    var seekable$$1 = this.seekable();\n\n    if (seekable$$1.length) {\n      offset = seekable$$1.start(0);\n    }\n\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  };\n\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {Number} Desired forward buffer length in seconds\n   */\n\n\n  MasterPlaylistController.prototype.goalBufferLength = function goalBufferLength() {\n    var currentTime = this.tech_.currentTime();\n    var initial = Config.GOAL_BUFFER_LENGTH;\n    var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n\n    return Math.min(initial + currentTime * rate, max);\n  };\n\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {Number} Desired buffer low water line in seconds\n   */\n\n\n  MasterPlaylistController.prototype.bufferLowWaterLine = function bufferLowWaterLine() {\n    var currentTime = this.tech_.currentTime();\n    var initial = Config.BUFFER_LOW_WATER_LINE;\n    var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n\n    return Math.min(initial + currentTime * rate, max);\n  };\n\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n    return enable;\n  };\n};\n\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n\n  // Get a reference to a bound version of fastQualityChange_\n  var fastChangeFunction = hlsHandler.masterPlaylistController_.fastQualityChange_.bind(hlsHandler.masterPlaylistController_);\n\n  // some playlist attributes are optional\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH;\n\n  // The id is simply the ordinality of the media playlist\n  // within the master playlist\n  this.id = id;\n\n  // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, fastChangeFunction);\n};\n\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists;\n\n  // Add a single API-specific function to the HlsHandler instance\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\n// Set of events that reset the playback-watcher time check logic and clear the timeout\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this35 = this;\n\n    classCallCheck(this, PlaybackWatcher);\n\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this35.monitorCurrentTime_();\n    };\n    var waitingHandler = function waitingHandler() {\n      return _this35.techWaiting_();\n    };\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this35.cancelTimer_();\n    };\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this35.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n\n    // Define the dispose function to clean up our events\n    this.dispose = function () {\n      _this35.logger_('dispose');\n      _this35.tech_.off('seekablechanged', fixesBadSeeksHandler);\n      _this35.tech_.off('waiting', waitingHandler);\n      _this35.tech_.off(timerCancelEvents, cancelTimerHandler);\n      _this35.tech_.off('canplay', canPlayHandler);\n      if (_this35.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this35.checkCurrentTimeTimeout_);\n      }\n      _this35.cancelTimer_();\n    };\n  }\n\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.monitorCurrentTime_ = function monitorCurrentTime_() {\n    this.checkCurrentTime_();\n\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    }\n\n    // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  };\n\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.checkCurrentTime_ = function checkCurrentTime_() {\n    if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = this.tech_.currentTime();\n      return;\n    }\n\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  };\n\n  /**\n   * Cancels any pending timers and resets the 'timeupdate' mechanism\n   * designed to detect that we are stalled\n   *\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.cancelTimer_ = function cancelTimer_() {\n    this.consecutiveUpdates = 0;\n\n    if (this.timer_) {\n      this.logger_('cancelTimer_');\n      clearTimeout(this.timer_);\n    }\n\n    this.timer_ = null;\n  };\n\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {Boolean} whether an action was taken to fix the seek\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.fixesBadSeeks_ = function fixesBadSeeks_() {\n    var seeking = this.tech_.seeking();\n    var seekable = this.seekable();\n    var currentTime = this.tech_.currentTime();\n    var seekTo = void 0;\n\n    if (seeking && this.afterSeekableWindow_(seekable, currentTime)) {\n      var seekableEnd = seekable.end(seekable.length - 1);\n\n      // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n      seekTo = seekableEnd;\n    }\n\n    if (seeking && this.beforeSeekableWindow_(seekable, currentTime)) {\n      var seekableStart = seekable.start(0);\n\n      // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n      seekTo = seekableStart + SAFE_TIME_DELTA;\n    }\n\n    if (typeof seekTo !== 'undefined') {\n      this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.waiting_ = function waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    }\n\n    // All tech waiting checks failed. Use last resort correction\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n    var currentRange = findRange(buffered, currentTime);\n\n    // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(currentTime);\n\n      this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.');\n\n      // unknown waiting corrections may be useful for monitoring QoS\n      this.tech_.trigger({ type: 'usage', name: 'hls-unknown-waiting' });\n      return;\n    }\n  };\n\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {Boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.techWaiting_ = function techWaiting_() {\n    var seekable = this.seekable();\n    var currentTime = this.tech_.currentTime();\n\n    if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n      // Tech is seeking or bad seek fixed, no action needed\n      return true;\n    }\n\n    if (this.tech_.seeking() || this.timer_ !== null) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      var livePoint = seekable.end(seekable.length - 1);\n\n      this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(livePoint);\n\n      // live window resyncs may be useful for monitoring QoS\n      this.tech_.trigger({ type: 'usage', name: 'hls-live-resync' });\n      return true;\n    }\n\n    var buffered = this.tech_.buffered();\n    var nextRange = findNextRange(buffered, currentTime);\n\n    if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(currentTime);\n\n      // video underflow may be useful for monitoring QoS\n      this.tech_.trigger({ type: 'usage', name: 'hls-video-underflow' });\n      return true;\n    }\n\n    // check for gap\n    if (nextRange.length > 0) {\n      var difference = nextRange.start(0) - currentTime;\n\n      this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n\n      this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n      return true;\n    }\n\n    // All checks failed. Returning false to indicate failure to correct waiting\n    return false;\n  };\n\n  PlaybackWatcher.prototype.afterSeekableWindow_ = function afterSeekableWindow_(seekable, currentTime) {\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n\n    if (currentTime > seekable.end(seekable.length - 1) + SAFE_TIME_DELTA) {\n      return true;\n    }\n\n    return false;\n  };\n\n  PlaybackWatcher.prototype.beforeSeekableWindow_ = function beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length &&\n    // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n      return true;\n    }\n\n    return false;\n  };\n\n  PlaybackWatcher.prototype.videoUnderflow_ = function videoUnderflow_(nextRange, buffered, currentTime) {\n    if (nextRange.length === 0) {\n      // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n      var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n      if (gap) {\n        this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.skipTheGap_ = function skipTheGap_(scheduledCurrentTime) {\n    var buffered = this.tech_.buffered();\n    var currentTime = this.tech_.currentTime();\n    var nextRange = findNextRange(buffered, currentTime);\n\n    this.cancelTimer_();\n\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0));\n\n    // only seek if we still have not played\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n\n    this.tech_.trigger({ type: 'usage', name: 'hls-gap-skip' });\n  };\n\n  PlaybackWatcher.prototype.gapFromVideoUnderflow_ = function gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    var gaps = findGaps(buffered);\n\n    for (var i = 0; i < gaps.length; i++) {\n      var start = gaps.start(i);\n      var end = gaps.end(i);\n\n      // gap is starts no more than 4 seconds back\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start: start,\n          end: end\n        };\n      }\n    }\n\n    return null;\n  };\n\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({ IWillNotUseThisInPlugins: true });\n    var sourceObj = tech.currentSource_;\n\n    return next(sourceObj);\n  }\n};\n\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n\n  player.ready(function () {\n    player.trigger({ type: 'usage', name: 'hls-error-reload-initialized' });\n  });\n\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n\n    player.one('loadedmetadata', loadedMetadataHandler);\n\n    player.src(sourceObj);\n    player.trigger({ type: 'usage', name: 'hls-error-reload' });\n    player.play();\n  };\n\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({ type: 'usage', name: 'hls-error-reload-canceled' });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n\n    return localOptions.getSource.call(player, setSource);\n  };\n\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents);\n\n  // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n  player.reloadSourceOnError = reinitPlugin;\n};\n\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.0.0\";\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: aesDecrypter.Decrypter,\n  AsyncStream: aesDecrypter.AsyncStream,\n  decrypt: aesDecrypter.decrypt,\n  utils: utils,\n\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n\n  xhr: xhrFactory()\n};\n\n// 0.5 MB/s\nvar INITIAL_BANDWIDTH = 4194304;\n\n// Define getter/setters for config properites\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n};\n\n// HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  // upsert the content types based on the selected playlist\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    }\n\n    // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions;\n    }\n  }\n};\n\n/**\n * Whether the browser has built-in HLS support.\n */\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video');\n\n  // native HLS is definitely not supported if HTML5 video isn't\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  // HLS manifests can go by many mime-types\n  var canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n\n  return canPlay.some(function (canItPlay) {\n    return (/maybe|probably/i.test(video.canPlayType(canItPlay))\n    );\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return (/maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'))\n  );\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler);\n\n    // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n    var _this36 = possibleConstructorReturn(this, _Component.call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech_.hls instead.');\n            tech.trigger({ type: 'usage', name: 'hls-player-access' });\n            return _this36;\n          }\n        });\n      }\n\n      // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n      _player.vhs = _this36;\n      // deprecated, for backwards compatibility\n      _player.dash = _this36;\n    }\n\n    _this36.tech_ = tech;\n    _this36.source_ = source;\n    _this36.stats = {};\n    _this36.ignoreNextSeekingEvent_ = false;\n    _this36.setOptions_();\n\n    // overriding native HLS only works if audio tracks have been emulated\n    // error early if we're misconfigured:\n    if (_this36.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    }\n\n    // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n    _this36.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this36.tech_.el())) {\n        _this36.masterPlaylistController_.fastQualityChange_();\n      }\n    });\n\n    _this36.on(_this36.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    _this36.on(_this36.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this36.on(_this36.tech_, 'play', _this36.play);\n    return _this36;\n  }\n\n  HlsHandler.prototype.setOptions_ = function setOptions_() {\n    var _this37 = this;\n\n    // defaults\n    this.options_.withCredentials = this.options_.withCredentials || false;\n\n    if (typeof this.options_.blacklistDuration !== 'number') {\n      this.options_.blacklistDuration = 5 * 60;\n    }\n\n    // start playlist selection at a reasonable bandwidth for\n    // broadband internet (0.5 MB/s) or mobile (0.0625 MB/s)\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = INITIAL_BANDWIDTH;\n    }\n\n    // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === INITIAL_BANDWIDTH;\n\n    // grab options passed to player.src\n    ['withCredentials', 'bandwidth'].forEach(function (option) {\n      if (typeof _this37.source_[option] !== 'undefined') {\n        _this37.options_[option] = _this37.source_[option];\n      }\n    });\n\n    this.bandwidth = this.options_.bandwidth;\n  };\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n\n\n  HlsHandler.prototype.src = function src(_src, type) {\n    var _this38 = this;\n\n    // do nothing if the src is falsey\n    if (!_src) {\n      return;\n    }\n    this.setOptions_();\n    // add master playlist controller options\n    this.options_.url = this.source_.src;\n    this.options_.tech = this.tech_;\n    this.options_.externHls = Hls$1;\n    this.options_.sourceType = simpleTypeFromSourceType(type);\n\n    this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n    this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n      seekable: function seekable() {\n        return _this38.seekable();\n      }\n    }));\n\n    this.masterPlaylistController_.on('error', function () {\n      var player = videojs$1.players[_this38.tech_.options_.playerId];\n\n      player.error(_this38.masterPlaylistController_.error);\n    });\n\n    // `this` in selectPlaylist should be the HlsHandler for backwards\n    // compatibility with < v2\n    this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n\n    this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this);\n\n    // re-expose some internal objects for backwards compatibility with < v2\n    this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n    this.mediaSource = this.masterPlaylistController_.mediaSource;\n\n    // Proxy assignment of some properties to the master playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get: function get$$1() {\n          return this.masterPlaylistController_.selectPlaylist;\n        },\n        set: function set$$1(selectPlaylist) {\n          this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get: function get$$1() {\n          return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set: function set$$1(throughput) {\n          this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput;\n          // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n          this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get: function get$$1() {\n          return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n        },\n        set: function set$$1(bandwidth) {\n          this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth;\n          // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n          this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get: function get$$1() {\n          var invBandwidth = 1 / (this.bandwidth || 1);\n          var invThroughput = void 0;\n\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n\n          var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n\n          return systemBitrate;\n        },\n        set: function set$$1() {\n          videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: function get$$1() {\n          return _this38.bandwidth || 0;\n        },\n        enumerable: true\n      },\n      mediaRequests: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaRequests_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaRequestsAborted_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaRequestsErrored_() || 0;\n        },\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaTransferDuration_() || 0;\n        },\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaBytesTransferred_() || 0;\n        },\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n        },\n        enumerable: true\n      },\n      buffered: {\n        get: function get$$1() {\n          return timeRangesToArray(_this38.tech_.buffered());\n        },\n        enumerable: true\n      },\n      currentTime: {\n        get: function get$$1() {\n          return _this38.tech_.currentTime();\n        },\n        enumerable: true\n      },\n      currentSource: {\n        get: function get$$1() {\n          return _this38.tech_.currentSource_;\n        },\n        enumerable: true\n      },\n      currentTech: {\n        get: function get$$1() {\n          return _this38.tech_.name_;\n        },\n        enumerable: true\n      },\n      duration: {\n        get: function get$$1() {\n          return _this38.tech_.duration();\n        },\n        enumerable: true\n      },\n      master: {\n        get: function get$$1() {\n          return _this38.playlists.master;\n        },\n        enumerable: true\n      },\n      playerDimensions: {\n        get: function get$$1() {\n          return _this38.tech_.currentDimensions();\n        },\n        enumerable: true\n      },\n      seekable: {\n        get: function get$$1() {\n          return timeRangesToArray(_this38.tech_.seekable());\n        },\n        enumerable: true\n      },\n      timestamp: {\n        get: function get$$1() {\n          return Date.now();\n        },\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: function get$$1() {\n          return _this38.tech_.getVideoPlaybackQuality();\n        },\n        enumerable: true\n      }\n    });\n\n    this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n\n    this.masterPlaylistController_.on('selectedinitialmedia', function () {\n      // Add the manual rendition mix-in to HlsHandler\n      renditionSelectionMixin(_this38);\n      setupEmeOptions(_this38);\n    });\n\n    // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n    this.on(this.masterPlaylistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    });\n\n    // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n    this.on(this.masterPlaylistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n\n    this.tech_.ready(function () {\n      return _this38.setupQualityLevels_();\n    });\n\n    // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n    if (!this.tech_.el()) {\n      return;\n    }\n\n    this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n  };\n\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n\n\n  HlsHandler.prototype.setupQualityLevels_ = function setupQualityLevels_() {\n    var _this39 = this;\n\n    var player = videojs$1.players[this.tech_.options_.playerId];\n\n    if (player && player.qualityLevels) {\n      this.qualityLevels_ = player.qualityLevels();\n\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        handleHlsLoadedMetadata(_this39.qualityLevels_, _this39);\n      });\n\n      this.playlists.on('mediachange', function () {\n        handleHlsMediaChange(_this39.qualityLevels_, _this39.playlists);\n      });\n    }\n  };\n\n  /**\n   * Begin playing the video.\n   */\n\n\n  HlsHandler.prototype.play = function play() {\n    this.masterPlaylistController_.play();\n  };\n\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n\n\n  HlsHandler.prototype.setCurrentTime = function setCurrentTime(currentTime) {\n    this.masterPlaylistController_.setCurrentTime(currentTime);\n  };\n\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n\n\n  HlsHandler.prototype.duration = function duration() {\n    return this.masterPlaylistController_.duration();\n  };\n\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n\n\n  HlsHandler.prototype.seekable = function seekable() {\n    return this.masterPlaylistController_.seekable();\n  };\n\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n\n\n  HlsHandler.prototype.dispose = function dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n    if (this.masterPlaylistController_) {\n      this.masterPlaylistController_.dispose();\n    }\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n    _Component.prototype.dispose.call(this);\n  };\n\n  return HlsHandler;\n}(Component$1);\n\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n}\n\n// register source handlers with the appropriate techs\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nmodule.exports = videojs$1;\n","exports.nextTick = function nextTick(fn) {\n\tsetTimeout(fn, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n","/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar Stream = (function () {\n  function Stream() {\n    _classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n  _createClass(Stream, [{\n    key: 'on',\n    value: function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {String} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {Boolean} if we could turn it off or not\n     */\n  }, {\n    key: 'off',\n    value: function off(type, listener) {\n      var index = undefined;\n\n      if (!this.listeners[type]) {\n        return false;\n      }\n      index = this.listeners[type].indexOf(listener);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {String} type the event name\n     */\n  }, {\n    key: 'trigger',\n    value: function trigger(type) {\n      var callbacks = undefined;\n      var i = undefined;\n      var length = undefined;\n      var args = undefined;\n\n      callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = Array.prototype.slice.call(arguments, 1);\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    }\n\n    /**\n     * Destroys the stream and cleans up.\n     */\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.listeners = {};\n    }\n\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n  }, {\n    key: 'pipe',\n    value: function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    }\n  }]);\n\n  return Stream;\n})();\n\nexports['default'] = Stream;\nmodule.exports = exports['default'];","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\nvar _lineStream = require('./line-stream');\n\nvar _lineStream2 = _interopRequireDefault(_lineStream);\n\nvar _parseStream = require('./parse-stream');\n\nvar _parseStream2 = _interopRequireDefault(_parseStream);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file m3u8/parser.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\nvar Parser = function (_Stream) {\n  _inherits(Parser, _Stream);\n\n  function Parser() {\n    _classCallCheck(this, Parser);\n\n    var _this = _possibleConstructorReturn(this, (Parser.__proto__ || Object.getPrototypeOf(Parser)).call(this));\n\n    _this.lineStream = new _lineStream2['default']();\n    _this.parseStream = new _parseStream2['default']();\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n    var self = _this;\n    /* eslint-enable consistent-this */\n    var uris = [];\n    var currentUri = {};\n    // if specified, the active EXT-X-MAP definition\n    var currentMap = void 0;\n    // if specified, the active decryption key\n    var _key = void 0;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    };\n    // group segments into numbered timelines delineated by discontinuities\n    var currentTimeline = 0;\n\n    // the manifest is empty until the parse stream begins delivering data\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    };\n\n    // update the manifest with the m3u8 entry from the parse stream\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              }\n              // clear the active encryption key\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              }\n\n              // setup an encryption key for upcoming segments\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              }\n\n              // find the media group, creating defaults as necessary\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\n              // collect the rendition metadata\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              }\n\n              // insert the new rendition\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              this.manifest.dateTimeString = entry.dateTimeString;\n              this.manifest.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.totalDuration = entry.duration;\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri);\n\n          // if no explicit duration was declared, use the target duration\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          }\n          // annotate with encryption information, if necessary\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline;\n          // annotate with initialization segment information, if necessary\n          if (currentMap) {\n            currentUri.map = currentMap;\n          }\n\n          // prepare for the next URI\n          currentUri = {};\n        },\n        comment: function comment() {\n          // comments are not important for playback\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  _createClass(Parser, [{\n    key: 'push',\n    value: function push(chunk) {\n      this.lineStream.push(chunk);\n    }\n\n    /**\n     * Flush any remaining input. This can be handy if the last line of an M3U8\n     * manifest did not contain a trailing newline but the file has been\n     * completely received.\n     */\n\n  }, {\n    key: 'end',\n    value: function end() {\n      // flush any buffered input\n      this.lineStream.push('\\n');\n    }\n  }]);\n\n  return Parser;\n}(_stream2['default']);\n\nexports['default'] = Parser;","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file m3u8/parse-stream.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n\n/**\n * Parse attributes from a line given the seperator\n *\n * @param {String} attributes the attibute line to parse\n */\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr = void 0;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    }\n\n    // split the key and value\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1);\n    // trim whitespace and remove optional quotes around the value\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n  return result;\n};\n\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\nvar ParseStream = function (_Stream) {\n  _inherits(ParseStream, _Stream);\n\n  function ParseStream() {\n    _classCallCheck(this, ParseStream);\n\n    return _possibleConstructorReturn(this, (ParseStream.__proto__ || Object.getPrototypeOf(ParseStream)).call(this));\n  }\n\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {String} line a single line of an M3U8 file to parse\n   */\n\n\n  _createClass(ParseStream, [{\n    key: 'push',\n    value: function push(line) {\n      var match = void 0;\n      var event = void 0;\n\n      // strip whitespace\n      line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n      if (line.length === 0) {\n        // ignore empty lines\n        return;\n      }\n\n      // URIs\n      if (line[0] !== '#') {\n        this.trigger('data', {\n          type: 'uri',\n          uri: line\n        });\n        return;\n      }\n\n      // Comments\n      if (line.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: line.slice(1)\n        });\n        return;\n      }\n\n      // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n      line = line.replace('\\r', '');\n\n      // Tags\n      match = /^#EXTM3U/.exec(line);\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n        if (match[2]) {\n          event.title = match[2];\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                _attributes$BYTERANGE2 = _slicedToArray(_attributes$BYTERANGE, 2),\n                length = _attributes$BYTERANGE2[0],\n                offset = _attributes$BYTERANGE2[1];\n\n            event.byterange = {};\n            if (length) {\n              event.byterange.length = parseInt(length, 10);\n            }\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n            event.attributes.RESOLUTION = resolution;\n          }\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-ENDLIST/.exec(line);\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n      match = /^#EXT-X-DISCONTINUITY/.exec(line);\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          // parse the IV string into a Uint32Array\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        this.trigger('data', event);\n        return;\n      }\n\n      // unknown tag type\n      this.trigger('data', {\n        type: 'tag',\n        data: line.slice(4)\n      });\n    }\n  }]);\n\n  return ParseStream;\n}(_stream2['default']);\n\nexports['default'] = ParseStream;","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (global && global.ArrayBuffer) {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\n'use strict';\n\nvar PADDING;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nmodule.exports = function pad(plaintext) {\n  var padding = PADDING[(plaintext.byteLength % 16) || 0],\n      result = new Uint8Array(plaintext.byteLength + padding.length);\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n  return result;\n};\n\n// pre-define the padding values\nPADDING = [\n  [16, 16, 16, 16,\n   16, 16, 16, 16,\n   16, 16, 16, 16,\n   16, 16, 16, 16],\n\n  [15, 15, 15, 15,\n   15, 15, 15, 15,\n   15, 15, 15, 15,\n   15, 15, 15],\n\n  [14, 14, 14, 14,\n   14, 14, 14, 14,\n   14, 14, 14, 14,\n   14, 14],\n\n  [13, 13, 13, 13,\n   13, 13, 13, 13,\n   13, 13, 13, 13,\n   13],\n\n  [12, 12, 12, 12,\n   12, 12, 12, 12,\n   12, 12, 12, 12],\n\n  [11, 11, 11, 11,\n   11, 11, 11, 11,\n   11, 11, 11],\n\n  [10, 10, 10, 10,\n   10, 10, 10, 10,\n   10, 10],\n\n  [9, 9, 9, 9,\n   9, 9, 9, 9,\n   9],\n\n  [8, 8, 8, 8,\n   8, 8, 8, 8],\n\n  [7, 7, 7, 7,\n   7, 7, 7],\n\n  [6, 6, 6, 6,\n   6, 6],\n\n  [5, 5, 5, 5,\n   5],\n\n  [4, 4, 4, 4],\n\n  [3, 3, 3],\n\n  [2, 2],\n\n  [1]\n];\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","'use strict';\nvar global = require('./_global');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","var core = module.exports = { version: '2.5.6' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = undefined;\n  var x = undefined;\n  var xInv = undefined;\n  var d = [];\n  var th = [];\n  var x2 = undefined;\n  var x4 = undefined;\n  var x8 = undefined;\n  var s = undefined;\n  var tEnc = undefined;\n  var tDec = undefined;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = (function () {\n  function AES(key) {\n    _classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = undefined;\n    var j = undefined;\n    var tmp = undefined;\n    var encKey = undefined;\n    var decKey = undefined;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n  _createClass(AES, [{\n    key: 'decrypt',\n    value: function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      var key = this._key[1];\n      // state variables a,b,c,d are loaded with pre-whitened data\n      var a = encrypted0 ^ key[0];\n      var b = encrypted3 ^ key[1];\n      var c = encrypted2 ^ key[2];\n      var d = encrypted1 ^ key[3];\n      var a2 = undefined;\n      var b2 = undefined;\n      var c2 = undefined;\n\n      // key.length === 2 ?\n      var nInnerRounds = key.length / 4 - 2;\n      var i = undefined;\n      var kIndex = 4;\n      var table = this._tables[1];\n\n      // load up the tables\n      var table0 = table[0];\n      var table1 = table[1];\n      var table2 = table[2];\n      var table3 = table[3];\n      var sbox = table[4];\n\n      // Inner rounds. Cribbed from OpenSSL.\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;b = b2;c = c2;\n      }\n\n      // Last round.\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;a = b;b = c;c = d;d = a2;\n      }\n    }\n  }]);\n\n  return AES;\n})();\n\nexports['default'] = AES;\nmodule.exports = exports['default'];","/**\n * mpd-parser\n * @version 0.6.1\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\nimport URLToolkit from 'url-toolkit';\nimport window from 'global/window';\n\nvar version = \"0.6.1\";\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }];\n    // targetDuration should be the same duration as the only segment\n    attributes.duration = attributes.sourceDuration;\n  }\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\n\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + ' (' + role + ')';\n    }\n\n    // skip if we already have the highest quality audio for a language\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      'default': role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text';\n\n    // skip if we already have subtitles\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      'default': false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  }\n\n  // grab all master attributes\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === undefined ? 0 : _dashPlaylists$0$attr2;\n\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = dashPlaylists.filter(videoOnly).map(formatVideoPlaylist);\n  var audioPlaylists = dashPlaylists.filter(audioOnly);\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar isObject = function isObject(obj) {\n  return !!obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n\n    Object.keys(source).forEach(function (key) {\n\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location.href, baseUrl);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === undefined ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === undefined ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === undefined ? '' : _ref$range;\n\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === undefined ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp;\n\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === undefined ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === undefined ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({ number: number, duration: duration / timescale, time: time, timeline: timeline });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\n\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  'static': function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n\n\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === undefined ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === undefined ? Infinity : _attributes$timeShift;\n\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === undefined ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb;\n\n\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === undefined ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1;\n\n    // final segment may be less than full segment duration\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return '' + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? { sourceURL: '', range: '' } : _attributes$initializ;\n\n\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ;\n\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n\n  segment.map = initSegment;\n\n  return segment;\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === undefined ? [] : _attributes$segmentUr;\n\n  // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo = void 0;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    }\n    // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n  }).filter(function (segment) {\n    return segment;\n  });\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === undefined ? '' : _attributes$indexRang,\n      duration = attributes.duration;\n\n  // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({ baseUrl: baseUrl, source: baseUrl, range: indexRange });\n\n  segment.map = initSegment;\n\n  // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  }\n\n  // This is used for mediaSequence\n  segment.number = 0;\n\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n\n  var segmentAttributes = void 0;\n  var segmentsFn = void 0;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return { attributes: attributes };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline);\n\n  // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === undefined ? 1 : _segmentAttributes$ti;\n\n\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\n\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\n\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60;\n\n  // P10Y10M10DT10H10M10.1S\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\n\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/;\n\n  // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\n// TODO: maybe order these in some way that makes it easy to find specific attributes\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n\n    a[e.name] = parseFn(e.value);\n\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({ tag: 'SegmentURL' }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0];\n\n  // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = { sourceURL: template.initialization };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n\n  return segmentInfo;\n};\n\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, { baseUrl: baseUrl })\n      };\n    });\n  };\n};\n\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = { attributes: attributes };\n\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = { role: parseAttributes(role) };\n\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, { contentProtection: contentProtection });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, periodIndex) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var periodAttributes = merge(mpdAttributes, periodAtt, { periodIndex: periodIndex });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\nvar inheritAttributes = function inheritAttributes(mpd) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$manifestUri = options.manifestUri,\n      manifestUri = _options$manifestUri === undefined ? '' : _options$manifestUri,\n      _options$NOW = options.NOW,\n      NOW = _options$NOW === undefined ? Date.now() : _options$NOW,\n      _options$clientOffset = options.clientOffset,\n      clientOffset = _options$clientOffset === undefined ? 0 : _options$clientOffset;\n\n  var periods = findChildren(mpd, 'Period');\n\n  if (periods.length !== 1) {\n    // TODO add support for multiperiod\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n","module.exports = {};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","/**\n * @file async-stream.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = (function (_Stream) {\n  _inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    _classCallCheck(this, AsyncStream);\n\n    _get(Object.getPrototypeOf(AsyncStream.prototype), 'constructor', this).call(this, _stream2['default']);\n    this.jobs = [];\n    this.delay = 1;\n    this.timeout_ = null;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n  _createClass(AsyncStream, [{\n    key: 'processJob_',\n    value: function processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n  }, {\n    key: 'push',\n    value: function push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }]);\n\n  return AsyncStream;\n})(_stream2['default']);\n\nexports['default'] = AsyncStream;\nmodule.exports = exports['default'];","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\n/**\n * @see https://developers.google.com/youtube/iframe_api_reference#Events\n * `volumeChange` is not officially supported but seems to work\n * it emits an object: `{volume: 82.6923076923077, muted: false}`\n */\nexports.default = ['ready', 'stateChange', 'playbackQualityChange', 'playbackRateChange', 'error', 'apiChange', 'volumeChange'];\nmodule.exports = exports['default'];","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\n/**\n * @see https://developers.google.com/youtube/iframe_api_reference#Functions\n */\nexports.default = ['cueVideoById', 'loadVideoById', 'cueVideoByUrl', 'loadVideoByUrl', 'playVideo', 'pauseVideo', 'stopVideo', 'getVideoLoadedFraction', 'cuePlaylist', 'loadPlaylist', 'nextVideo', 'previousVideo', 'playVideoAt', 'setShuffle', 'setLoop', 'getPlaylist', 'getPlaylistIndex', 'setOption', 'mute', 'unMute', 'isMuted', 'setVolume', 'getVolume', 'seekTo', 'getPlayerState', 'getPlaybackRate', 'setPlaybackRate', 'getAvailablePlaybackRates', 'getPlaybackQuality', 'setPlaybackQuality', 'getAvailableQualityLevels', 'getCurrentTime', 'getDuration', 'removeEventListener', 'getVideoUrl', 'getVideoEmbedCode', 'getOptions', 'getOption', 'addEventListener', 'destroy', 'setSize', 'getIframe'];\nmodule.exports = exports['default'];","/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _decrypter = require('./decrypter');\n\nvar _asyncStream = require('./async-stream');\n\nvar _asyncStream2 = _interopRequireDefault(_asyncStream);\n\nexports['default'] = {\n  decrypt: _decrypter.decrypt,\n  Decrypter: _decrypter.Decrypter,\n  AsyncStream: _asyncStream2['default']\n};\nmodule.exports = exports['default'];","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  BUFFERING: 3,\n  ENDED: 0,\n  PAUSED: 2,\n  PLAYING: 1,\n  UNSTARTED: -1,\n  VIDEO_CUED: 5\n};\nmodule.exports = exports[\"default\"];","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","'use strict';\n\nvar _lineStream = require('./line-stream');\n\nvar _lineStream2 = _interopRequireDefault(_lineStream);\n\nvar _parseStream = require('./parse-stream');\n\nvar _parseStream2 = _interopRequireDefault(_parseStream);\n\nvar _parser = require('./parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nmodule.exports = {\n  LineStream: _lineStream2['default'],\n  ParseStream: _parseStream2['default'],\n  Parser: _parser2['default']\n}; /**\n    * @file m3u8/index.js\n    *\n    * Utilities for parsing M3U8 files. If the entire manifest is available,\n    * `Parser` will create an object representation with enough detail for managing\n    * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n    * that do not assume the entirety of the manifest is ready and expose a\n    * ReadableStream-like interface.\n    */","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","/*\n * pkcs7\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\n'use strict';\n\nexports.pad = require('./pad.js');\nexports.unpad = require('./unpad.js');\n"],"sourceRoot":""}